Loading rawg from data/game/rawg_clean.csv
Loading steam from data/game/steam_clean.csv
Current steam columns Index(['english', 'required_age', 'achievements', 'positive_ratings',
       'negative_ratings', 'average_playtime', 'median_playtime', 'price',
       'cat_Captions available', 'cat_Co-op', 'cat_Commentary available',
       'cat_Cross-Platform Multiplayer', 'cat_Full controller support',
       'cat_In-App Purchases', 'cat_Includes Source SDK',
       'cat_Includes level editor', 'cat_Local Co-op',
       'cat_Local Multi-Player', 'cat_MMO', 'cat_Mods',
       'cat_Mods (require HL2)', 'cat_Multi-player', 'cat_Online Co-op',
       'cat_Online Multi-Player', 'cat_Partial Controller Support',
       'cat_Shared/Split Screen', 'cat_Single-player', 'cat_Stats',
       'cat_Steam Achievements', 'cat_Steam Cloud', 'cat_Steam Leaderboards',
       'cat_Steam Trading Cards', 'cat_Steam Turn Notifications',
       'cat_Steam Workshop', 'cat_SteamVR Collectibles', 'cat_VR Support',
       'cat_Valve Anti-Cheat enabled', 'name'],
      dtype='object')
Current rawg columns Index(['name', 'rating', 'playtime', 'achievements_count', 'suggestions_count',
       'game_series_count', 'reviews_count', 'added_status_yet',
       'added_status_owned', 'added_status_beaten', 'added_status_toplay',
       'added_status_dropped', 'added_status_playing', 'has_website',
       'released_year_before_2020', 'updated_year_before_2020', '3DO',
       'Android', 'Apple II', 'Atari 2600', 'Atari 5200', 'Atari 7800',
       'Atari 8-bit', 'Atari Flashback', 'Atari Lynx', 'Atari ST',
       'Atari XEGS', 'Classic Macintosh', 'Commodore / Amiga', 'Dreamcast',
       'Game Boy', 'Game Boy Advance', 'Game Boy Color', 'Game Gear',
       'GameCube', 'Genesis', 'Jaguar', 'Linux', 'NES', 'Neo Geo',
       'Nintendo 3DS', 'Nintendo 64', 'Nintendo DS', 'Nintendo DSi',
       'Nintendo Switch', 'PC', 'PS Vita', 'PSP', 'PlayStation',
       'PlayStation 2', 'PlayStation 3', 'PlayStation 4', 'PlayStation 5',
       'SEGA 32X', 'SEGA CD', 'SEGA Master System', 'SEGA Saturn', 'SNES',
       'Web', 'Wii', 'Wii U', 'Xbox', 'Xbox 360', 'Xbox One',
       'Xbox Series S/X', 'iOS', 'macOS', 'Action', 'Adventure', 'Arcade',
       'Board Games', 'Card', 'Casual', 'Educational', 'Family', 'Fighting',
       'Indie', 'Massively Multiplayer', 'Platformer', 'Puzzle', 'RPG',
       'Racing', 'Shooter', 'Simulation', 'Sports', 'Strategy'],
      dtype='object')
Splitting data
Splitting...
Matching training set
#blocks in party 1: 14089
#blocks in party 2: 197496
Done scaling
Got 18890 samples in A
Setting index
Linking records
Step 1 done.
Finished Linking, got 944500 samples
Filling null values
extracting data to numpy arrays
Matching validation set
#blocks in party 1: 2472
#blocks in party 2: 197496
Done scaling
Got 2699 samples in A
Setting index
Linking records
Step 1 done.
Finished Linking, got 134950 samples
Filling null values
extracting data to numpy arrays
Matching test set
#blocks in party 1: 4633
#blocks in party 2: 197496
Done scaling
Got 5398 samples in A
Setting index
Linking records
Step 1 done.
Finished Linking, got 269900 samples
Filling null values
extracting data to numpy arrays
Replace NaN with mean value
Train done.
Validation done.
Test done.
Replace NaN with mean value
Train done.
Validation done.
Test done.
Grouping data
Done
Checking if B is sorted by similarity: False
Sorting data
Done
Retrieve data
Done
Grouping data
Done
Checking if B is sorted by similarity: False
Sorting data
Done
Retrieve data
Done
Grouping data
Done
Checking if B is sorted by similarity: False
Sorting data
Done
Retrieve data
Done
Saving data to cache
Saved
Calculating noise scale
Adding noise of scale 0.0 to sim_scores
Adding noise of scale 0.0 to sim_scores
Adding noise of scale 0.0 to sim_scores
Preparing time (sec): 217
Initializing dataloader
Done
Prepare for training
Start training
SplitNN summary
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
SplitNN                                  [128, 10]                 --
├─ModuleList: 1-1                        --                        --
│    └─MLP: 2-3                          [128, 50]                 (recursive)
├─MLP: 1                                 --                        --
│    └─ModuleList: 2-2                   --                        11,110
│    │    └─Linear: 3-5                  [128, 100]                (recursive)
│    │    └─Linear: 3-6                  [128, 10]                 (recursive)
├─ModuleList: 1-1                        --                        --
│    └─MLP: 2-3                          [128, 50]                 (recursive)
│    │    └─ModuleList: 3-3              --                        8,850
│    └─MLP: 2-4                          [128, 50]                 --
│    │    └─ModuleList: 3-4              --                        13,650
├─MLP: 1-2                               [128, 10]                 11,110
│    └─ModuleList: 2-2                   --                        11,110
│    │    └─Linear: 3-5                  [128, 100]                (recursive)
│    │    └─Linear: 3-6                  [128, 10]                 (recursive)
==========================================================================================
Total params: 33,610
Trainable params: 33,610
Non-trainable params: 0
Total mult-adds (M): 5.72
==========================================================================================
Input size (MB): 0.06
Forward/backward pass size (MB): 0.31
Params size (MB): 0.09
Estimated Total Size (MB): 0.46
==========================================================================================
Merge model summary
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
ConvModel                                [1, 1]                    --
├─Conv2d: 1-1                            [1, 8, 56, 10]            64
├─Dropout: 1-2                           [1, 4480]                 --
├─Linear: 1-3                            [1, 400]                  1,792,400
├─Dropout: 1-4                           [1, 400]                  --
├─Linear: 1-5                            [1, 1]                    401
==========================================================================================
Total params: 1,792,865
Trainable params: 1,792,865
Non-trainable params: 0
Total mult-adds (M): 1.83
==========================================================================================
Input size (MB): 0.00
Forward/backward pass size (MB): 0.04
Params size (MB): 7.17
Estimated Total Size (MB): 7.21
==========================================================================================
Similarity model summary
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
MLP                                      [1, 1]                    --
├─ModuleList: 1-1                        --                        --
│    └─Linear: 2-1                       [1, 10]                   20
│    └─Linear: 2-2                       [1, 1]                    11
==========================================================================================
Total params: 31
Trainable params: 31
Non-trainable params: 0
Total mult-adds (M): 0.00
==========================================================================================
Input size (MB): 0.00
Forward/backward pass size (MB): 0.00
Params size (MB): 0.00
Estimated Total Size (MB): 0.00
==========================================================================================
n_classes=2
task=binary_cls
model_name=game_fedsim_2022-07-28-19-53-16
sche_threshold=0.0001
sche_patience=10
sche_factor=0.1
use_scheduler=False
num_workers=4
device=cpu
test_batch_size=4096
train_batch_size=128
learning_rate=0.001
weight_decay=1e-05
num_epochs=100
model_save_path=ckp/game_fedsim_2022-07-28-19-53-16.pth
test_rate=0.2
val_rate=0.1
multiprocess_context=fork
metrics=['accuracy']
metrics_f=[<metric.accuracy.Accuracy object at 0x7fa6fdd83f40>]
hidden_sizes=[200, 100]
model=SplitNN(
  (agg_model): MLP(
    (fc_layers): ModuleList(
      (0): Linear(in_features=100, out_features=100, bias=True)
      (1): Linear(in_features=100, out_features=10, bias=True)
    )
  )
  (local_models): ModuleList(
    (0): MLP(
      (fc_layers): ModuleList(
        (0): Linear(in_features=37, out_features=100, bias=True)
        (1): Linear(in_features=100, out_features=50, bias=True)
      )
    )
    (1): MLP(
      (fc_layers): ModuleList(
        (0): Linear(in_features=85, out_features=100, bias=True)
        (1): Linear(in_features=100, out_features=50, bias=True)
      )
    )
  )
)
writer=<torch.utils.tensorboard.writer.SummaryWriter object at 0x7fa6fdd83b80>
dataset_type=real
drop_key=True
num_common_features=1
tree_radius=0.01
tree_leaf_size=1000
knn_k=50
grid_min=-10.0
grid_max=10.0
grid_width=1.5
sim_scaler=StandardScaler()
filter_top_k=None
link_n_jobs=1
psig_p=7
sim_leak_p=1.0
link_threshold_t=0.1
link_epsilon=0.1
n_hash_lsh=20
edit_distance_threshold=1
n_hash_func=10
collision_rate=0.05
qgram_q=4
link_delta=0.1
feature_wise_sim=False
blocking_method=knn_str
center_threshold=0.5
n_clusters=100
local_hidden_sizes=[[100], [100]]
cut_dims=[50, 50]
agg_hidden_sizes=[100]
scale_analysis=None
disable_weight=False
disable_sort=False
mlp_merge=None
use_sim=True
use_conv=True
conv_kernel_v_size=7
conv_n_channels=8
merge_dropout_p=0.7
raw_output_dim=10
log_dir=log/game_fedsim_2022-07-28-19-53-16/
update_sim_freq=1
sim_model_save_path=ckp/game_fedsim_2022-07-28-19-53-16_sim.pth
merge_model_save_path=ckp/game_fedsim_2022-07-28-19-53-16_merge.pth
sim_batch_size=128
sim_weight_decay=1e-05
sim_learning_rate=0.001
merge_model=ConvModel(
  (conv1): Conv2d(1, 8, kernel_size=(7, 1), stride=(1, 1), padding=(6, 0))
  (fc1): Linear(in_features=4480, out_features=400, bias=True)
  (fc2): Linear(in_features=400, out_features=1, bias=True)
  (dropout1): Dropout(p=0.7, inplace=False)
  (dropout2): Dropout(p=0.7, inplace=False)
)
sim_model=MLP(
  (fc_layers): ModuleList(
    (0): Linear(in_features=1, out_features=10, bias=True)
    (1): Linear(in_features=10, out_features=1, bias=True)
  )
)
sim_hidden_sizes=[10]
merge_hidden_sizes=[400]
data1_shape=(26987, 38)
data2_shape=(439999, 86)
