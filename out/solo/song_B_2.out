  0%|          | 0/244489 [00:00<?, ?it/s]  0%|          | 395/244489 [00:00<01:01, 3948.38it/s]  1%|          | 1294/244489 [00:00<00:35, 6912.60it/s]  1%|          | 2108/244489 [00:00<00:32, 7471.31it/s]  1%|          | 2940/244489 [00:00<00:30, 7802.86it/s]  2%|▏         | 3742/244489 [00:00<00:30, 7880.14it/s]  2%|▏         | 4545/244489 [00:00<00:30, 7928.25it/s]  2%|▏         | 5338/244489 [00:00<00:31, 7647.74it/s]  2%|▏         | 6105/244489 [00:00<00:31, 7538.51it/s]  3%|▎         | 6865/244489 [00:00<00:31, 7556.40it/s]  3%|▎         | 7630/244489 [00:01<00:31, 7581.92it/s]  3%|▎         | 8389/244489 [00:01<00:31, 7453.91it/s]  4%|▎         | 9136/244489 [00:01<00:31, 7357.87it/s]  4%|▍         | 9873/244489 [00:01<00:32, 7153.38it/s]  4%|▍         | 10670/244489 [00:01<00:31, 7389.43it/s]  5%|▍         | 11411/244489 [00:01<00:31, 7309.13it/s]  5%|▍         | 12144/244489 [00:01<00:32, 7231.68it/s]  5%|▌         | 12869/244489 [00:01<00:32, 7118.81it/s]  6%|▌         | 13641/244489 [00:01<00:31, 7293.38it/s]  6%|▌         | 14372/244489 [00:01<00:31, 7242.50it/s]  6%|▌         | 15134/244489 [00:02<00:31, 7350.71it/s]  7%|▋         | 15902/244489 [00:02<00:30, 7446.04it/s]  7%|▋         | 16648/244489 [00:02<00:30, 7373.56it/s]  7%|▋         | 17386/244489 [00:02<00:31, 7233.70it/s]  7%|▋         | 18148/244489 [00:02<00:30, 7344.73it/s]  8%|▊         | 18884/244489 [00:02<00:30, 7344.98it/s]  8%|▊         | 19620/244489 [00:02<00:45, 4925.23it/s]  8%|▊         | 20401/244489 [00:02<00:40, 5562.30it/s]  9%|▊         | 21168/244489 [00:03<00:36, 6067.52it/s] 11%|█         | 27134/244489 [00:03<00:11, 19746.94it/s] 14%|█▎        | 33521/244489 [00:03<00:06, 31536.42it/s] 16%|█▋        | 40016/244489 [00:03<00:05, 40765.18it/s] 19%|█▊        | 45812/244489 [00:03<00:04, 45629.46it/s] 21%|██        | 51042/244489 [00:03<00:04, 47548.52it/s] 23%|██▎       | 55985/244489 [00:08<00:57, 3286.90it/s]  24%|██▍       | 59476/244489 [00:10<01:04, 2874.39it/s] 25%|██▌       | 62169/244489 [00:10<00:51, 3513.48it/s] 27%|██▋       | 64834/244489 [00:10<00:41, 4359.47it/s] 28%|██▊       | 67426/244489 [00:10<00:34, 5117.16it/s] 28%|██▊       | 69589/244489 [00:10<00:31, 5608.11it/s] 29%|██▉       | 71358/244489 [00:10<00:28, 6020.40it/s] 30%|██▉       | 72850/244489 [00:11<00:26, 6424.00it/s] 30%|███       | 74159/244489 [00:11<00:24, 6841.17it/s] 31%|███       | 75353/244489 [00:11<00:23, 7198.99it/s] 31%|███▏      | 76460/244489 [00:11<00:22, 7561.03it/s] 32%|███▏      | 77513/244489 [00:11<00:21, 7840.51it/s] 32%|███▏      | 78520/244489 [00:11<00:20, 8133.20it/s] 33%|███▎      | 79503/244489 [00:11<00:19, 8333.05it/s] 33%|███▎      | 80461/244489 [00:11<00:19, 8365.02it/s] 33%|███▎      | 81386/244489 [00:12<00:19, 8539.47it/s] 34%|███▎      | 82306/244489 [00:12<00:18, 8697.86it/s] 34%|███▍      | 83225/244489 [00:12<00:19, 8159.11it/s] 34%|███▍      | 84079/244489 [00:12<00:20, 7854.97it/s] 35%|███▍      | 84891/244489 [00:12<00:20, 7788.64it/s] 35%|███▌      | 85688/244489 [00:12<00:21, 7477.88it/s] 35%|███▌      | 86449/244489 [00:12<00:22, 7116.07it/s] 36%|███▌      | 87171/244489 [00:12<00:22, 6885.84it/s] 36%|███▌      | 87876/244489 [00:12<00:22, 6928.25it/s] 36%|███▌      | 88611/244489 [00:13<00:22, 7044.42it/s] 37%|███▋      | 89320/244489 [00:13<00:23, 6661.18it/s] 37%|███▋      | 90016/244489 [00:13<00:22, 6742.73it/s] 37%|███▋      | 90859/244489 [00:13<00:21, 7220.25it/s] 38%|███▊      | 91690/244489 [00:13<00:20, 7533.50it/s] 38%|███▊      | 92480/244489 [00:13<00:19, 7638.74it/s] 38%|███▊      | 93267/244489 [00:13<00:19, 7704.51it/s] 38%|███▊      | 94085/244489 [00:13<00:19, 7843.11it/s] 39%|███▉      | 94876/244489 [00:13<00:19, 7860.22it/s] 39%|███▉      | 95693/244489 [00:13<00:18, 7951.32it/s] 40%|███▉      | 96584/244489 [00:14<00:17, 8235.22it/s] 40%|███▉      | 97439/244489 [00:14<00:17, 8328.03it/s] 40%|████      | 98340/244489 [00:14<00:17, 8530.48it/s] 41%|████      | 99294/244489 [00:14<00:16, 8832.13it/s] 41%|████      | 100207/244489 [00:14<00:16, 8920.85it/s] 41%|████▏     | 101119/244489 [00:14<00:15, 8975.57it/s] 42%|████▏     | 102108/244489 [00:14<00:15, 9243.61it/s] 42%|████▏     | 103033/244489 [00:14<00:15, 9010.95it/s] 43%|████▎     | 103961/244489 [00:14<00:15, 9087.36it/s] 43%|████▎     | 104874/244489 [00:14<00:15, 9099.44it/s] 43%|████▎     | 105785/244489 [00:15<00:15, 9042.14it/s] 44%|████▎     | 106747/244489 [00:15<00:14, 9211.69it/s] 44%|████▍     | 107669/244489 [00:15<00:40, 3404.56it/s] 44%|████▍     | 108356/244489 [00:16<00:44, 3046.07it/s] 45%|████▍     | 108906/244489 [00:16<00:58, 2335.70it/s] 45%|████▍     | 109329/244489 [00:17<01:31, 1481.75it/s] 46%|████▌     | 111593/244489 [00:17<00:39, 3333.67it/s] 46%|████▋     | 113625/244489 [00:17<00:25, 5220.28it/s] 47%|████▋     | 114863/244489 [00:19<01:02, 2083.00it/s] 47%|████▋     | 115753/244489 [00:19<01:14, 1737.72it/s] 50%|████▉     | 122021/244489 [00:19<00:23, 5250.32it/s] 52%|█████▏    | 128356/244489 [00:20<00:12, 9669.86it/s] 54%|█████▍    | 131893/244489 [00:20<00:13, 8528.86it/s] 55%|█████▌    | 134566/244489 [00:20<00:13, 8098.64it/s] 56%|█████▌    | 136646/244489 [00:21<00:13, 7905.77it/s] 57%|█████▋    | 138320/244489 [00:21<00:13, 7812.76it/s] 57%|█████▋    | 139715/244489 [00:21<00:13, 7708.71it/s] 58%|█████▊    | 140910/244489 [00:21<00:13, 7590.61it/s] 58%|█████▊    | 141960/244489 [00:22<00:13, 7434.43it/s] 58%|█████▊    | 142900/244489 [00:22<00:13, 7321.27it/s] 59%|█████▉    | 144307/244489 [00:22<00:11, 8522.12it/s] 59%|█████▉    | 145335/244489 [00:22<00:12, 8196.75it/s] 60%|█████▉    | 146273/244489 [00:22<00:12, 8071.44it/s] 60%|██████    | 147160/244489 [00:22<00:12, 8023.50it/s] 61%|██████    | 148018/244489 [00:22<00:12, 7934.19it/s] 61%|██████    | 148849/244489 [00:22<00:12, 7859.51it/s] 61%|██████    | 149660/244489 [00:22<00:11, 7904.12it/s] 62%|██████▏   | 150469/244489 [00:23<00:11, 7865.03it/s] 62%|██████▏   | 151273/244489 [00:23<00:11, 7910.71it/s] 62%|██████▏   | 152074/244489 [00:23<00:11, 7855.85it/s] 63%|██████▎   | 152878/244489 [00:23<00:11, 7901.03it/s] 63%|██████▎   | 153679/244489 [00:23<00:11, 7930.93it/s] 63%|██████▎   | 154476/244489 [00:23<00:11, 7855.22it/s] 64%|██████▎   | 155264/244489 [00:23<00:11, 7738.64it/s] 64%|██████▍   | 156131/244489 [00:23<00:11, 8007.55it/s] 64%|██████▍   | 156934/244489 [00:23<00:10, 8013.79it/s] 65%|██████▍   | 157771/244489 [00:23<00:10, 8116.32it/s] 65%|██████▍   | 158594/244489 [00:24<00:10, 8147.89it/s] 65%|██████▌   | 159429/244489 [00:24<00:10, 8205.56it/s] 66%|██████▌   | 160251/244489 [00:24<00:10, 8150.96it/s] 66%|██████▌   | 161089/244489 [00:24<00:10, 8217.92it/s] 66%|██████▌   | 161925/244489 [00:24<00:09, 8257.69it/s] 67%|██████▋   | 162752/244489 [00:24<00:09, 8191.64it/s] 67%|██████▋   | 163589/244489 [00:24<00:09, 8241.93it/s] 67%|██████▋   | 164414/244489 [00:24<00:09, 8229.49it/s] 68%|██████▊   | 165238/244489 [00:24<00:09, 8210.09it/s] 68%|██████▊   | 166060/244489 [00:24<00:09, 8208.56it/s] 68%|██████▊   | 166881/244489 [00:25<00:09, 8197.12it/s] 69%|██████▊   | 167701/244489 [00:25<00:09, 8188.54it/s] 69%|██████▉   | 168520/244489 [00:25<00:09, 8100.04it/s] 70%|██████▉   | 170239/244489 [00:25<00:06, 10798.81it/s] 72%|███████▏  | 176371/244489 [00:25<00:02, 25844.83it/s] 73%|███████▎  | 178969/244489 [00:25<00:03, 19094.01it/s] 74%|███████▍  | 181143/244489 [00:26<00:05, 11070.15it/s] 75%|███████▍  | 182818/244489 [00:26<00:06, 10062.43it/s] 75%|███████▌  | 184220/244489 [00:26<00:06, 9473.31it/s]  76%|███████▌  | 185435/244489 [00:26<00:06, 9252.86it/s] 76%|███████▋  | 186541/244489 [00:26<00:06, 9032.46it/s] 77%|███████▋  | 187564/244489 [00:26<00:06, 9004.84it/s] 77%|███████▋  | 188548/244489 [00:27<00:06, 8690.08it/s] 77%|███████▋  | 189470/244489 [00:27<00:06, 8550.99it/s] 78%|███████▊  | 190360/244489 [00:27<00:06, 8499.56it/s] 78%|███████▊  | 191233/244489 [00:27<00:06, 8505.80it/s] 79%|███████▊  | 192100/244489 [00:27<00:06, 8387.64it/s] 79%|███████▉  | 192950/244489 [00:27<00:06, 8076.82it/s] 79%|███████▉  | 193765/244489 [00:27<00:06, 7852.70it/s] 80%|███████▉  | 194555/244489 [00:27<00:06, 7571.74it/s] 80%|███████▉  | 195316/244489 [00:27<00:06, 7183.46it/s] 80%|████████  | 196367/244489 [00:28<00:05, 8078.18it/s] 81%|████████▏ | 198811/244489 [00:28<00:03, 12622.59it/s] 82%|████████▏ | 201486/244489 [00:28<00:02, 16635.61it/s] 83%|████████▎ | 204076/244489 [00:28<00:02, 19308.59it/s] 85%|████████▍ | 206793/244489 [00:28<00:01, 21603.24it/s] 86%|████████▌ | 209347/244489 [00:28<00:01, 22761.56it/s] 87%|████████▋ | 211654/244489 [00:28<00:01, 20856.87it/s] 87%|████████▋ | 213792/244489 [00:28<00:01, 15536.00it/s] 88%|████████▊ | 215572/244489 [00:29<00:02, 13073.70it/s] 89%|████████▉ | 217085/244489 [00:29<00:02, 11962.64it/s] 89%|████████▉ | 218425/244489 [00:29<00:02, 11304.29it/s] 90%|████████▉ | 219649/244489 [00:29<00:02, 10820.11it/s] 90%|█████████ | 220790/244489 [00:29<00:02, 9347.48it/s]  91%|█████████ | 221783/244489 [00:29<00:02, 8433.72it/s] 91%|█████████ | 222668/244489 [00:29<00:02, 7936.84it/s] 91%|█████████▏| 223485/244489 [00:30<00:02, 7733.37it/s] 92%|█████████▏| 224270/244489 [00:30<00:02, 7449.88it/s] 92%|█████████▏| 225020/244489 [00:30<00:02, 7329.90it/s] 92%|█████████▏| 225776/244489 [00:30<00:02, 7388.32it/s] 93%|█████████▎| 226517/244489 [00:30<00:02, 7379.02it/s] 93%|█████████▎| 227354/244489 [00:30<00:02, 7650.52it/s] 93%|█████████▎| 228216/244489 [00:30<00:02, 7923.30it/s] 94%|█████████▎| 229088/244489 [00:30<00:01, 8151.76it/s] 94%|█████████▍| 229927/244489 [00:30<00:01, 8218.48it/s] 94%|█████████▍| 230752/244489 [00:31<00:01, 7909.95it/s] 95%|█████████▍| 231547/244489 [00:31<00:01, 7720.60it/s] 95%|█████████▌| 232323/244489 [00:31<00:01, 7601.02it/s] 95%|█████████▌| 233086/244489 [00:31<00:01, 7564.36it/s] 96%|█████████▌| 233844/244489 [00:31<00:01, 7538.32it/s] 96%|█████████▌| 234604/244489 [00:31<00:01, 7555.51it/s] 96%|█████████▋| 235434/244489 [00:31<00:01, 7773.49it/s] 97%|█████████▋| 236213/244489 [00:31<00:01, 7402.00it/s] 97%|█████████▋| 236973/244489 [00:31<00:01, 7457.51it/s] 97%|█████████▋| 237722/244489 [00:31<00:00, 7332.12it/s] 98%|█████████▊| 238600/244489 [00:32<00:00, 7749.56it/s] 98%|█████████▊| 239572/244489 [00:32<00:00, 8325.33it/s] 98%|█████████▊| 240538/244489 [00:32<00:00, 8718.19it/s] 99%|█████████▉| 241504/244489 [00:32<00:00, 8995.61it/s] 99%|█████████▉| 242482/244489 [00:32<00:00, 9227.62it/s]100%|█████████▉| 243473/244489 [00:32<00:00, 9430.59it/s]100%|█████████▉| 244466/244489 [00:32<00:00, 9578.52it/s]100%|██████████| 244489/244489 [00:32<00:00, 7479.69it/s]
  0%|          | 0/34927 [00:00<?, ?it/s]  3%|▎         | 992/34927 [00:00<00:03, 9914.22it/s]  6%|▌         | 2042/34927 [00:00<00:03, 10258.11it/s]  9%|▉         | 3086/34927 [00:00<00:03, 10339.80it/s] 12%|█▏        | 4120/34927 [00:00<00:02, 10287.44it/s] 15%|█▍        | 5149/34927 [00:00<00:03, 9462.94it/s]  17%|█▋        | 6106/34927 [00:00<00:03, 9030.74it/s] 20%|██        | 7018/34927 [00:00<00:03, 8864.32it/s] 23%|██▎       | 7910/34927 [00:00<00:03, 8497.66it/s] 25%|██▌       | 8765/34927 [00:01<00:03, 7638.92it/s] 27%|██▋       | 9544/34927 [00:01<00:03, 7670.72it/s] 30%|██▉       | 10322/34927 [00:01<00:03, 7691.83it/s] 32%|███▏      | 11162/34927 [00:01<00:03, 7893.00it/s] 34%|███▍      | 12004/34927 [00:01<00:02, 8045.03it/s] 37%|███▋      | 12814/34927 [00:01<00:02, 8023.19it/s] 40%|███▉      | 13799/34927 [00:01<00:02, 8557.67it/s] 43%|████▎     | 15105/34927 [00:01<00:02, 9886.59it/s] 48%|████▊     | 16609/34927 [00:01<00:01, 11414.55it/s] 51%|█████▏    | 17975/34927 [00:01<00:01, 12080.88it/s] 56%|█████▌    | 19639/34927 [00:02<00:01, 13438.37it/s] 60%|██████    | 21113/34927 [00:02<00:00, 13826.40it/s] 65%|██████▌   | 22704/34927 [00:02<00:00, 14447.59it/s] 69%|██████▉   | 24193/34927 [00:02<00:00, 14577.90it/s] 73%|███████▎  | 25669/34927 [00:02<00:00, 14631.65it/s] 78%|███████▊  | 27301/34927 [00:02<00:00, 15135.68it/s] 83%|████████▎ | 28816/34927 [00:02<00:00, 14853.42it/s] 87%|████████▋ | 30501/34927 [00:02<00:00, 15442.49it/s] 92%|█████████▏| 32048/34927 [00:02<00:00, 15230.13it/s] 96%|█████████▌| 33602/34927 [00:02<00:00, 15319.32it/s]100%|██████████| 34927/34927 [00:03<00:00, 11608.93it/s]
  0%|          | 0/69854 [00:00<?, ?it/s]  2%|▏         | 1649/69854 [00:00<00:04, 16482.47it/s]  5%|▌         | 3688/69854 [00:00<00:03, 18778.38it/s]  8%|▊         | 5701/69854 [00:00<00:03, 19393.86it/s] 11%|█         | 7702/69854 [00:00<00:03, 19634.23it/s] 14%|█▍        | 9666/69854 [00:00<00:03, 19320.77it/s] 17%|█▋        | 11654/69854 [00:00<00:02, 19507.02it/s] 19%|█▉        | 13606/69854 [00:00<00:02, 19233.34it/s] 22%|██▏       | 15531/69854 [00:00<00:02, 19237.03it/s] 25%|██▍       | 17456/69854 [00:00<00:02, 18649.75it/s] 28%|██▊       | 19387/69854 [00:01<00:02, 18847.57it/s] 30%|███       | 21275/69854 [00:01<00:02, 17917.36it/s] 33%|███▎      | 23077/69854 [00:01<00:02, 17363.76it/s] 36%|███▌      | 24822/69854 [00:01<00:02, 16608.72it/s] 38%|███▊      | 26493/69854 [00:01<00:02, 16277.78it/s] 40%|████      | 28127/69854 [00:01<00:02, 15842.65it/s] 43%|████▎     | 29722/69854 [00:01<00:02, 15870.48it/s] 45%|████▍     | 31313/69854 [00:01<00:02, 15701.19it/s] 47%|████▋     | 32885/69854 [00:01<00:02, 15615.79it/s] 50%|████▉     | 34622/69854 [00:01<00:02, 16123.84it/s] 52%|█████▏    | 36237/69854 [00:02<00:02, 15926.52it/s] 54%|█████▍    | 37832/69854 [00:02<00:02, 15909.98it/s] 56%|█████▋    | 39459/69854 [00:02<00:01, 16014.87it/s] 59%|█████▉    | 41245/69854 [00:02<00:01, 16558.75it/s] 61%|██████▏   | 42931/69854 [00:02<00:01, 16646.81it/s] 64%|██████▍   | 44597/69854 [00:02<00:01, 16183.12it/s] 66%|██████▋   | 46279/69854 [00:02<00:01, 16369.23it/s] 69%|██████▊   | 47919/69854 [00:02<00:01, 16335.04it/s] 71%|███████   | 49645/69854 [00:02<00:01, 16606.29it/s] 73%|███████▎  | 51308/69854 [00:03<00:01, 16108.78it/s] 76%|███████▌  | 52923/69854 [00:03<00:01, 16004.08it/s] 78%|███████▊  | 54527/69854 [00:03<00:00, 15921.72it/s] 80%|████████  | 56121/69854 [00:03<00:00, 15850.07it/s] 83%|████████▎ | 57708/69854 [00:03<00:00, 15737.34it/s] 85%|████████▍ | 59354/69854 [00:03<00:00, 15947.32it/s] 87%|████████▋ | 60950/69854 [00:03<00:00, 15726.67it/s] 90%|████████▉ | 62524/69854 [00:03<00:00, 15690.04it/s] 92%|█████████▏| 64162/69854 [00:03<00:00, 15893.06it/s] 94%|█████████▍| 65906/69854 [00:03<00:00, 16351.98it/s] 97%|█████████▋| 67543/69854 [00:04<00:00, 16347.92it/s] 99%|█████████▉| 69205/69854 [00:04<00:00, 16428.62it/s]100%|██████████| 69854/69854 [00:04<00:00, 16782.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:102: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  train_dataset = TensorDataset(torch.tensor(train_X).float(), torch.tensor(train_y).float())
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.13it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.75it/s]Train:  20%|██        | 12/60 [00:00<00:02, 21.70it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.45it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.15it/s]Train:  40%|████      | 24/60 [00:01<00:01, 22.64it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.06it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.11it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.88it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.35it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.87it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.97it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 12.62it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 22.56it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 26.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.75it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.29it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.86it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.91it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.82it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.63it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.83it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.11it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 25.47it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 30.18it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  6.43it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 18.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.39it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 22.23it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 25.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 14.57it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.19it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 22.70it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.81it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.21it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.68it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.27it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.21it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.48it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.39it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.70it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 15.04it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.07it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 45.33it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.34it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.45it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 24.86it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.65it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.83it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.10it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.45it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.89it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.60it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 21.32it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.83it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.49it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.73it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.34it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 26.55it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 22.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 11.72it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 22.43it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 24.23it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.15it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.17it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.10it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.48it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.17it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.05it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.41it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.45it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.58it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.34it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.74it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.51it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.19it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.87it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.95it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.14it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.18it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 23.92it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.67it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.95it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.32it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 22.64it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.23it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 25.55it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.03it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.86it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.95it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 15.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 44.90it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.12it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.68it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 23.99it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.25it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.64it/s]Train:  20%|██        | 12/60 [00:00<00:02, 21.03it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.40it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.04it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.14it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.05it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.63it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.03it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.37it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 23.83it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.47it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.69it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 25.07it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.11it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.59it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.49it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.95it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.64it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 26.03it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.99it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.11it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.14it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.75it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.83it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.41it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.79it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.58it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.27it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 29.76it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.95it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.98it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.43it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.63it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.93it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.00it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.94it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.08it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.86it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.19it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 27.55it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 28.69it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.38it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.83it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.97it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.65it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.03it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 26.77it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.68it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.99it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.21it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 26.72it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.84it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 21.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.47it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 24.41it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.56it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.41it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.29it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.14it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.95it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.18it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.27it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.97it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.68it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.20it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 25.22it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 29.19it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.63it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.60it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 22.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.64it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 27.95it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 28.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.02it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.14it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.68it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.91it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.37it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.08it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.45it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.82it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.31it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 25.16it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 29.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.09it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.40it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 22.63it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 26.46it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.50it/s]Loading MSD from data/song/msd_clean.csv
Loading FMA from data/song/fma_clean.csv
Current MSD columns Index(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
       '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24',
       '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36',
       '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48',
       '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60',
       '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72',
       '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84',
       '85', '86', '87', '88', '89', 'title'],
      dtype='object')
Current FMA columns Index(['title', '0', '1', '2', '3', '4', '5', '6', '7', '8',
       ...
       '508', '509', '510', '511', '512', '513', '514', '515', '516', '517'],
      dtype='object', length=519)
Loading data from cache
Done
Generating top1 dataset
Generating top1 dataset
Generating top1 dataset
Loading data
Prepare for training
Start training
=================================================================
                     Kernel Shape Output Shape  Params  Mult-Adds
Layer                                                            
0_fc_layers.Linear_0   [518, 400]  [4096, 400]  207600     207200
1_fc_layers.Linear_1   [400, 200]  [4096, 200]   80200      80000
2_fc_layers.Linear_2     [200, 1]    [4096, 1]     201        200
-----------------------------------------------------------------
                      Totals
Total params          288001
Trainable params      288001
Non-trainable params       0
Mult-Adds             287400
=================================================================
n_classes=2
task=regression
model_name=song_B_2022-05-21-21-33-51
sche_threshold=0.0001
sche_patience=30
sche_factor=0.1
use_scheduler=True
num_workers=4
device=cuda:2
test_batch_size=4096
train_batch_size=4096
learning_rate=0.001
weight_decay=1e-05
num_epochs=200
model_save_path=ckp/song_B_2022-05-21-21-33-51.pth
test_rate=0.2
val_rate=0.1
multiprocess_context=fork
metrics=['r2_score', 'rmse', 'mae']
metrics_f=[<metric.r2_score.R2Score object at 0x7f58312163a0>, <metric.rmse.RMSE object at 0x7f5831216490>, <metric.mae.MAE object at 0x7f5831216220>]
hidden_sizes=[400, 200]
model=MLP(
  (fc_layers): ModuleList(
    (0): Linear(in_features=518, out_features=400, bias=True)
    (1): Linear(in_features=400, out_features=200, bias=True)
    (2): Linear(in_features=200, out_features=1, bias=True)
  )
)
writer=<torch.utils.tensorboard.writer.SummaryWriter object at 0x7f5831216430>
Epoch 1: Loss:            : Train 0.1019, Val 0.0947, Test 0.0952
          R2_Score         : Train -6.9209, Val -6.3115, Test -6.5772
          RMSE             : Train 28.4180, Val 27.3463, Test 27.3388
          MAE              : Train 24.6932, Val 23.0932, Test 23.0841
Best:
          R2_Score         : Train -6.9209, Val -6.3115, Test -6.5772
          RMSE             : Train 28.4180, Val 27.3463, Test 27.3388
          MAE              : Train 24.6932, Val 23.0932, Test 23.0841
Epoch 2: Loss:            : Train 0.0898, Val 0.0857, Test 0.0862
          R2_Score         : Train -5.9779, Val -5.6177, Test -5.8541
          RMSE             : Train 26.6729, Val 26.0166, Test 26.0017
          MAE              : Train 22.6143, Val 22.0585, Test 22.0376
Best:
          R2_Score         : Train -5.9779, Val -5.6177, Test -5.8541
          RMSE             : Train 26.6729, Val 26.0166, Test 26.0017
          MAE              : Train 22.6143, Val 22.0585, Test 22.0376
Epoch 3: Loss:            : Train 0.0808, Val 0.0764, Test 0.0768
          R2_Score         : Train -5.2793, Val -4.9010, Test -5.1096
          RMSE             : Train 25.3025, Val 24.5674, Test 24.5489
          MAE              : Train 21.4653, Val 20.8621, Test 20.8448
Best:
          R2_Score         : Train -5.2793, Val -4.9010, Test -5.1096
          RMSE             : Train 25.3025, Val 24.5674, Test 24.5489
          MAE              : Train 21.4653, Val 20.8621, Test 20.8448
Epoch 4: Loss:            : Train 0.0709, Val 0.0658, Test 0.0662
          R2_Score         : Train -4.5065, Val -4.0844, Test -4.2616
          RMSE             : Train 23.6943, Val 22.8043, Test 22.7816
          MAE              : Train 20.1349, Val 19.4111, Test 19.3969
Best:
          R2_Score         : Train -4.5065, Val -4.0844, Test -4.2616
          RMSE             : Train 23.6943, Val 22.8043, Test 22.7816
          MAE              : Train 20.1349, Val 19.4111, Test 19.3969
Epoch 5: Loss:            : Train 0.0596, Val 0.0540, Test 0.0542
          R2_Score         : Train -3.6319, Val -3.1714, Test -3.3148
          RMSE             : Train 21.7313, Val 20.6557, Test 20.6304
          MAE              : Train 18.5139, Val 17.6510, Test 17.6375
Best:
          R2_Score         : Train -3.6319, Val -3.1714, Test -3.3148
          RMSE             : Train 21.7313, Val 20.6557, Test 20.6304
          MAE              : Train 18.5139, Val 17.6510, Test 17.6375
Epoch 6: Loss:            : Train 0.0475, Val 0.0417, Test 0.0418
          R2_Score         : Train -2.6886, Val -2.2241, Test -2.3284
          RMSE             : Train 19.3927, Val 18.1594, Test 18.1195
          MAE              : Train 16.5720, Val 15.5650, Test 15.5422
Best:
          R2_Score         : Train -2.6886, Val -2.2241, Test -2.3284
          RMSE             : Train 19.3927, Val 18.1594, Test 18.1195
          MAE              : Train 16.5720, Val 15.5650, Test 15.5422
Epoch 7: Loss:            : Train 0.0354, Val 0.0303, Test 0.0303
          R2_Score         : Train -1.7555, Val -1.3411, Test -1.4114
          RMSE             : Train 16.7612, Val 15.4743, Test 15.4227
          MAE              : Train 14.3534, Val 13.2371, Test 13.2146
Best:
          R2_Score         : Train -1.7555, Val -1.3411, Test -1.4114
          RMSE             : Train 16.7612, Val 15.4743, Test 15.4227
          MAE              : Train 14.3534, Val 13.2371, Test 13.2146
Epoch 8: Loss:            : Train 0.0250, Val 0.0213, Test 0.0211
          R2_Score         : Train -0.9454, Val -0.6446, Test -0.6833
          RMSE             : Train 14.0836, Val 12.9695, Test 12.8855
          MAE              : Train 12.0004, Val 10.9514, Test 10.9178
Best:
          R2_Score         : Train -0.9454, Val -0.6446, Test -0.6833
          RMSE             : Train 14.0836, Val 12.9695, Test 12.8855
          MAE              : Train 12.0004, Val 10.9514, Test 10.9178
Epoch 9: Loss:            : Train 0.0175, Val 0.0157, Test 0.0153
          R2_Score         : Train -0.3644, Val -0.2136, Test -0.2282
          RMSE             : Train 11.7944, Val 11.1415, Test 11.0069
          MAE              : Train 9.7725, Val 9.0009, Test 8.9421
Best:
          R2_Score         : Train -0.3644, Val -0.2136, Test -0.2282
          RMSE             : Train 11.7944, Val 11.1415, Test 11.0069
          MAE              : Train 9.7725, Val 9.0009, Test 8.9421
Epoch 10: Loss:            : Train 0.0138, Val 0.0137, Test 0.0132
          R2_Score         : Train -0.0700, Val -0.0620, Test -0.0647
          RMSE             : Train 10.4448, Val 10.4220, Test 10.2481
          MAE              : Train 8.1449, Val 7.8447, Test 7.7857
Best:
          R2_Score         : Train -0.0700, Val -0.0620, Test -0.0647
          RMSE             : Train 10.4448, Val 10.4220, Test 10.2481
          MAE              : Train 8.1449, Val 7.8447, Test 7.7857
Epoch 11: Loss:            : Train 0.0129, Val 0.0134, Test 0.0129
          R2_Score         : Train -0.0012, Val -0.0406, Test -0.0431
          RMSE             : Train 10.1037, Val 10.3169, Test 10.1436
          MAE              : Train 7.4949, Val 7.6467, Test 7.5948
Best:
          R2_Score         : Train -0.0012, Val -0.0406, Test -0.0431
          RMSE             : Train 10.1037, Val 10.3169, Test 10.1436
          MAE              : Train 7.4949, Val 7.6467, Test 7.5948
Epoch 12: Loss:            : Train 0.0127, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0105, Val -0.0305, Test -0.0327
          RMSE             : Train 10.0441, Val 10.2664, Test 10.0928
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.09it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.75it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.54it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.97it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.81it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.91it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.73it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.16it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.37it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.68it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.87it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.47it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 20.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 12.50it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 23.87it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.50it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.47it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.10it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.75it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 25.87it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.31it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.70it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.36it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.99it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.76it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.88it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 26.13it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 24.18it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.24it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 20.18it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.45it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 26.06it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 27.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.09it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.99it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.02it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.64it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.04it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.81it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.87it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.28it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.59it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.68it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 25.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 14.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.83it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 19.56it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 25.46it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.07it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.97it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.81it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.27it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.85it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.13it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.43it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.62it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.29it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.64it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.42it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 30.66it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.29it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.87it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 21.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 15.62it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 21.03it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 25.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.18it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.07it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.63it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.29it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.63it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.69it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.48it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.99it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.15it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 21.73it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.55it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.70it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.26it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.01it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 23.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.66it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 27.61it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.82it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 18.51it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.91it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.05it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.67it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.67it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.23it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.82it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.12it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.67it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.22it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 29.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 23.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.57it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.52it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 25.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.38it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.40it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.86it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.49it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.70it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.57it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.96it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.71it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.63it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.44it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.63it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 26.11it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.78it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 21.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 11.38it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 21.19it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 25.92it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.79it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.30it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.12it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.94it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 28.65it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.89it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 18.50it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.62it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 20.81it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 22.28it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 25.24it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.69it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.78it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.09it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 28.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 27.90it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.82it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 26.25it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.37it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.05it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.29it/s]Train:  40%|████      | 24/60 [00:00<00:01, 25.55it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.06it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.43it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.49it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.25it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.35it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 25.65it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 29.93it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.41it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.87it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.26it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.87it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.46it/s]Train:  10%|█         | 6/60 [00:00<00:01, 30.42it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.75it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.68it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.18it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.60it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.10it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.17it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.21it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.05it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.25it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.89it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.35it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.70it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.19it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 33.91it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.73it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.09it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 35.86it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.76it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.71it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.30it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.83it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.03it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.12it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 27.27it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.61it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.33it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.59it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.29it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.97it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 26.30it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.97it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.95it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.44it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.47it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 29.21it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.66it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.15it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.41it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.78it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 20.63it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.36it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.19it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 20.38it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.50it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.40it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 24.92it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 22.24it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  8.11it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 23.54it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 25.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.26it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:13,  4.50it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.89it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 16.28it/s]Train:  20%|██        | 12/60 [00:00<00:02, 17.91it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 16.29it/s]Train:  30%|███       | 18/60 [00:01<00:02, 16.87it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 20.73it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 19.81it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.64it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.24it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.10it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.17it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 27.55it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 26.18it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 31.49it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 30.21it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.87it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 20.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.94it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.24it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 24.85it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.09it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.50it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.31it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.11it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.94it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.58it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.18it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.25it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.04it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.50it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.20it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.18it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.27it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 32.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 29.99it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.86it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 29.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.64it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.85it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.97it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.76it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.70it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.60it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.52it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 21.26it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 23.48it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.64it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.08it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.36it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.32it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  8.43it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.24it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.36it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.67it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.69it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.35it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.42it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.21it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.98it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.03it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 25.80it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.00it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.98it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 22.76it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 30.45it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 15.60it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 22.57it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 25.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.25it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.89it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.59it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.12it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.30it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.56it/s]Train:  40%|████      | 24/60 [00:01<00:01, 25.39it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.27it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.33it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.55it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.81it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 25.21it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.71it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 25.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.56it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 26.30it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 26.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.82it/s]
          MAE              : Train 7.4392, Val 7.5328, Test 7.4789
Best:
          R2_Score         : Train 0.0105, Val -0.0305, Test -0.0327
          RMSE             : Train 10.0441, Val 10.2664, Test 10.0928
          MAE              : Train 7.4392, Val 7.5328, Test 7.4789
Epoch 13: Loss:            : Train 0.0127, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0160, Val -0.0287, Test -0.0305
          RMSE             : Train 10.0161, Val 10.2577, Test 10.0823
          MAE              : Train 7.4150, Val 7.6097, Test 7.5548
Best:
          R2_Score         : Train 0.0160, Val -0.0287, Test -0.0305
          RMSE             : Train 10.0161, Val 10.2577, Test 10.0823
          MAE              : Train 7.4150, Val 7.6097, Test 7.5548
Epoch 14: Loss:            : Train 0.0126, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0225, Val -0.0254, Test -0.0273
          RMSE             : Train 9.9829, Val 10.2411, Test 10.0664
          MAE              : Train 7.3969, Val 7.5799, Test 7.5214
Best:
          R2_Score         : Train 0.0225, Val -0.0254, Test -0.0273
          RMSE             : Train 9.9829, Val 10.2411, Test 10.0664
          MAE              : Train 7.3969, Val 7.5799, Test 7.5214
Epoch 15: Loss:            : Train 0.0125, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0277, Val -0.0254, Test -0.0265
          RMSE             : Train 9.9565, Val 10.2408, Test 10.0624
          MAE              : Train 7.3766, Val 7.5706, Test 7.5085
Best:
          R2_Score         : Train 0.0277, Val -0.0254, Test -0.0265
          RMSE             : Train 9.9565, Val 10.2408, Test 10.0624
          MAE              : Train 7.3766, Val 7.5706, Test 7.5085
Epoch 16: Loss:            : Train 0.0125, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 17: Loss:            : Train 0.0124, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0352, Val -0.0262, Test -0.0274
          RMSE             : Train 9.9180, Val 10.2449, Test 10.0669
          MAE              : Train 7.3482, Val 7.5346, Test 7.4769
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 18: Loss:            : Train 0.0124, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0372, Val -0.0323, Test -0.0346
          RMSE             : Train 9.9079, Val 10.2754, Test 10.1020
          MAE              : Train 7.3437, Val 7.6627, Test 7.6050
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 19: Loss:            : Train 0.0124, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0399, Val -0.0281, Test -0.0292
          RMSE             : Train 9.8937, Val 10.2544, Test 10.0759
          MAE              : Train 7.3315, Val 7.5872, Test 7.5280
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 20: Loss:            : Train 0.0123, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0427, Val -0.0298, Test -0.0320
          RMSE             : Train 9.8795, Val 10.2632, Test 10.0893
          MAE              : Train 7.3217, Val 7.6181, Test 7.5602
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 21: Loss:            : Train 0.0123, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0464, Val -0.0273, Test -0.0312
          RMSE             : Train 9.8603, Val 10.2505, Test 10.0856
          MAE              : Train 7.3088, Val 7.5588, Test 7.5060
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 22: Loss:            : Train 0.0123, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0483, Val -0.0359, Test -0.0377
          RMSE             : Train 9.8504, Val 10.2933, Test 10.1173
          MAE              : Train 7.2999, Val 7.6547, Test 7.5885
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 23: Loss:            : Train 0.0122, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0500, Val -0.0267, Test -0.0297
          RMSE             : Train 9.8415, Val 10.2474, Test 10.0782
          MAE              : Train 7.2957, Val 7.5098, Test 7.4556
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 24: Loss:            : Train 0.0122, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0526, Val -0.0309, Test -0.0322
          RMSE             : Train 9.8280, Val 10.2685, Test 10.0905
          MAE              : Train 7.2801, Val 7.5591, Test 7.4960
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 25: Loss:            : Train 0.0122, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0538, Val -0.0323, Test -0.0337
          RMSE             : Train 9.8221, Val 10.2756, Test 10.0977
          MAE              : Train 7.2705, Val 7.5589, Test 7.5014
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 26: Loss:            : Train 0.0122, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0555, Val -0.0374, Test -0.0423
          RMSE             : Train 9.8134, Val 10.3007, Test 10.1398
          MAE              : Train 7.2641, Val 7.6635, Test 7.6082
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 27: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0581, Val -0.0343, Test -0.0388
          RMSE             : Train 9.7996, Val 10.2853, Test 10.1225
          MAE              : Train 7.2568, Val 7.5999, Test 7.5455
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 28: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0589, Val -0.0338, Test -0.0380
          RMSE             : Train 9.7954, Val 10.2830, Test 10.1188
          MAE              : Train 7.2561, Val 7.5849, Test 7.5350
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 29: Loss:            : Train 0.0121, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0608, Val -0.0329, Test -0.0351
          RMSE             : Train 9.7857, Val 10.2784, Test 10.1047
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.86it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.43it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.03it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.02it/s]Train:  30%|███       | 18/60 [00:00<00:02, 20.73it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 21.64it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.41it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.14it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.13it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.56it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.16it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 23.42it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.84it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.27it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 17.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  5.96it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 21.32it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.97it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.07it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.15it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.87it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.75it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.00it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.34it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.13it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.77it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.27it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 26.14it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.43it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 32.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.41it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.01it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 27.60it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.14it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.17it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.79it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.34it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.29it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.34it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.59it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.74it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.47it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.74it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.85it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.07it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 24.97it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 12.78it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.57it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 25.82it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.67it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.88it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.80it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.03it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 23.28it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.55it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 23.84it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 24.10it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 21.40it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.83it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.71it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 22.03it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 25.18it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 23.25it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 22.89it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 18.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.84it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 20.09it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 23.76it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.40it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.44it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 25.00it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.11it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.43it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.71it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.13it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.19it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.90it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.36it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.16it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 25.42it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.37it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 15.22it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.64it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 26.50it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.91it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.21it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 17.87it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.30it/s]Train:  30%|███       | 18/60 [00:00<00:02, 20.17it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 19.87it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.77it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 20.39it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 20.89it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.58it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.68it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 21.35it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 26.07it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.52it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 20.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 13.65it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 24.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.06it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 26.26it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.50it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.79it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.85it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.67it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.41it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.65it/s]Train:  40%|████      | 24/60 [00:00<00:01, 24.95it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.94it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.08it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.71it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.73it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 23.40it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 27.73it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 24.70it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 21.37it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 17.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 10.19it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 17.28it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 22.23it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.75it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.80it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.69it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.00it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.14it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.53it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.35it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 24.95it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.85it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 25.93it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.46it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 27.70it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.30it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 29.80it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  6.07it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 16.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 20.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.20it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 22.42it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 25.05it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.32it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.17it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.53it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.46it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.93it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.27it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.41it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 23.71it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.50it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.13it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.79it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 13.31it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 23.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.67it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 26.69it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.00it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.09it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.22it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.09it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.62it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.86it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.98it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.08it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.18it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 26.37it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.84it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 22.31it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.96it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.84it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 18.33it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.27it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.12it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.63it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.63it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.52it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.58it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.69it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 22.35it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.34it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 26.99it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.41it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.59it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 49.42it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 15.27it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 22.91it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 24.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.41it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.74it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.28it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.52it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.46it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.06it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.15it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.57it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.54it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.53it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 25.72it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.56it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.96it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.54it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 23.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 19.24it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 24.79it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 27.41it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.43it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 39.59it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.08it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.79it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.76it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.78it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 30.07it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.19it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.95it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.62it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.28it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.08it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.91it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.00it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 11.77it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 18.44it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 24.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.98it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.54it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.08it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.32it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.48it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.09it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.66it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.91it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.98it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.86it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.51it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.37it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 30.85it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.81it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 21.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.99it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 26.07it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 27.02it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.14it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 18.35it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.42it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.28it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.42it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.08it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.97it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.02it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.95it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.25it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.22it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.53it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 25.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 30.14it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 30.48it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.12it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.75it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.02it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.78it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 21.37it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.00it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.79it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.74it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.96it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.80it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.31it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.36it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.36it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.87it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 35.02it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.65it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 25.09it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 26.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.64it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.89it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.00it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.59it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.73it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.01it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.93it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.07it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.27it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 23.94it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.02it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.26it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 22.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.63it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 27.27it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.69it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.52it/s]
          MAE              : Train 7.2473, Val 7.5155, Test 7.4560
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 30: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0620, Val -0.0350, Test -0.0378
          RMSE             : Train 9.7795, Val 10.2886, Test 10.1179
          MAE              : Train 7.2358, Val 7.5596, Test 7.5011
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 31: Loss:            : Train 0.0121, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0636, Val -0.0404, Test -0.0417
          RMSE             : Train 9.7712, Val 10.3159, Test 10.1366
          MAE              : Train 7.2297, Val 7.6179, Test 7.5589
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 32: Loss:            : Train 0.0120, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0651, Val -0.0355, Test -0.0398
          RMSE             : Train 9.7629, Val 10.2915, Test 10.1275
          MAE              : Train 7.2216, Val 7.5755, Test 7.5252
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 33: Loss:            : Train 0.0120, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0661, Val -0.0508, Test -0.0541
          RMSE             : Train 9.7578, Val 10.3669, Test 10.1968
          MAE              : Train 7.2187, Val 7.7160, Test 7.6542
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 34: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0673, Val -0.0409, Test -0.0425
          RMSE             : Train 9.7517, Val 10.3179, Test 10.1404
          MAE              : Train 7.2116, Val 7.6077, Test 7.5436
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 35: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0689, Val -0.0398, Test -0.0443
          RMSE             : Train 9.7434, Val 10.3129, Test 10.1493
          MAE              : Train 7.2065, Val 7.5775, Test 7.5274
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 36: Loss:            : Train 0.0120, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0696, Val -0.0388, Test -0.0414
          RMSE             : Train 9.7396, Val 10.3077, Test 10.1354
          MAE              : Train 7.2015, Val 7.5258, Test 7.4692
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 37: Loss:            : Train 0.0120, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0711, Val -0.0453, Test -0.0473
          RMSE             : Train 9.7317, Val 10.3399, Test 10.1639
          MAE              : Train 7.1950, Val 7.6196, Test 7.5589
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 38: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0715, Val -0.0424, Test -0.0452
          RMSE             : Train 9.7296, Val 10.3255, Test 10.1536
          MAE              : Train 7.1877, Val 7.5904, Test 7.5338
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 39: Loss:            : Train 0.0119, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0726, Val -0.0454, Test -0.0486
          RMSE             : Train 9.7240, Val 10.3405, Test 10.1704
          MAE              : Train 7.1869, Val 7.6158, Test 7.5542
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 40: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0725, Val -0.0403, Test -0.0455
          RMSE             : Train 9.7245, Val 10.3150, Test 10.1550
          MAE              : Train 7.1859, Val 7.5666, Test 7.5209
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 41: Loss:            : Train 0.0119, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0742, Val -0.0470, Test -0.0514
          RMSE             : Train 9.7153, Val 10.3485, Test 10.1839
          MAE              : Train 7.1796, Val 7.6434, Test 7.5879
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 42: Loss:            : Train 0.0119, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0754, Val -0.0488, Test -0.0499
          RMSE             : Train 9.7090, Val 10.3572, Test 10.1763
          MAE              : Train 7.1698, Val 7.5683, Test 7.5037
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 43: Loss:            : Train 0.0119, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0761, Val -0.0508, Test -0.0532
          RMSE             : Train 9.7053, Val 10.3673, Test 10.1924
          MAE              : Train 7.1658, Val 7.6616, Test 7.5966
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 44: Loss:            : Train 0.0119, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0764, Val -0.0472, Test -0.0512
          RMSE             : Train 9.7039, Val 10.3492, Test 10.1828
          MAE              : Train 7.1668, Val 7.6211, Test 7.5687
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 45: Loss:            : Train 0.0119, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0775, Val -0.0492, Test -0.0530
          RMSE             : Train 9.6982, Val 10.3593, Test 10.1914
          MAE              : Train 7.1595, Val 7.6515, Test 7.5919
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 46: Loss:            : Train 0.0119, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0779, Val -0.0508, Test -0.0554
          RMSE             : Train 9.6960, Val 10.3672, Test 10.2033
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.83it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.07it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.03it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.24it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.05it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.35it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.96it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.53it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 26.86it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 49.44it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.77it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.13it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.82it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.83it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.10it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.42it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.51it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 23.36it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.01it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.59it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.32it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 22.92it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.10it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.08it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.79it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.03it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.54it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 24.17it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.57it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.81it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.28it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.17it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.92it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.09it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.77it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.53it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.59it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.99it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 23.66it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.47it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.26it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.33it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.35it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 25.50it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 28.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.33it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.39it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.45it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.29it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 21.06it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.26it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.63it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.43it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 23.17it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.42it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.97it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 20.55it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 19.97it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.09it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 19.24it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.10it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.58it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.38it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.40it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.65it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.92it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.06it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.16it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.47it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.27it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 34.29it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.40it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.82it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.67it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.01it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.52it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 24.92it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.83it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.91it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.92it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.89it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 29.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.15it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.18it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.27it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.19it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.60it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.29it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.12it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.11it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.43it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.55it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.77it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.70it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 26.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.19it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.90it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 26.26it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.92it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 30.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.85it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.90it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.13it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.08it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.93it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 28.94it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.63it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.22it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.46it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.00it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.73it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.53it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.06it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.61it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.04it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.28it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.72it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.83it/s]Train:  40%|████      | 24/60 [00:01<00:01, 25.19it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.61it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.84it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.00it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 25.87it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.82it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.70it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.15it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 31.27it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.07it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.60it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.56it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.75it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.87it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.50it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.02it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 22.07it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.13it/s]Train:  40%|████      | 24/60 [00:00<00:01, 25.47it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.64it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.30it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.38it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.08it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.56it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.93it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  6.01it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 21.16it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.80it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.48it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.92it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 39.33it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.06it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 19.13it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.13it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.65it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.21it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.85it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 26.68it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.05it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.81it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.68it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.05it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.28it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 29.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.11it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 19.33it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 24.50it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.27it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.13it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.85it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.63it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.57it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.30it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.52it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.29it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 24.12it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 28.05it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.76it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.91it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 25.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.05it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 22.50it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 26.15it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.59it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.15it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 25.35it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.16it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.29it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 21.07it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.51it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.67it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.86it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.67it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 26.81it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 30.43it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.25it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.07it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 30.24it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.27it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.62it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.69it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.05it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.02it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 25.70it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.78it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 22.29it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.84it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.10it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.45it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 19.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.03it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.05it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 27.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.15it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 21.83it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 18.93it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.83it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.71it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.96it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.37it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.45it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.56it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.14it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.70it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.66it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.30it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.49it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.23it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.80it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 32.43it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.39it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.76it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.94it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.18it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.38it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.98it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.21it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.44it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.94it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.44it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.40it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.87it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 27.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.97it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 33.07it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.03it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 34.42it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.93it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 30.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.62it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 29.31it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.25it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.88it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.83it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.97it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.41it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.33it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.15it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.56it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.87it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.16it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 22.49it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 23.85it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 22.38it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.49it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.03it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.92it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.72it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.96it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.76it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.47it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.11it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.64it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.13it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.71it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.62it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.57it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.96it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.16it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.06it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 35.61it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 33.37it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.73it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.65it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 34.53it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.91it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.25it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.10it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.23it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 27.86it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.49it/s]
          MAE              : Train 7.1571, Val 7.6234, Test 7.5701
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 47: Loss:            : Train 0.0119, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0791, Val -0.0480, Test -0.0520
          RMSE             : Train 9.6896, Val 10.3533, Test 10.1867
          MAE              : Train 7.1497, Val 7.5621, Test 7.5080
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 48: Loss:            : Train 0.0117, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0918, Val -0.0484, Test -0.0514
          RMSE             : Train 9.6230, Val 10.3554, Test 10.1840
          MAE              : Train 7.1025, Val 7.6247, Test 7.5650
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 49: Loss:            : Train 0.0117, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0948, Val -0.0500, Test -0.0529
          RMSE             : Train 9.6068, Val 10.3631, Test 10.1910
          MAE              : Train 7.0941, Val 7.6284, Test 7.5689
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 50: Loss:            : Train 0.0116, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0955, Val -0.0498, Test -0.0528
          RMSE             : Train 9.6033, Val 10.3621, Test 10.1907
          MAE              : Train 7.0899, Val 7.6185, Test 7.5598
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 51: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0959, Val -0.0539, Test -0.0568
          RMSE             : Train 9.6009, Val 10.3823, Test 10.2100
          MAE              : Train 7.0859, Val 7.6515, Test 7.5900
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 52: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0961, Val -0.0527, Test -0.0558
          RMSE             : Train 9.5997, Val 10.3762, Test 10.2050
          MAE              : Train 7.0854, Val 7.6360, Test 7.5761
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 53: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0962, Val -0.0540, Test -0.0568
          RMSE             : Train 9.5992, Val 10.3829, Test 10.2098
          MAE              : Train 7.0802, Val 7.6431, Test 7.5826
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 54: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0964, Val -0.0545, Test -0.0569
          RMSE             : Train 9.5981, Val 10.3854, Test 10.2104
          MAE              : Train 7.0845, Val 7.6439, Test 7.5820
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 55: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0967, Val -0.0552, Test -0.0581
          RMSE             : Train 9.5969, Val 10.3886, Test 10.2164
          MAE              : Train 7.0828, Val 7.6556, Test 7.5943
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 56: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0969, Val -0.0565, Test -0.0593
          RMSE             : Train 9.5956, Val 10.3953, Test 10.2218
          MAE              : Train 7.0809, Val 7.6645, Test 7.6021
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 57: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0971, Val -0.0560, Test -0.0588
          RMSE             : Train 9.5947, Val 10.3929, Test 10.2195
          MAE              : Train 7.0785, Val 7.6497, Test 7.5882
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 58: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0972, Val -0.0552, Test -0.0579
          RMSE             : Train 9.5940, Val 10.3885, Test 10.2154
          MAE              : Train 7.0800, Val 7.6371, Test 7.5753
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 59: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0972, Val -0.0581, Test -0.0607
          RMSE             : Train 9.5939, Val 10.4032, Test 10.2289
          MAE              : Train 7.0746, Val 7.6737, Test 7.6110
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 60: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0974, Val -0.0575, Test -0.0603
          RMSE             : Train 9.5930, Val 10.4002, Test 10.2266
          MAE              : Train 7.0782, Val 7.6602, Test 7.5988
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 61: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0976, Val -0.0551, Test -0.0580
          RMSE             : Train 9.5919, Val 10.3884, Test 10.2157
          MAE              : Train 7.0770, Val 7.6389, Test 7.5784
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 62: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0978, Val -0.0598, Test -0.0630
          RMSE             : Train 9.5910, Val 10.4116, Test 10.2396
          MAE              : Train 7.0737, Val 7.6823, Test 7.6202
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 63: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0979, Val -0.0563, Test -0.0591
          RMSE             : Train 9.5906, Val 10.3940, Test 10.2211
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.23it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.71it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.83it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.21it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.36it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.40it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 27.46it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.20it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.38it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.92it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.00it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.26it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.22it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 30.55it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.06it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 10.30it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 19.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.99it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 25.32it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.25it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.16it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.82it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.54it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 20.96it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.91it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 20.58it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.88it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 21.02it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 19.99it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.79it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 21.64it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 22.06it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.85it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 21.01it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 14.27it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.46it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 32.19it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.68it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.74it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.27it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.12it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.35it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.26it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.86it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.12it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 35.73it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.03it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.27it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 25.21it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 24.54it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.69it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.29it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.01it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.22it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.91it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 33.54it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.73it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.17it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.01it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.19it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.87it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.63it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.46it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.18it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.42it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.53it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.34it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 29.06it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.28it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 26.45it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.98it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.64it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.13it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.01it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.62it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.15it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.64it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 25.91it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.95it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 27.90it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.48it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.06it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 29.81it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 36.67it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.99it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.84it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.41it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.19it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.52it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.57it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.78it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.96it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.85it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.06it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.92it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.74it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.65it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 23.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 14.64it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 22.94it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 25.11it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.85it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.79it/s]Train:  10%|█         | 6/60 [00:00<00:03, 13.89it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 18.35it/s]Train:  20%|██        | 12/60 [00:00<00:03, 15.66it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 16.59it/s]Train:  33%|███▎      | 20/60 [00:01<00:01, 23.63it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 21.23it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 21.60it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 24.82it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 20.83it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 20.82it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 21.72it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 23.64it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.88it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.42it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 11.57it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.43it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.84it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 25.93it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 27.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 39.25it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.76it/s]Train:  20%|██        | 12/60 [00:00<00:02, 21.63it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.28it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.49it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.34it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 21.59it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.14it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 23.00it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 19.41it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.12it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 21.45it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 21.39it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.32it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 17.50it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 22.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.48it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 21.66it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 24.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.81it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.53it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.80it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.67it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.19it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.84it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.59it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.02it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.52it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.92it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.25it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 28.20it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.88it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 37.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.16it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.07it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 37.64it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.07it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.52it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.21it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.62it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.81it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.18it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 23.75it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.70it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.99it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.06it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.87it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.45it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.32it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.95it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.53it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 28.34it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 33.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 35.49it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.74it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 38.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 43.66it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.95it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.41it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.10it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.35it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 25.66it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.34it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.06it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.51it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.87it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.93it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.36it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.13it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 26.32it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.08it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 21.67it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.89it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 30.43it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.67it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.44it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.37it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.27it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.01it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 21.72it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.75it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.95it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.49it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.88it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.63it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 27.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 38.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.32it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.51it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.01it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.41it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.44it/s]Train:  10%|█         | 6/60 [00:00<00:05,  9.69it/s]Train:  17%|█▋        | 10/60 [00:00<00:03, 13.59it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 18.08it/s]Train:  28%|██▊       | 17/60 [00:01<00:02, 18.80it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 22.17it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.84it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.08it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.23it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.20it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.39it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 27.91it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.81it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.93it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.12it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 20.56it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 38.97it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 22.84it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 21.02it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 22.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 33.58it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.96it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.96it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.87it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.61it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.42it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.96it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.73it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 22.95it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 23.04it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 26.42it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.84it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 20.99it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 11.84it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 20.46it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.94it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 28.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.40it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.09it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 25.70it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.41it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.37it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.21it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.19it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.45it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.19it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.54it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.14it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.22it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.61it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 31.07it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.73it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 23.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.79it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 21.33it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.19it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.35it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.29it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.59it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.90it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.79it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.06it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.85it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.14it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.37it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.88it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.46it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.15it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.84it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 27.46it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.06it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 24.07it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 23.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.67it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.77it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.27it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 26.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.82it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.11it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.24it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.41it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 19.45it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.84it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.98it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.12it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 31.35it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.17it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.71it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.04it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.10it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.66it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.12it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.46it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 28.39it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 22.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.50it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 31.58it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 24.55it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 23.64it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.40it/s]
          MAE              : Train 7.0745, Val 7.6431, Test 7.5827
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 64: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.0981, Val -0.0603, Test -0.0626
          RMSE             : Train 9.5893, Val 10.4139, Test 10.2380
          MAE              : Train 7.0724, Val 7.6754, Test 7.6108
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 65: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0981, Val -0.0591, Test -0.0615
          RMSE             : Train 9.5891, Val 10.4078, Test 10.2326
          MAE              : Train 7.0717, Val 7.6712, Test 7.6076
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 66: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0982, Val -0.0601, Test -0.0629
          RMSE             : Train 9.5887, Val 10.4128, Test 10.2391
          MAE              : Train 7.0712, Val 7.6763, Test 7.6135
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 67: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0985, Val -0.0587, Test -0.0615
          RMSE             : Train 9.5873, Val 10.4062, Test 10.2327
          MAE              : Train 7.0715, Val 7.6610, Test 7.5986
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 68: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0986, Val -0.0569, Test -0.0593
          RMSE             : Train 9.5868, Val 10.3973, Test 10.2221
          MAE              : Train 7.0702, Val 7.6375, Test 7.5753
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 69: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.0986, Val -0.0615, Test -0.0641
          RMSE             : Train 9.5866, Val 10.4196, Test 10.2449
          MAE              : Train 7.0689, Val 7.6856, Test 7.6223
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 70: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0988, Val -0.0598, Test -0.0624
          RMSE             : Train 9.5854, Val 10.4115, Test 10.2369
          MAE              : Train 7.0691, Val 7.6652, Test 7.6016
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 71: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0989, Val -0.0577, Test -0.0603
          RMSE             : Train 9.5851, Val 10.4010, Test 10.2266
          MAE              : Train 7.0638, Val 7.6406, Test 7.5780
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 72: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0990, Val -0.0577, Test -0.0599
          RMSE             : Train 9.5846, Val 10.4010, Test 10.2250
          MAE              : Train 7.0673, Val 7.6375, Test 7.5741
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 73: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0992, Val -0.0596, Test -0.0619
          RMSE             : Train 9.5834, Val 10.4104, Test 10.2344
          MAE              : Train 7.0659, Val 7.6627, Test 7.5973
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 74: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0993, Val -0.0597, Test -0.0618
          RMSE             : Train 9.5830, Val 10.4111, Test 10.2339
          MAE              : Train 7.0654, Val 7.6553, Test 7.5915
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 75: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.0993, Val -0.0608, Test -0.0629
          RMSE             : Train 9.5829, Val 10.4164, Test 10.2394
          MAE              : Train 7.0656, Val 7.6729, Test 7.6073
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 76: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.0993, Val -0.0627, Test -0.0645
          RMSE             : Train 9.5827, Val 10.4255, Test 10.2473
          MAE              : Train 7.0657, Val 7.6848, Test 7.6186
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 77: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.0995, Val -0.0612, Test -0.0636
          RMSE             : Train 9.5818, Val 10.4182, Test 10.2428
          MAE              : Train 7.0616, Val 7.6726, Test 7.6087
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 78: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0996, Val -0.0595, Test -0.0618
          RMSE             : Train 9.5812, Val 10.4097, Test 10.2339
          MAE              : Train 7.0610, Val 7.6554, Test 7.5911
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 79: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1016, Val -0.0607, Test -0.0631
          RMSE             : Train 9.5705, Val 10.4160, Test 10.2401
          MAE              : Train 7.0558, Val 7.6684, Test 7.6036
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 80: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1018, Val -0.0619, Test -0.0642
          RMSE             : Train 9.5698, Val 10.4218, Test 10.2458
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.91it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.93it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.46it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.86it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.25it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.42it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.32it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 21.92it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 21.24it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 21.78it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 21.34it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.94it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 22.80it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.53it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.25it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.40it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.55it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.56it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.80it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.10it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.44it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.06it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.20it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.43it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 27.75it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.41it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.88it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.03it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.14it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.25it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.02it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 28.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.41it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.75it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.82it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.81it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.49it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.14it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.28it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.88it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.91it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.59it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.90it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 21.03it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.23it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.09it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.31it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.73it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 27.34it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 29.97it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.61it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.40it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.80it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.85it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.92it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.26it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.93it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.76it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.02it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.02it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.59it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.25it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.39it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.16it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.59it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.86it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.02it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 27.91it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 33.83it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.09it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.71it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.36it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.71it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 18.96it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 29.16it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.89it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.50it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.14it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.20it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.46it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.12it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.91it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.04it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.71it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.84it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 28.46it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.04it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 24.97it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.89it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.82it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.52it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.80it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.15it/s]Train:  10%|█         | 6/60 [00:00<00:03, 14.48it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.06it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.42it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.35it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.01it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 26.17it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.12it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.56it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.70it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.58it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.79it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.78it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 32.24it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 31.19it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.22it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.07it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 34.03it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.19it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 27.01it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.64it/s]Train:   3%|▎         | 2/60 [00:00<00:09,  6.08it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.60it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.36it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.91it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.86it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 23.43it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.87it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.55it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.66it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.77it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.00it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.66it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.02it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 29.50it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 28.55it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.46it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.75it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 33.97it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.24it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 29.70it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.31it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 18.50it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 29.03it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.58it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.66it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.12it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.74it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.57it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.87it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.08it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.20it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.08it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.02it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 27.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.68it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 33.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 40.85it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.64it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.76it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.43it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.30it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.39it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.65it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.40it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.26it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.77it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.65it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.75it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.45it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.00it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.78it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.93it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.57it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 27.43it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.18it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 26.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.70it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.01it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.64it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.98it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 19.65it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.54it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.03it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.50it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.68it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.45it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.55it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.34it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.89it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.11it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.05it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.44it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.34it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.83it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.61it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.83it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 36.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.65it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.73it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.96it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.42it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.03it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.40it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 29.29it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.24it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.73it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.93it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.79it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 22.90it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 25.60it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.80it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.73it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.40it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 24.99it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 18.45it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 25.58it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.70it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.35it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.87it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.98it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 23.42it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.03it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.40it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.95it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.55it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.37it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.63it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.00it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.71it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.21it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.55it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.86it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.43it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.17it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 29.58it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.09it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.38it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.66it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.27it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.35it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.75it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.13it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.70it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.00it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.28it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.78it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.48it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.02it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.05it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.56it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.32it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 24.33it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 21.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 16.42it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 26.67it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.48it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 18.42it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.07it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.53it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.55it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.20it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.06it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.15it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 27.56it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.47it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.64it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.36it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.36it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 31.37it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 23.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.90it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 31.94it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.72it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 27.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:11,  4.94it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.75it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.01it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.35it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.94it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.95it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.99it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 30.83it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.57it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.89it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.94it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.19it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.70it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 30.35it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.78it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 19.42it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 11.22it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 21.14it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 22.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.41it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 14.02it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.60it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.29it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 18.49it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.76it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.50it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 18.03it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.91it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 21.42it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 20.81it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 22.55it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 27.40it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.32it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 21.65it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.37it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 22.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.96it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.52it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 26.72it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 24.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 27.48it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 18.30it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 19.89it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.82it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.66it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.18it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.98it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.35it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.04it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 22.69it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 25.38it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.10it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 20.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 12.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.12it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 19.11it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 16.05it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 20.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.81it/s]
          MAE              : Train 7.0571, Val 7.6783, Test 7.6129
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 81: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1018, Val -0.0615, Test -0.0638
          RMSE             : Train 9.5697, Val 10.4198, Test 10.2436
          MAE              : Train 7.0557, Val 7.6731, Test 7.6080
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 82: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1018, Val -0.0613, Test -0.0636
          RMSE             : Train 9.5695, Val 10.4186, Test 10.2426
          MAE              : Train 7.0578, Val 7.6701, Test 7.6050
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 83: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1018, Val -0.0613, Test -0.0636
          RMSE             : Train 9.5695, Val 10.4188, Test 10.2425
          MAE              : Train 7.0567, Val 7.6683, Test 7.6030
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 84: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1019, Val -0.0615, Test -0.0638
          RMSE             : Train 9.5693, Val 10.4196, Test 10.2435
          MAE              : Train 7.0531, Val 7.6710, Test 7.6059
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 85: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1019, Val -0.0609, Test -0.0631
          RMSE             : Train 9.5692, Val 10.4166, Test 10.2403
          MAE              : Train 7.0565, Val 7.6639, Test 7.5988
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 86: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1019, Val -0.0623, Test -0.0646
          RMSE             : Train 9.5691, Val 10.4236, Test 10.2475
          MAE              : Train 7.0519, Val 7.6774, Test 7.6122
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 87: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1019, Val -0.0618, Test -0.0640
          RMSE             : Train 9.5691, Val 10.4214, Test 10.2448
          MAE              : Train 7.0558, Val 7.6718, Test 7.6063
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 88: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1019, Val -0.0614, Test -0.0636
          RMSE             : Train 9.5692, Val 10.4194, Test 10.2429
          MAE              : Train 7.0535, Val 7.6672, Test 7.6020
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 89: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1019, Val -0.0615, Test -0.0636
          RMSE             : Train 9.5689, Val 10.4196, Test 10.2429
          MAE              : Train 7.0546, Val 7.6673, Test 7.6019
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 90: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1019, Val -0.0616, Test -0.0638
          RMSE             : Train 9.5689, Val 10.4202, Test 10.2436
          MAE              : Train 7.0540, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 91: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1019, Val -0.0617, Test -0.0640
          RMSE             : Train 9.5689, Val 10.4207, Test 10.2445
          MAE              : Train 7.0535, Val 7.6703, Test 7.6052
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 92: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0620, Test -0.0642
          RMSE             : Train 9.5688, Val 10.4221, Test 10.2457
          MAE              : Train 7.0533, Val 7.6717, Test 7.6063
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 93: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0620, Test -0.0642
          RMSE             : Train 9.5687, Val 10.4220, Test 10.2457
          MAE              : Train 7.0523, Val 7.6716, Test 7.6063
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 94: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0618, Test -0.0640
          RMSE             : Train 9.5686, Val 10.4214, Test 10.2448
          MAE              : Train 7.0540, Val 7.6698, Test 7.6043
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 95: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0621, Test -0.0644
          RMSE             : Train 9.5685, Val 10.4228, Test 10.2465
          MAE              : Train 7.0517, Val 7.6725, Test 7.6072
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 96: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0622, Test -0.0644
          RMSE             : Train 9.5685, Val 10.4230, Test 10.2465
          MAE              : Train 7.0546, Val 7.6720, Test 7.6066
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 97: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0618, Test -0.0640
          RMSE             : Train 9.5685, Val 10.4213, Test 10.2446
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.04it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.87it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.21it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.70it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.35it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.96it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.93it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 35.91it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.77it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.94it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.07it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.21it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 28.21it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.44it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.42it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.50it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.17it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.27it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.05it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 20.90it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.00it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.99it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.28it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 23.39it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.26it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.15it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.00it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.47it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.34it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 13.07it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.03it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.48it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 29.48it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.70it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.71it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.62it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 18.85it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.49it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.64it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 20.86it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.17it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.14it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 18.65it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.50it/s]Train:  68%|██████▊   | 41/60 [00:01<00:01, 17.63it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 21.11it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 18.98it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 19.98it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 23.15it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.23it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 17.65it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 19.76it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 26.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 23.60it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:12,  4.69it/s]Train:  12%|█▏        | 7/60 [00:00<00:03, 17.27it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.01it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.82it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 21.41it/s]Train:  40%|████      | 24/60 [00:01<00:01, 22.63it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.18it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.58it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.22it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.09it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 25.28it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.84it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 21.39it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.20it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.39it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 12.86it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 23.34it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.44it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.32it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.43it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.39it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.91it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.39it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 20.86it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.94it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 21.61it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 21.83it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 23.36it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.87it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 22.87it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 20.54it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.83it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.64it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 22.98it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.74it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 27.04it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 28.87it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.71it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 20.31it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.26it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.51it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.13it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 22.19it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.83it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.05it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.81it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.26it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 23.70it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.46it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 28.22it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.00it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.03it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  5.69it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 17.23it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 22.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.04it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:10,  5.84it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.64it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.76it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.67it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.35it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.07it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.46it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.43it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.08it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.65it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.24it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.42it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 24.36it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.60it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.66it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.57it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 18.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 15.54it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 17.15it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 22.69it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 20.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 22.82it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.11it/s]Train:   5%|▌         | 3/60 [00:00<00:06,  8.27it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.77it/s]Train:  18%|█▊        | 11/60 [00:00<00:03, 16.19it/s]Train:  23%|██▎       | 14/60 [00:00<00:03, 14.90it/s]Train:  32%|███▏      | 19/60 [00:01<00:01, 21.31it/s]Train:  37%|███▋      | 22/60 [00:01<00:02, 18.45it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 18.12it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.06it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 20.27it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.98it/s]Train:  67%|██████▋   | 40/60 [00:02<00:00, 23.98it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 24.77it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 29.02it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 27.17it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.88it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.29it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 20.88it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 22.37it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 24.41it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.80it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.98it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.00it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.47it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 22.75it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.84it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.42it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 22.06it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.25it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.34it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 24.71it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 21.84it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.85it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 23.56it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.76it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 22.14it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 24.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.55it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:10,  5.73it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 21.15it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 18.27it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.40it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 19.44it/s]Train:  30%|███       | 18/60 [00:00<00:02, 18.54it/s]Train:  40%|████      | 24/60 [00:01<00:01, 21.41it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 23.78it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.85it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.01it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.86it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 27.60it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.23it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 15.29it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.78it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 27.07it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 26.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.47it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.00it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 31.13it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.32it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.19it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.52it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.12it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 24.76it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.45it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.10it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.64it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.15it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.59it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.44it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.01it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 29.71it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.79it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.56it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.32it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.46it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.99it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.92it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 17.04it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.77it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.05it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.00it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.86it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.19it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.72it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.51it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.33it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.70it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.61it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.84it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 32.23it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.20it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.69it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 34.45it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.79it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.39it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.83it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.07it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.15it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.89it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 28.08it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.50it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 27.51it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.82it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.96it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.23it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.65it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.68it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.07it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 45.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.24it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.52it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 36.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.57it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.01it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.23it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.59it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.19it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.67it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.44it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.20it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.95it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.13it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.25it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.06it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.03it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.77it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 30.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 13.17it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 25.27it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.43it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.63it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.71it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.48it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.01it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.82it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.25it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.52it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.50it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.28it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.22it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.33it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.33it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 24.81it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 26.31it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.56it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 17.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.61it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 32.44it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 26.43it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.43it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.65it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.54it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.90it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.93it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.55it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.74it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.39it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.13it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.90it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.52it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 22.93it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 24.21it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 28.92it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.27it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 17.34it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.42it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 27.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.62it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.73it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.57it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.14it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 20.12it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.58it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 21.02it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 18.95it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.76it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.78it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.43it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 21.87it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 21.72it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.17it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.29it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.04it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.33it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.18it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 26.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.23it/s]
          MAE              : Train 7.0532, Val 7.6694, Test 7.6040
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 98: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0621, Test -0.0643
          RMSE             : Train 9.5684, Val 10.4228, Test 10.2462
          MAE              : Train 7.0520, Val 7.6721, Test 7.6067
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 99: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0618, Test -0.0641
          RMSE             : Train 9.5683, Val 10.4211, Test 10.2449
          MAE              : Train 7.0533, Val 7.6683, Test 7.6033
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 100: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0620, Test -0.0642
          RMSE             : Train 9.5683, Val 10.4223, Test 10.2457
          MAE              : Train 7.0521, Val 7.6702, Test 7.6047
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 101: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1021, Val -0.0619, Test -0.0642
          RMSE             : Train 9.5683, Val 10.4219, Test 10.2456
          MAE              : Train 7.0523, Val 7.6698, Test 7.6045
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 102: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1021, Val -0.0621, Test -0.0643
          RMSE             : Train 9.5682, Val 10.4226, Test 10.2460
          MAE              : Train 7.0533, Val 7.6704, Test 7.6049
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 103: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1021, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5681, Val 10.4252, Test 10.2487
          MAE              : Train 7.0514, Val 7.6750, Test 7.6096
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 104: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1021, Val -0.0620, Test -0.0642
          RMSE             : Train 9.5680, Val 10.4221, Test 10.2457
          MAE              : Train 7.0534, Val 7.6700, Test 7.6046
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 105: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1021, Val -0.0623, Test -0.0644
          RMSE             : Train 9.5680, Val 10.4235, Test 10.2468
          MAE              : Train 7.0518, Val 7.6708, Test 7.6051
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 106: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1021, Val -0.0622, Test -0.0644
          RMSE             : Train 9.5679, Val 10.4232, Test 10.2467
          MAE              : Train 7.0527, Val 7.6706, Test 7.6051
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 107: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1021, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5678, Val 10.4249, Test 10.2484
          MAE              : Train 7.0520, Val 7.6741, Test 7.6085
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 108: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1022, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5677, Val 10.4250, Test 10.2485
          MAE              : Train 7.0523, Val 7.6738, Test 7.6082
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 109: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1022, Val -0.0623, Test -0.0646
          RMSE             : Train 9.5677, Val 10.4239, Test 10.2475
          MAE              : Train 7.0509, Val 7.6710, Test 7.6057
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 110: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0624, Test -0.0647
          RMSE             : Train 9.5664, Val 10.4243, Test 10.2479
          MAE              : Train 7.0507, Val 7.6720, Test 7.6067
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 111: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5664, Val 10.4245, Test 10.2481
          MAE              : Train 7.0509, Val 7.6725, Test 7.6071
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 112: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0624, Test -0.0647
          RMSE             : Train 9.5664, Val 10.4243, Test 10.2479
          MAE              : Train 7.0504, Val 7.6721, Test 7.6067
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 113: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5664, Val 10.4245, Test 10.2480
          MAE              : Train 7.0510, Val 7.6725, Test 7.6070
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 114: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5664, Val 10.4247, Test 10.2482
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.48it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.79it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 15.50it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.09it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.91it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.84it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 22.21it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.03it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.71it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.02it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.70it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.60it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.78it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 28.69it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 31.03it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.69it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.06it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.90it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.66it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 23.54it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.82it/s]Train:   3%|▎         | 2/60 [00:00<00:08,  7.21it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.75it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 14.49it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.81it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 19.73it/s]Train:  33%|███▎      | 20/60 [00:01<00:01, 23.12it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.20it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.98it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.97it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.83it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.24it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.48it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 31.92it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 32.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.67it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 33.98it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.34it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 20.56it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.66it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.41it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.19it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.98it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.52it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.01it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.62it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.29it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.37it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.65it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.34it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.87it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00,  8.78it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 19.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.73it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 22.73it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.19it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.54it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.52it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.04it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.40it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.87it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.69it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.74it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.52it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.58it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.60it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.60it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.75it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.30it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.93it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.03it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 23.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.98it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.62it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.79it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.40it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.04it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.64it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.01it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.60it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.92it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.46it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.95it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.01it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.43it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.59it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.93it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 21.52it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 21.00it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 32.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.95it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 26.18it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.18it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.75it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.78it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.77it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.91it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.31it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.29it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.56it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.16it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.10it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.19it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.85it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.88it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 26.16it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 27.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.08it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 29.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 34.03it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.25it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.75it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.57it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 20.36it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 31.43it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.32it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.69it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.39it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.54it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.07it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.78it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.95it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.71it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 20.41it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.04it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 27.86it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.12it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  5.87it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 18.55it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 22.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.37it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.10it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 18.81it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.01it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 19.23it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.90it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 21.11it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.11it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.13it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 21.88it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.22it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.32it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 23.12it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.20it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 20.96it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.54it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 30.00it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.09it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 24.64it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 25.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.19it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.99it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 11.45it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 17.09it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.38it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 19.90it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 21.33it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 26.75it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.42it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.41it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.41it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.22it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.75it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.92it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.69it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.87it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 12.29it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 20.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.83it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 25.05it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 26.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 47.19it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.71it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.07it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 20.42it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 23.03it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.13it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.93it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.93it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.96it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.81it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 24.06it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 21.93it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.61it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 17.39it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 12.14it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 20.11it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 24.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.62it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.51it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.22it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.74it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.86it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.72it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.66it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.58it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.48it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 21.93it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.48it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 20.82it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.27it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 25.97it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 27.93it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.75it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 16.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.28it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.36it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 25.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.32it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.40it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.82it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 16.75it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.28it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 19.58it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 18.63it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.75it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 20.50it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 20.40it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.66it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 22.12it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 21.83it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.15it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 23.94it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.42it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.70it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 26.43it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 26.95it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.76it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.76it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 42.54it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.65it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.95it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.69it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.56it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.53it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.99it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.84it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.41it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.21it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.03it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 21.92it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.46it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.31it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 27.43it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 24.09it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.47it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.35it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.88it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.86it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.88it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.74it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.01it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.31it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.86it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.91it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.92it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.34it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.11it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.16it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.23it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.00it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 23.83it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 25.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.04it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.74it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.78it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 21.39it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 20.92it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.90it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 21.52it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 20.24it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 22.91it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.89it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 22.36it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.30it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.27it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 29.56it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.04it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 27.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 46.94it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.72it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.70it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.47it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 21.28it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.73it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.49it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 20.82it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.48it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 22.47it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 21.64it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.17it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.83it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.46it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 24.66it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.59it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 26.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.22it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.87it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.54it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.48it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.45it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.78it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.23it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.75it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.62it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.51it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 26.54it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.96it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.55it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.32it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 15.73it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 22.11it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 22.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 23.74it/s]
          MAE              : Train 7.0513, Val 7.6729, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 115: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5664, Val 10.4244, Test 10.2479
          MAE              : Train 7.0508, Val 7.6723, Test 7.6068
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 116: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5664, Val 10.4246, Test 10.2481
          MAE              : Train 7.0507, Val 7.6725, Test 7.6070
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 117: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5664, Val 10.4246, Test 10.2481
          MAE              : Train 7.0513, Val 7.6726, Test 7.6071
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 118: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5664, Val 10.4246, Test 10.2480
          MAE              : Train 7.0511, Val 7.6725, Test 7.6070
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 119: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5663, Val 10.4246, Test 10.2480
          MAE              : Train 7.0506, Val 7.6722, Test 7.6067
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 120: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5663, Val 10.4246, Test 10.2480
          MAE              : Train 7.0506, Val 7.6722, Test 7.6067
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 121: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5663, Val 10.4247, Test 10.2481
          MAE              : Train 7.0507, Val 7.6725, Test 7.6070
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 122: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5663, Val 10.4246, Test 10.2481
          MAE              : Train 7.0511, Val 7.6724, Test 7.6069
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 123: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5663, Val 10.4244, Test 10.2478
          MAE              : Train 7.0503, Val 7.6719, Test 7.6064
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 124: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5663, Val 10.4246, Test 10.2480
          MAE              : Train 7.0512, Val 7.6724, Test 7.6068
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 125: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5663, Val 10.4249, Test 10.2483
          MAE              : Train 7.0507, Val 7.6730, Test 7.6075
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 126: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5663, Val 10.4248, Test 10.2481
          MAE              : Train 7.0508, Val 7.6726, Test 7.6071
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 127: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5663, Val 10.4249, Test 10.2483
          MAE              : Train 7.0512, Val 7.6729, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 128: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0624, Test -0.0646
          RMSE             : Train 9.5663, Val 10.4243, Test 10.2477
          MAE              : Train 7.0506, Val 7.6719, Test 7.6064
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 129: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5663, Val 10.4250, Test 10.2484
          MAE              : Train 7.0509, Val 7.6731, Test 7.6075
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 130: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5663, Val 10.4245, Test 10.2478
          MAE              : Train 7.0509, Val 7.6720, Test 7.6066
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 131: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5663, Val 10.4251, Test 10.2485
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.13it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.97it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.39it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.00it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.00it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.47it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.60it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.16it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.40it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.02it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 22.36it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 27.13it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.75it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 29.24it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.38it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.99it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:10,  5.74it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.19it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.26it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.84it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.02it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.99it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.16it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.22it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.85it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.87it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.27it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 22.70it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.24it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.79it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.30it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.60it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 13.56it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 16.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 11.48it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 21.07it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 24.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.83it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.04it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.71it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.94it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.92it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.84it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.48it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 23.88it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.28it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.56it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.46it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.83it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.96it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.66it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 31.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.20it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.45it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.15it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.73it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.12it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.51it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.38it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.86it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.30it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.09it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.96it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.04it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.60it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.97it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.09it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 21.96it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 19.29it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 19.11it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 18.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.99it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 30.50it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 25.80it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 26.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:12,  4.62it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.39it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.49it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.78it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.11it/s]Train:  40%|████      | 24/60 [00:01<00:01, 25.79it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.82it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.63it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.62it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.77it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.59it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.81it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.43it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 28.03it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.75it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 26.86it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 22.45it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 27.00it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 22.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.15it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 26.97it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.88it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.58it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.91it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 22.36it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.54it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.67it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.02it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.71it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.83it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.65it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.26it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.26it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.02it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.39it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.38it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.34it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.70it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.02it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.16it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.47it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.63it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.84it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.69it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.00it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.10it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 27.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00,  9.96it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 13.31it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.98it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.12it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.13it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.69it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 21.46it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.59it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 23.47it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.86it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.37it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.53it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.94it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.61it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.17it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.64it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.18it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.40it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.49it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 36.47it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 33.56it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.03it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 19.27it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 23.86it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.87it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 31.88it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.74it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.94it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.35it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 28.30it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.40it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.22it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.95it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.80it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.09it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.52it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 24.60it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.69it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.46it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.36it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 33.19it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.75it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.59it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.19it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.84it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.00it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 34.50it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.90it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.74it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.26it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.08it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.94it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.02it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 22.46it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 25.05it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.23it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.39it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.93it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.55it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.49it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.43it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.68it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.56it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.03it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.59it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.69it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.35it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 20.07it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 19.44it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 18.88it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 18.38it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 21.93it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 20.48it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 20.46it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 23.81it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 31.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 11.00it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 21.95it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 26.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.75it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.64it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 13.79it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 16.82it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.49it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.23it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.91it/s]Train:  40%|████      | 24/60 [00:01<00:01, 27.00it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.37it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.29it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.29it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.21it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.15it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 26.33it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 30.09it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.26it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.83it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.94it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.31it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.38it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.08it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.49it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 18.24it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 25.93it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.96it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.18it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.59it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.66it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.69it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.94it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.09it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.51it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.48it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 28.82it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.68it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 30.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  8.06it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 21.49it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 27.28it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.28it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:10,  5.77it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 20.74it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.63it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.05it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.00it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.48it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.93it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.37it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.07it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.89it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.49it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.05it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.74it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.65it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 27.22it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 29.78it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.66it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 24.83it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.71it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.01it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.95it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 32.77it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.50it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.27it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.85it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.41it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.51it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.14it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.46it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.42it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.45it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.17it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 26.00it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 24.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.57it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.04it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.95it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 21.32it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 24.09it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 28.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.70it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 14.23it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.15it/s]Train:  20%|██        | 12/60 [00:00<00:02, 21.97it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.27it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.46it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 22.48it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.31it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.53it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.65it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 20.39it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.36it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.18it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 28.41it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 27.89it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 27.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.83it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 23.91it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 26.34it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.76it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:12,  4.91it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.49it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.30it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.72it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.50it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.87it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.85it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.26it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.98it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.19it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.56it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.16it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.87it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 28.10it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.55it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 37.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.20it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.45it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.91it/s]
          MAE              : Train 7.0508, Val 7.6734, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 132: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5663, Val 10.4246, Test 10.2480
          MAE              : Train 7.0506, Val 7.6722, Test 7.6068
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 133: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5663, Val 10.4252, Test 10.2486
          MAE              : Train 7.0510, Val 7.6735, Test 7.6079
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 134: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5662, Val 10.4252, Test 10.2486
          MAE              : Train 7.0515, Val 7.6734, Test 7.6079
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 135: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5662, Val 10.4248, Test 10.2482
          MAE              : Train 7.0507, Val 7.6727, Test 7.6072
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 136: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5662, Val 10.4249, Test 10.2483
          MAE              : Train 7.0506, Val 7.6729, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 137: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0627, Test -0.0649
          RMSE             : Train 9.5662, Val 10.4255, Test 10.2488
          MAE              : Train 7.0515, Val 7.6742, Test 7.6086
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 138: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5662, Val 10.4250, Test 10.2484
          MAE              : Train 7.0518, Val 7.6731, Test 7.6076
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 139: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5662, Val 10.4247, Test 10.2481
          MAE              : Train 7.0510, Val 7.6726, Test 7.6071
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 140: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5662, Val 10.4247, Test 10.2481
          MAE              : Train 7.0504, Val 7.6726, Test 7.6071
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 141: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5661, Val 10.4248, Test 10.2482
          MAE              : Train 7.0508, Val 7.6728, Test 7.6072
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 142: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5661, Val 10.4247, Test 10.2482
          MAE              : Train 7.0507, Val 7.6727, Test 7.6072
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 143: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5661, Val 10.4248, Test 10.2482
          MAE              : Train 7.0508, Val 7.6728, Test 7.6073
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 144: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4248, Test 10.2483
          MAE              : Train 7.0509, Val 7.6729, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 145: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0647
          RMSE             : Train 9.5661, Val 10.4248, Test 10.2482
          MAE              : Train 7.0508, Val 7.6728, Test 7.6073
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 146: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4248, Test 10.2483
          MAE              : Train 7.0508, Val 7.6728, Test 7.6073
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 147: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0508, Val 7.6729, Test 7.6073
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 148: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.93it/s]Train:   5%|▌         | 3/60 [00:00<00:05,  9.75it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.41it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.19it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.63it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.03it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 18.84it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.81it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.27it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.85it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.37it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.06it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.77it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 29.28it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 30.52it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.28it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 36.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 35.19it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.89it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.53it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 17.26it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.70it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.42it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.05it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 21.82it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 21.93it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.85it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.31it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.85it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.14it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.44it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.39it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 28.64it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.95it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 31.93it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.58it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.11it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:08,  6.91it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 16.92it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.54it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.64it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 21.85it/s]Train:  40%|████      | 24/60 [00:01<00:01, 27.25it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.63it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 24.46it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.94it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.68it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.35it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.53it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 31.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 32.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.35it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.22it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.90it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.46it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.37it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.91it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.01it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.03it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.67it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.27it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 22.65it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.38it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.99it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.34it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.95it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.66it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.44it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 25.58it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 28.47it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.23it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.16it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.06it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 34.30it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.82it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.17it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.83it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.92it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.91it/s]Train:  30%|███       | 18/60 [00:00<00:02, 20.96it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.75it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.18it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.62it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.22it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.16it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.10it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.77it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.60it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.62it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.19it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 22.56it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:04,  3.59it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 19.18it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 26.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.95it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.66it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.44it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.85it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.69it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.67it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.78it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.88it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.01it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.17it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.80it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.50it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 33.23it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 31.06it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.79it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.03it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 18.97it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 30.20it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.06it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.54it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.19it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.88it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 21.45it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.30it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 21.27it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 21.48it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.11it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 21.30it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 21.36it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.37it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.75it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.25it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 24.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.96it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 27.96it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 24.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.12it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.50it/s]Train:  10%|█         | 6/60 [00:00<00:04, 13.14it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.86it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 19.36it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.25it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 20.57it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.25it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.63it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.99it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 24.59it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 24.69it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.85it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 24.82it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:03,  5.41it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.54it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 22.15it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 20.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.25it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.74it/s]Train:   3%|▎         | 2/60 [00:00<00:09,  6.14it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.81it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.41it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.22it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.28it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.86it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.56it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.18it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.38it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.30it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.22it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 24.88it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 26.49it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.35it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.22it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 10.78it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 23.33it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 24.96it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 24.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.53it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 18.76it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.57it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.77it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.00it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.41it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.16it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.26it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.20it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.94it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.69it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.80it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.59it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.44it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.49it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 37.41it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.98it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 27.42it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 27.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 28.34it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.03it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.76it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.83it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.01it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.23it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.22it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.03it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.53it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.82it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.31it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.67it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.91it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 21.95it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 20.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 22.98it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 12.54it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 21.81it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.93it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.66it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.45it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 26.62it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.37it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.37it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.89it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.77it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.99it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.87it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.67it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.64it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.32it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.28it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  4.58it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 19.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 20.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.27it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.92it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 27.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.53it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.71it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.75it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.96it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.21it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 25.42it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.94it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.60it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.21it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.32it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.90it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.13it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.69it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.73it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 24.99it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.37it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.24it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.60it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 28.33it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.81it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.05it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.50it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.94it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.40it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.69it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.86it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.66it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.05it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.24it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 24.78it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 24.16it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.29it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.27it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.68it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.60it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 31.13it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.97it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.40it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.92it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.04it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.95it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.55it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.30it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.09it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.47it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.71it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.57it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.52it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 24.05it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 27.18it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.82it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.26it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 24.16it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.66it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.94it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.61it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.31it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.78it/s]Train:   8%|▊         | 5/60 [00:00<00:04, 13.04it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 17.51it/s]Train:  17%|█▋        | 10/60 [00:00<00:03, 14.81it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 18.60it/s]Train:  27%|██▋       | 16/60 [00:01<00:02, 16.34it/s]Train:  33%|███▎      | 20/60 [00:01<00:01, 20.96it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 20.00it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.59it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 19.62it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 20.59it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.31it/s]Train:  67%|██████▋   | 40/60 [00:02<00:00, 24.11it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 25.75it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 26.99it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 28.62it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 13.23it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 23.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.33it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 24.33it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 26.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 41.61it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.73it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.39it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 19.84it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.17it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.69it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 20.54it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.92it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 21.55it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 21.34it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.55it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 23.02it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 21.30it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 22.27it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 17.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.32it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.75it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.01it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.93it/s]
          MAE              : Train 7.0508, Val 7.6729, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 149: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0508, Val 7.6729, Test 7.6073
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 150: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0508, Val 7.6729, Test 7.6073
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 151: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0508, Val 7.6729, Test 7.6073
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 152: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0508, Val 7.6729, Test 7.6073
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 153: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0508, Val 7.6729, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 154: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0508, Val 7.6729, Test 7.6073
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 155: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2484
          MAE              : Train 7.0509, Val 7.6730, Test 7.6075
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 156: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0509, Val 7.6730, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 157: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0508, Val 7.6730, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 158: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0509, Val 7.6730, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 159: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0509, Val 7.6730, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 160: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0509, Val 7.6729, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 161: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0625, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4249, Test 10.2483
          MAE              : Train 7.0508, Val 7.6729, Test 7.6074
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 162: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4250, Test 10.2484
          MAE              : Train 7.0509, Val 7.6730, Test 7.6075
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 163: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4250, Test 10.2484
          MAE              : Train 7.0510, Val 7.6732, Test 7.6076
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 164: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4250, Test 10.2484
          MAE              : Train 7.0510, Val 7.6732, Test 7.6076
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 165: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4250, Test 10.2484
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.48it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.75it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.16it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.76it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.22it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.60it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 28.24it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.14it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.00it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.15it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.42it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.03it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 26.49it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 32.36it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.99it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 23.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.74it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.53it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.65it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.59it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.65it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.93it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.59it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.91it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.62it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.34it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.70it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.04it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.49it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.51it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.89it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 28.68it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.97it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.31it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 28.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 47.45it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.14it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.67it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.61it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.68it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.08it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.66it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 23.34it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.37it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.65it/s]Train:  40%|████      | 24/60 [00:00<00:01, 25.81it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.22it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.13it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.16it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.07it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 24.38it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.57it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.57it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 26.15it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.66it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 26.29it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 24.35it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 24.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.11it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.43it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.22it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.55it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.54it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.54it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.59it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.19it/s]Train:  40%|████      | 24/60 [00:01<00:01, 26.47it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.17it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.01it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.52it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.47it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.81it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.91it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.91it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  6.68it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 20.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.73it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 24.98it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 24.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.31it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.66it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.96it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 20.83it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 18.51it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.21it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.26it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.02it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.53it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.28it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.45it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 29.67it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.03it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 29.22it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.05it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 34.82it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 41.03it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.96it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.25it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.87it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.22it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.35it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.38it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 23.76it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.02it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.35it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.17it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.65it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.72it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.76it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.27it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 34.91it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 29.09it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 34.29it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.69it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.48it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.91it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.00it/s]Train:  12%|█▏        | 7/60 [00:00<00:03, 16.77it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 16.17it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.79it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.13it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.87it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 24.67it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 19.37it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 21.43it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.37it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.99it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.93it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.48it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 27.08it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 31.89it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.22it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.21it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 31.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.40it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 20.88it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 23.19it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 22.09it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 22.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.37it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.00it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.00it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 19.71it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.87it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.71it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 26.37it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.91it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.94it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.58it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.16it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.12it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.22it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.14it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.35it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 37.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 40.87it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.27it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.44it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.04it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:13,  4.49it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 13.06it/s]Train:  12%|█▏        | 7/60 [00:00<00:03, 15.29it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.97it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.53it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.35it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 24.67it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.67it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.54it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.19it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.69it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.69it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.15it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 27.14it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.44it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.28it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.72it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 18.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 19.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 11.79it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.08it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.01it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.75it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.13it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.71it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.92it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.87it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 30.25it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.61it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.61it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.44it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.08it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.86it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.72it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.79it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.81it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.15it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.23it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.20it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.22it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.66it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.14it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.88it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.19it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.73it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.45it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.60it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.91it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.78it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.83it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.77it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 35.10it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.10it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.15it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 29.56it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.86it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.46it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.83it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.87it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.98it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.39it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.77it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.20it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.58it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 25.59it/s]Train:  40%|████      | 24/60 [00:00<00:01, 24.69it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.84it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.84it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.64it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.63it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.00it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 28.63it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 29.70it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.26it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.08it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.14it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 14.72it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.21it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.59it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 18.52it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.47it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.11it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.27it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.41it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.73it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.80it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.74it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.76it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.41it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.21it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.13it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 29.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.53it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.35it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 36.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.44it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.14it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.74it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.60it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 33.60it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.96it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.67it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.71it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.59it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.78it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.76it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.55it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.70it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.67it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.82it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 21.92it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 22.50it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.50it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.66it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.05it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.01it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.98it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.14it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.40it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 28.89it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.87it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.46it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.96it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.75it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.96it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.22it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 30.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 15.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 12.61it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 22.61it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.07it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.14it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.94it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.09it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.65it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 28.85it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.43it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 21.21it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 21.64it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.19it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.63it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.00it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.83it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.87it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00,  9.52it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 25.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 24.80it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 20.09it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 23.54it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.68it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.89it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.42it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.00it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.89it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.34it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.21it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.67it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.33it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.27it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.71it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.76it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.12it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.33it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.52it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.74it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.75it/s]
          MAE              : Train 7.0510, Val 7.6731, Test 7.6076
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 166: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4250, Test 10.2484
          MAE              : Train 7.0511, Val 7.6732, Test 7.6077
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 167: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4250, Test 10.2484
          MAE              : Train 7.0510, Val 7.6732, Test 7.6077
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 168: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4250, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6077
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 169: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4250, Test 10.2484
          MAE              : Train 7.0510, Val 7.6732, Test 7.6077
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 170: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4250, Test 10.2484
          MAE              : Train 7.0510, Val 7.6732, Test 7.6076
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 171: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5661, Val 10.4250, Test 10.2485
          MAE              : Train 7.0510, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 172: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4250, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 173: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4250, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 174: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 175: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4250, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 176: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4250, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 177: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4250, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 178: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4250, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 179: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4250, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 180: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4250, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 181: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4250, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 182: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.63it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.93it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.85it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.09it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.91it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.36it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.43it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.15it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.34it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.04it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.33it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 26.31it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 28.96it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.06it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.88it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.69it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.56it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.57it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.25it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 33.99it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.61it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.85it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.14it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.92it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.41it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.39it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.22it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.24it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 27.61it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.19it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 31.92it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.75it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.96it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.67it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.99it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.31it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.41it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.09it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.46it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.57it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 36.01it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.93it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.45it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 24.86it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 28.95it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.73it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.02it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.53it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.41it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.07it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.13it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.47it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.26it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.33it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.75it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.68it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.66it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.57it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.20it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.17it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.05it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 25.38it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 25.14it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.36it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.23it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.91it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.27it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.69it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.19it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.57it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.17it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.93it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.27it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.93it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.18it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.71it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.47it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.59it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 32.43it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.52it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.43it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.50it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 37.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.00it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.90it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.09it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.52it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.69it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 35.37it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 31.78it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.13it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.45it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 34.17it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.20it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 24.86it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 26.11it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.88it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.66it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 27.40it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.95it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.62it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.75it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.27it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.97it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.87it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.28it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.44it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 35.07it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 33.37it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.45it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.52it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.23it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 25.50it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 28.27it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.35it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 33.33it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.49it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.26it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 25.33it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.84it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.97it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.86it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.03it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.66it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.17it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.33it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.84it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.42it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.16it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.42it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.28it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.40it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.49it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.76it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.65it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.50it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.60it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.75it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.20it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 28.45it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.20it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 27.75it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.61it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.81it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.70it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 31.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.02it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 29.56it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 36.66it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.34it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 30.58it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.38it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.12it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.21it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.49it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.04it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.56it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.86it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.10it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.42it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.74it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.39it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.35it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.84it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.25it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.63it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.07it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.23it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.13it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.00it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.63it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.65it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.81it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.17it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.46it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.32it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.41it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.47it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 30.22it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.93it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.21it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.16it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.32it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.69it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.35it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.37it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.50it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.92it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.26it/s]Train:  40%|████      | 24/60 [00:00<00:01, 24.78it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.14it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.72it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.78it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.73it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.51it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 32.30it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.60it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.21it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.72it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.19it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.27it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.99it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 33.48it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.61it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.72it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.62it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.74it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.45it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.88it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.90it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.96it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.46it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.92it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 31.19it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.15it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.99it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.40it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.78it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 33.73it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.81it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.60it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 25.58it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.24it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.20it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.48it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.91it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.61it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.72it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.10it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.88it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.59it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.19it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.17it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.82it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.73it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.90it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.30it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.46it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 23.77it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.75it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.50it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.70it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.99it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.89it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.37it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 26.45it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 19.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:03,  4.62it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 19.08it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 26.16it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.66it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.72it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.71it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.87it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.25it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.69it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.59it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.70it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.35it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.73it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.74it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.45it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.92it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 31.58it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.79it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.13it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.37it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.20it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 18.99it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.71it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.26it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.75it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.68it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.07it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.82it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.37it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.50it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.32it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.67it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.77it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.10it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.94it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.09it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.91it/s]
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 183: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 184: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 185: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 186: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 187: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 188: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 189: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 190: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 191: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 192: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 193: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 194: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 195: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 196: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 197: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 198: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 199: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 28.54it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.88it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.40it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.45it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.14it/s]Train:  40%|████      | 24/60 [00:00<00:01, 28.90it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 31.01it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.17it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.62it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.65it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.67it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.97it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.02it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.06it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.14it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.80it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.56it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.97it/s]

          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
Epoch 200: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0626, Test -0.0648
          RMSE             : Train 9.5660, Val 10.4251, Test 10.2485
          MAE              : Train 7.0511, Val 7.6733, Test 7.6078
Best:
          R2_Score         : Train 0.0313, Val -0.0228, Test -0.0258
          RMSE             : Train 9.9381, Val 10.2281, Test 10.0591
          MAE              : Train 7.3667, Val 7.4977, Test 7.4430
