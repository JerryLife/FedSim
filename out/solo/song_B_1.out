  0%|          | 0/244489 [00:00<?, ?it/s]  0%|          | 268/244489 [00:00<01:31, 2664.62it/s]  0%|          | 771/244489 [00:00<01:00, 4048.30it/s]  1%|          | 1484/244489 [00:00<00:44, 5448.57it/s]  1%|          | 2485/244489 [00:00<00:33, 7239.80it/s]  1%|▏         | 3276/244489 [00:00<00:32, 7480.15it/s]  2%|▏         | 4682/244489 [00:00<00:24, 9709.83it/s]  2%|▏         | 5654/244489 [00:00<00:24, 9670.03it/s]  3%|▎         | 6675/244489 [00:00<00:24, 9837.59it/s]  3%|▎         | 7659/244489 [00:00<00:29, 8026.18it/s]  3%|▎         | 8514/244489 [00:01<00:31, 7386.86it/s]  4%|▍         | 9294/244489 [00:01<00:33, 7112.48it/s]  4%|▍         | 10033/244489 [00:01<00:33, 7002.80it/s]  4%|▍         | 10752/244489 [00:01<00:34, 6844.56it/s]  5%|▍         | 11449/244489 [00:01<00:34, 6779.87it/s]  5%|▍         | 12152/244489 [00:01<00:33, 6846.30it/s]  5%|▌         | 12853/244489 [00:01<00:33, 6890.93it/s]  6%|▌         | 13561/244489 [00:01<00:33, 6943.75it/s]  6%|▌         | 14259/244489 [00:01<00:36, 6282.28it/s]  6%|▌         | 14901/244489 [00:02<00:39, 5777.81it/s]  6%|▋         | 15494/244489 [00:02<01:55, 1981.69it/s]  7%|▋         | 16198/244489 [00:03<01:29, 2554.64it/s]  7%|▋         | 16860/244489 [00:03<01:12, 3120.87it/s]  7%|▋         | 17420/244489 [00:03<01:11, 3158.01it/s]  7%|▋         | 18039/244489 [00:03<01:01, 3676.68it/s]  8%|▊         | 18664/244489 [00:03<00:53, 4189.47it/s]  8%|▊         | 19264/244489 [00:03<00:49, 4589.93it/s]  8%|▊         | 19833/244489 [00:03<00:47, 4774.96it/s]  8%|▊         | 20415/244489 [00:03<00:44, 5037.82it/s]  9%|▊         | 21012/244489 [00:03<00:42, 5283.51it/s]  9%|▉         | 21587/244489 [00:04<00:44, 5064.79it/s]  9%|▉         | 22213/244489 [00:04<00:41, 5385.17it/s]  9%|▉         | 22779/244489 [00:04<00:40, 5458.66it/s] 10%|▉         | 23404/244489 [00:04<00:38, 5682.38it/s] 10%|▉         | 23988/244489 [00:04<00:38, 5699.32it/s] 10%|█         | 24671/244489 [00:04<00:36, 6026.15it/s] 10%|█         | 25283/244489 [00:04<00:38, 5628.79it/s] 11%|█         | 25857/244489 [00:04<00:38, 5606.74it/s] 11%|█         | 26511/244489 [00:04<00:37, 5871.38it/s] 11%|█         | 27105/244489 [00:05<00:43, 4992.79it/s] 11%|█▏        | 27631/244489 [00:07<04:14, 850.46it/s]  11%|█▏        | 28007/244489 [00:10<11:01, 327.14it/s] 12%|█▏        | 28274/244489 [00:12<14:00, 257.38it/s] 12%|█▏        | 28465/244489 [00:13<12:26, 289.51it/s] 12%|█▏        | 28626/244489 [00:13<11:09, 322.32it/s] 12%|█▏        | 28763/244489 [00:13<10:01, 358.65it/s] 12%|█▏        | 28885/244489 [00:13<09:09, 392.62it/s] 12%|█▏        | 28993/244489 [00:14<15:00, 239.34it/s] 12%|█▏        | 29071/244489 [00:15<20:16, 177.05it/s] 12%|█▏        | 29128/244489 [00:16<24:00, 149.47it/s] 12%|█▏        | 29170/244489 [00:17<27:23, 131.02it/s] 12%|█▏        | 29202/244489 [00:17<30:15, 118.59it/s] 12%|█▏        | 29227/244489 [00:18<32:27, 110.52it/s] 12%|█▏        | 29247/244489 [00:18<34:44, 103.28it/s] 12%|█▏        | 29263/244489 [00:18<34:39, 103.52it/s] 12%|█▏        | 29277/244489 [00:18<33:38, 106.63it/s] 12%|█▏        | 29291/244489 [00:18<32:34, 110.10it/s] 12%|█▏        | 29305/244489 [00:18<31:31, 113.76it/s] 12%|█▏        | 29319/244489 [00:18<30:59, 115.73it/s] 12%|█▏        | 29333/244489 [00:19<31:15, 114.75it/s] 12%|█▏        | 29346/244489 [00:19<31:08, 115.11it/s] 12%|█▏        | 29359/244489 [00:19<31:47, 112.76it/s] 12%|█▏        | 29373/244489 [00:19<30:26, 117.81it/s] 12%|█▏        | 29386/244489 [00:19<30:56, 115.84it/s] 12%|█▏        | 29398/244489 [00:19<31:19, 114.46it/s] 12%|█▏        | 29410/244489 [00:19<32:05, 111.69it/s] 12%|█▏        | 29422/244489 [00:19<31:33, 113.56it/s] 12%|█▏        | 29434/244489 [00:19<32:17, 111.00it/s] 12%|█▏        | 29446/244489 [00:20<32:05, 111.69it/s] 12%|█▏        | 29460/244489 [00:20<30:36, 117.07it/s] 12%|█▏        | 29473/244489 [00:20<29:43, 120.53it/s] 12%|█▏        | 29486/244489 [00:20<29:05, 123.17it/s] 12%|█▏        | 29500/244489 [00:20<28:28, 125.85it/s] 12%|█▏        | 29514/244489 [00:20<27:56, 128.21it/s] 12%|█▏        | 29527/244489 [00:20<28:09, 127.23it/s] 12%|█▏        | 29540/244489 [00:20<28:24, 126.12it/s] 12%|█▏        | 29553/244489 [00:20<28:21, 126.33it/s] 12%|█▏        | 29566/244489 [00:20<28:13, 126.89it/s] 12%|█▏        | 29579/244489 [00:21<28:12, 126.96it/s] 12%|█▏        | 29592/244489 [00:21<28:06, 127.43it/s] 12%|█▏        | 29605/244489 [00:21<27:58, 128.06it/s] 12%|█▏        | 29618/244489 [00:21<27:52, 128.44it/s] 12%|█▏        | 29631/244489 [00:21<27:54, 128.34it/s] 12%|█▏        | 29644/244489 [00:21<28:08, 127.23it/s] 12%|█▏        | 29657/244489 [00:21<28:18, 126.52it/s] 12%|█▏        | 29670/244489 [00:21<28:27, 125.78it/s] 12%|█▏        | 29683/244489 [00:21<28:54, 123.84it/s] 12%|█▏        | 29696/244489 [00:22<29:02, 123.28it/s] 12%|█▏        | 29709/244489 [00:22<29:24, 121.73it/s] 12%|█▏        | 29722/244489 [00:22<32:14, 110.99it/s] 12%|█▏        | 29735/244489 [00:22<30:55, 115.73it/s] 12%|█▏        | 29749/244489 [00:22<29:42, 120.45it/s] 12%|█▏        | 29763/244489 [00:22<28:50, 124.06it/s] 12%|█▏        | 29777/244489 [00:22<28:09, 127.11it/s] 12%|█▏        | 29790/244489 [00:22<28:42, 124.66it/s] 12%|█▏        | 29804/244489 [00:22<28:09, 127.08it/s] 12%|█▏        | 29818/244489 [00:23<27:56, 128.02it/s] 12%|█▏        | 29832/244489 [00:23<27:40, 129.28it/s] 12%|█▏        | 29846/244489 [00:23<27:27, 130.28it/s] 12%|█▏        | 29860/244489 [00:23<27:25, 130.43it/s] 12%|█▏        | 29874/244489 [00:23<27:44, 128.93it/s] 12%|█▏        | 29888/244489 [00:23<27:38, 129.42it/s] 12%|█▏        | 29901/244489 [00:23<27:49, 128.51it/s] 12%|█▏        | 29914/244489 [00:23<27:54, 128.12it/s] 12%|█▏        | 29927/244489 [00:23<27:57, 127.92it/s] 12%|█▏        | 29940/244489 [00:23<28:02, 127.50it/s] 12%|█▏        | 29953/244489 [00:24<28:09, 126.96it/s] 12%|█▏        | 29966/244489 [00:24<28:19, 126.23it/s] 12%|█▏        | 29979/244489 [00:24<28:38, 124.79it/s] 12%|█▏        | 29992/244489 [00:24<28:36, 124.99it/s] 12%|█▏        | 30005/244489 [00:24<28:30, 125.38it/s] 12%|█▏        | 30018/244489 [00:24<28:13, 126.66it/s] 12%|█▏        | 30031/244489 [00:24<28:11, 126.77it/s] 12%|█▏        | 30045/244489 [00:24<27:48, 128.55it/s] 12%|█▏        | 30059/244489 [00:24<27:36, 129.46it/s] 12%|█▏        | 30073/244489 [00:25<27:33, 129.70it/s] 12%|█▏        | 30086/244489 [00:25<27:58, 127.77it/s] 12%|█▏        | 30099/244489 [00:25<28:00, 127.55it/s] 12%|█▏        | 30112/244489 [00:25<28:11, 126.77it/s] 12%|█▏        | 30125/244489 [00:25<28:57, 123.41it/s] 12%|█▏        | 30138/244489 [00:25<29:22, 121.63it/s] 12%|█▏        | 30151/244489 [00:25<29:25, 121.41it/s] 12%|█▏        | 30164/244489 [00:25<29:21, 121.66it/s] 12%|█▏        | 30177/244489 [00:25<29:01, 123.07it/s] 12%|█▏        | 30190/244489 [00:25<29:11, 122.39it/s] 12%|█▏        | 30203/244489 [00:26<29:17, 121.94it/s] 12%|█▏        | 30216/244489 [00:26<29:14, 122.15it/s] 12%|█▏        | 30229/244489 [00:26<28:46, 124.11it/s] 12%|█▏        | 30242/244489 [00:26<29:02, 122.98it/s] 12%|█▏        | 30255/244489 [00:26<28:41, 124.44it/s] 12%|█▏        | 30268/244489 [00:26<28:30, 125.24it/s] 12%|█▏        | 30281/244489 [00:26<28:18, 126.09it/s] 12%|█▏        | 30294/244489 [00:26<28:06, 127.00it/s] 12%|█▏        | 30307/244489 [00:26<28:04, 127.13it/s] 12%|█▏        | 30320/244489 [00:26<28:00, 127.43it/s] 12%|█▏        | 30333/244489 [00:27<27:57, 127.63it/s] 12%|█▏        | 30347/244489 [00:27<27:55, 127.82it/s] 12%|█▏        | 30361/244489 [00:27<27:45, 128.55it/s] 12%|█▏        | 30374/244489 [00:27<28:13, 126.45it/s] 12%|█▏        | 30387/244489 [00:27<28:09, 126.75it/s] 12%|█▏        | 30402/244489 [00:27<27:22, 130.34it/s] 12%|█▏        | 30416/244489 [00:27<27:43, 128.69it/s] 12%|█▏        | 30429/244489 [00:27<28:10, 126.66it/s] 12%|█▏        | 30443/244489 [00:27<27:20, 130.46it/s] 12%|█▏        | 30457/244489 [00:28<27:40, 128.86it/s] 12%|█▏        | 30470/244489 [00:28<27:50, 128.09it/s] 12%|█▏        | 30483/244489 [00:28<27:48, 128.28it/s] 12%|█▏        | 30496/244489 [00:28<27:42, 128.75it/s] 12%|█▏        | 30509/244489 [00:28<27:43, 128.60it/s] 12%|█▏        | 30522/244489 [00:28<28:31, 125.03it/s] 12%|█▏        | 30536/244489 [00:28<28:10, 126.56it/s] 12%|█▏        | 30550/244489 [00:28<27:58, 127.48it/s] 13%|█▎        | 30563/244489 [00:28<27:51, 128.01it/s] 13%|█▎        | 30576/244489 [00:29<28:34, 124.75it/s] 13%|█▎        | 30589/244489 [00:29<28:26, 125.36it/s] 13%|█▎        | 30602/244489 [00:29<28:41, 124.24it/s] 13%|█▎        | 30615/244489 [00:29<28:37, 124.52it/s] 13%|█▎        | 30628/244489 [00:29<28:45, 123.97it/s] 13%|█▎        | 30641/244489 [00:29<28:49, 123.62it/s] 13%|█▎        | 30654/244489 [00:29<29:05, 122.48it/s] 13%|█▎        | 30667/244489 [00:29<29:02, 122.73it/s] 13%|█▎        | 30680/244489 [00:29<29:01, 122.78it/s] 13%|█▎        | 30693/244489 [00:29<29:05, 122.48it/s] 13%|█▎        | 30706/244489 [00:30<29:13, 121.92it/s] 13%|█▎        | 30719/244489 [00:30<29:24, 121.13it/s] 13%|█▎        | 30732/244489 [00:30<29:38, 120.19it/s] 13%|█▎        | 30745/244489 [00:30<30:07, 118.26it/s] 13%|█▎        | 30757/244489 [00:30<30:05, 118.39it/s] 13%|█▎        | 30769/244489 [00:30<30:18, 117.51it/s] 13%|█▎        | 30781/244489 [00:30<30:43, 115.95it/s] 13%|█▎        | 30793/244489 [00:30<30:46, 115.76it/s] 13%|█▎        | 30805/244489 [00:30<31:00, 114.83it/s] 13%|█▎        | 30817/244489 [00:31<30:57, 115.01it/s] 13%|█▎        | 30829/244489 [00:31<30:39, 116.17it/s] 13%|█▎        | 30841/244489 [00:31<30:54, 115.22it/s] 13%|█▎        | 30853/244489 [00:31<31:04, 114.61it/s] 13%|█▎        | 30865/244489 [00:31<30:55, 115.16it/s] 13%|█▎        | 30877/244489 [00:31<30:35, 116.37it/s] 13%|█▎        | 30889/244489 [00:31<30:20, 117.32it/s] 13%|█▎        | 30902/244489 [00:31<30:02, 118.53it/s] 13%|█▎        | 30914/244489 [00:31<30:05, 118.29it/s] 13%|█▎        | 30926/244489 [00:31<30:24, 117.06it/s] 13%|█▎        | 30939/244489 [00:32<30:00, 118.60it/s] 13%|█▎        | 30951/244489 [00:32<30:09, 118.02it/s] 13%|█▎        | 30963/244489 [00:32<30:06, 118.19it/s] 13%|█▎        | 30975/244489 [00:32<30:08, 118.05it/s] 13%|█▎        | 30987/244489 [00:32<30:07, 118.09it/s] 13%|█▎        | 30999/244489 [00:32<30:18, 117.42it/s] 13%|█▎        | 31011/244489 [00:32<30:16, 117.50it/s] 13%|█▎        | 31023/244489 [00:32<30:11, 117.86it/s] 13%|█▎        | 31035/244489 [00:32<30:22, 117.12it/s] 13%|█▎        | 31047/244489 [00:33<33:41, 105.60it/s] 13%|█▎        | 31060/244489 [00:33<31:56, 111.38it/s] 13%|█▎        | 31073/244489 [00:33<30:43, 115.78it/s] 13%|█▎        | 31086/244489 [00:33<29:59, 118.60it/s] 13%|█▎        | 31100/244489 [00:33<29:03, 122.41it/s] 13%|█▎        | 31113/244489 [00:33<28:45, 123.65it/s] 13%|█▎        | 31126/244489 [00:33<28:20, 125.46it/s] 13%|█▎        | 31139/244489 [00:33<28:18, 125.59it/s] 13%|█▎        | 31152/244489 [00:33<28:03, 126.75it/s] 13%|█▎        | 31165/244489 [00:33<27:57, 127.16it/s] 13%|█▎        | 31178/244489 [00:34<28:04, 126.67it/s] 13%|█▎        | 31192/244489 [00:34<27:42, 128.30it/s] 13%|█▎        | 31205/244489 [00:34<27:48, 127.83it/s] 13%|█▎        | 31219/244489 [00:34<27:36, 128.72it/s] 13%|█▎        | 31232/244489 [00:34<27:35, 128.81it/s] 13%|█▎        | 31247/244489 [00:34<26:23, 134.65it/s] 13%|█▎        | 31261/244489 [00:34<26:42, 133.07it/s] 13%|█▎        | 31275/244489 [00:34<26:51, 132.34it/s] 13%|█▎        | 31291/244489 [00:34<25:43, 138.11it/s] 13%|█▎        | 31305/244489 [00:34<26:19, 134.95it/s] 13%|█▎        | 31319/244489 [00:35<26:49, 132.47it/s] 13%|█▎        | 31333/244489 [00:35<27:04, 131.18it/s] 13%|█▎        | 31347/244489 [00:35<27:14, 130.37it/s] 13%|█▎        | 31361/244489 [00:35<27:31, 129.03it/s] 13%|█▎        | 31374/244489 [00:35<27:57, 127.01it/s] 13%|█▎        | 31387/244489 [00:35<28:51, 123.09it/s] 13%|█▎        | 31400/244489 [00:35<28:25, 124.95it/s] 13%|█▎        | 31413/244489 [00:35<28:35, 124.24it/s] 13%|█▎        | 31426/244489 [00:35<28:26, 124.85it/s] 13%|█▎        | 31439/244489 [00:36<28:27, 124.78it/s] 13%|█▎        | 31452/244489 [00:36<28:13, 125.78it/s] 13%|█▎        | 31465/244489 [00:36<28:10, 125.98it/s] 13%|█▎        | 31478/244489 [00:36<28:00, 126.76it/s] 13%|█▎        | 31492/244489 [00:36<27:32, 128.89it/s] 13%|█▎        | 31506/244489 [00:36<27:15, 130.19it/s] 13%|█▎        | 31520/244489 [00:36<27:06, 130.96it/s] 13%|█▎        | 31534/244489 [00:36<26:57, 131.65it/s] 13%|█▎        | 31548/244489 [00:36<26:51, 132.11it/s] 13%|█▎        | 31562/244489 [00:36<26:43, 132.75it/s] 13%|█▎        | 31576/244489 [00:37<26:39, 133.11it/s] 13%|█▎        | 31590/244489 [00:37<26:42, 132.89it/s] 13%|█▎        | 31604/244489 [00:37<26:38, 133.17it/s] 13%|█▎        | 31618/244489 [00:37<26:36, 133.31it/s] 13%|█▎        | 31632/244489 [00:37<26:40, 132.99it/s] 13%|█▎        | 31646/244489 [00:37<26:40, 132.95it/s] 13%|█▎        | 31660/244489 [00:37<26:40, 132.97it/s] 13%|█▎        | 31674/244489 [00:37<26:43, 132.76it/s] 13%|█▎        | 31688/244489 [00:37<26:37, 133.19it/s] 13%|█▎        | 31702/244489 [00:38<26:35, 133.40it/s] 13%|█▎        | 31716/244489 [00:38<26:31, 133.69it/s] 13%|█▎        | 31730/244489 [00:38<26:31, 133.67it/s] 13%|█▎        | 31744/244489 [00:38<26:46, 132.43it/s] 13%|█▎        | 31758/244489 [00:38<29:47, 119.02it/s] 13%|█▎        | 31861/244489 [00:38<09:49, 360.42it/s] 13%|█▎        | 31923/244489 [00:38<08:14, 429.45it/s] 13%|█▎        | 31969/244489 [00:39<15:39, 226.17it/s] 13%|█▎        | 32004/244489 [00:39<23:32, 150.44it/s] 13%|█▎        | 32031/244489 [00:39<26:14, 134.92it/s] 13%|█▎        | 32053/244489 [00:40<30:49, 114.83it/s] 13%|█▎        | 32071/244489 [00:40<30:43, 115.24it/s] 13%|█▎        | 32087/244489 [00:40<35:22, 100.09it/s] 13%|█▎        | 32100/244489 [00:40<39:04, 90.59it/s]  13%|█▎        | 32114/244489 [00:40<37:00, 95.64it/s] 13%|█▎        | 32126/244489 [00:41<43:57, 80.51it/s] 13%|█▎        | 32136/244489 [00:41<50:18, 70.35it/s] 13%|█▎        | 32144/244489 [00:41<52:42, 67.15it/s] 13%|█▎        | 32152/244489 [00:41<54:27, 64.99it/s] 13%|█▎        | 32159/244489 [00:41<1:00:14, 58.74it/s] 13%|█▎        | 32166/244489 [00:41<1:00:03, 58.93it/s] 13%|█▎        | 32173/244489 [00:42<1:01:03, 57.95it/s] 13%|█▎        | 32180/244489 [00:42<59:27, 59.50it/s]   13%|█▎        | 32187/244489 [00:42<57:25, 61.62it/s] 13%|█▎        | 32195/244489 [00:42<54:49, 64.54it/s] 13%|█▎        | 32202/244489 [00:42<54:58, 64.36it/s] 13%|█▎        | 32210/244489 [00:42<52:15, 67.71it/s] 13%|█▎        | 32217/244489 [00:42<52:09, 67.84it/s] 13%|█▎        | 32224/244489 [00:42<53:39, 65.94it/s] 13%|█▎        | 32231/244489 [00:42<59:33, 59.40it/s] 13%|█▎        | 32239/244489 [00:43<57:41, 61.32it/s] 13%|█▎        | 32246/244489 [00:43<1:00:29, 58.48it/s] 13%|█▎        | 32253/244489 [00:43<57:54, 61.09it/s]   13%|█▎        | 32260/244489 [00:43<57:34, 61.43it/s] 13%|█▎        | 32270/244489 [00:43<49:47, 71.03it/s] 13%|█▎        | 32278/244489 [00:43<50:57, 69.41it/s] 13%|█▎        | 32288/244489 [00:43<45:49, 77.17it/s] 13%|█▎        | 32297/244489 [00:43<44:58, 78.63it/s] 13%|█▎        | 32305/244489 [00:43<44:53, 78.77it/s] 13%|█▎        | 32313/244489 [00:44<48:40, 72.65it/s] 13%|█▎        | 32321/244489 [00:44<48:29, 72.91it/s] 13%|█▎        | 32330/244489 [00:44<48:15, 73.26it/s] 13%|█▎        | 32339/244489 [00:44<46:41, 75.73it/s] 13%|█▎        | 32347/244489 [00:44<46:01, 76.82it/s] 13%|█▎        | 32356/244489 [00:44<45:01, 78.52it/s] 13%|█▎        | 32368/244489 [00:44<39:16, 90.00it/s] 13%|█▎        | 32378/244489 [00:44<40:01, 88.34it/s] 13%|█▎        | 32389/244489 [00:44<38:11, 92.58it/s] 13%|█▎        | 32399/244489 [00:45<39:00, 90.60it/s] 13%|█▎        | 32409/244489 [00:45<41:18, 85.58it/s] 13%|█▎        | 32418/244489 [00:45<47:41, 74.11it/s] 13%|█▎        | 32429/244489 [00:45<43:22, 81.50it/s] 13%|█▎        | 32439/244489 [00:45<41:08, 85.91it/s] 13%|█▎        | 32448/244489 [00:45<42:31, 83.09it/s] 13%|█▎        | 32459/244489 [00:45<39:21, 89.79it/s] 13%|█▎        | 32469/244489 [00:45<38:46, 91.12it/s] 13%|█▎        | 32480/244489 [00:46<39:10, 90.22it/s] 13%|█▎        | 32490/244489 [00:46<46:32, 75.92it/s] 13%|█▎        | 32500/244489 [00:46<45:15, 78.08it/s] 13%|█▎        | 32511/244489 [00:46<42:00, 84.10it/s] 13%|█▎        | 32521/244489 [00:46<40:09, 87.97it/s] 13%|█▎        | 32533/244489 [00:46<37:11, 94.99it/s] 13%|█▎        | 32545/244489 [00:46<34:52, 101.30it/s] 13%|█▎        | 32557/244489 [00:46<33:17, 106.12it/s] 13%|█▎        | 32570/244489 [00:46<31:47, 111.11it/s] 13%|█▎        | 32582/244489 [00:47<31:20, 112.69it/s] 13%|█▎        | 32595/244489 [00:47<30:32, 115.65it/s] 13%|█▎        | 32608/244489 [00:47<29:55, 118.00it/s] 13%|█▎        | 32621/244489 [00:47<29:19, 120.38it/s] 13%|█▎        | 32634/244489 [00:47<28:51, 122.34it/s] 13%|█▎        | 32648/244489 [00:47<28:26, 124.15it/s] 13%|█▎        | 32661/244489 [00:47<28:09, 125.39it/s] 13%|█▎        | 32674/244489 [00:47<30:12, 116.87it/s] 13%|█▎        | 32688/244489 [00:47<28:54, 122.14it/s] 13%|█▎        | 32701/244489 [00:48<28:34, 123.50it/s] 13%|█▎        | 32714/244489 [00:48<28:31, 123.73it/s] 13%|█▎        | 32727/244489 [00:48<28:54, 122.11it/s] 13%|█▎        | 32740/244489 [00:48<28:55, 122.04it/s] 13%|█▎        | 32753/244489 [00:48<29:37, 119.12it/s] 13%|█▎        | 32765/244489 [00:48<29:59, 117.63it/s] 13%|█▎        | 32778/244489 [00:48<29:29, 119.67it/s] 13%|█▎        | 32790/244489 [00:48<29:49, 118.27it/s] 13%|█▎        | 32803/244489 [00:48<29:38, 119.06it/s] 13%|█▎        | 32815/244489 [00:49<30:01, 117.50it/s] 13%|█▎        | 32829/244489 [00:49<29:04, 121.36it/s] 13%|█▎        | 32842/244489 [00:49<28:58, 121.77it/s] 13%|█▎        | 32855/244489 [00:49<28:40, 123.04it/s] 13%|█▎        | 32868/244489 [00:49<29:26, 119.80it/s] 13%|█▎        | 32881/244489 [00:49<29:27, 119.70it/s] 13%|█▎        | 32894/244489 [00:49<29:03, 121.40it/s] 13%|█▎        | 32908/244489 [00:49<28:21, 124.35it/s] 13%|█▎        | 32921/244489 [00:49<28:27, 123.91it/s] 13%|█▎        | 32934/244489 [00:49<28:14, 124.86it/s] 13%|█▎        | 32947/244489 [00:50<28:51, 122.15it/s] 13%|█▎        | 32960/244489 [00:50<29:00, 121.51it/s] 13%|█▎        | 32973/244489 [00:50<29:11, 120.74it/s] 13%|█▎        | 32986/244489 [00:50<28:54, 121.97it/s] 13%|█▎        | 32999/244489 [00:50<28:49, 122.27it/s] 14%|█▎        | 33013/244489 [00:50<28:14, 124.83it/s] 14%|█▎        | 33027/244489 [00:50<27:43, 127.11it/s] 14%|█▎        | 33041/244489 [00:50<27:17, 129.13it/s] 14%|█▎        | 33055/244489 [00:50<26:56, 130.83it/s] 14%|█▎        | 33069/244489 [00:51<26:51, 131.19it/s] 14%|█▎        | 33083/244489 [00:51<26:43, 131.85it/s] 14%|█▎        | 33097/244489 [00:51<26:32, 132.75it/s] 14%|█▎        | 33111/244489 [00:51<26:24, 133.38it/s] 14%|█▎        | 33125/244489 [00:51<26:17, 133.99it/s] 14%|█▎        | 33139/244489 [00:51<26:10, 134.59it/s] 14%|█▎        | 33153/244489 [00:51<26:09, 134.66it/s] 14%|█▎        | 33167/244489 [00:51<26:06, 134.94it/s] 14%|█▎        | 33181/244489 [00:51<26:07, 134.80it/s] 14%|█▎        | 33195/244489 [00:51<26:06, 134.91it/s] 14%|█▎        | 33209/244489 [00:52<26:04, 135.09it/s] 14%|█▎        | 33223/244489 [00:52<26:03, 135.16it/s] 14%|█▎        | 33237/244489 [00:52<26:02, 135.24it/s] 14%|█▎        | 33251/244489 [00:52<26:02, 135.22it/s] 14%|█▎        | 33265/244489 [00:52<26:07, 134.73it/s] 14%|█▎        | 33279/244489 [00:52<26:16, 133.96it/s] 14%|█▎        | 33293/244489 [00:52<31:51, 110.51it/s] 14%|█▎        | 33306/244489 [00:52<30:31, 115.29it/s] 14%|█▎        | 33319/244489 [00:52<29:38, 118.73it/s] 14%|█▎        | 33332/244489 [00:53<28:59, 121.39it/s] 14%|█▎        | 33345/244489 [00:53<28:31, 123.35it/s] 14%|█▎        | 33358/244489 [00:53<28:21, 124.08it/s] 14%|█▎        | 33371/244489 [00:53<28:23, 123.97it/s] 14%|█▎        | 33385/244489 [00:53<27:51, 126.32it/s] 14%|█▎        | 33399/244489 [00:53<27:13, 129.24it/s] 14%|█▎        | 33413/244489 [00:53<26:57, 130.46it/s] 14%|█▎        | 33427/244489 [00:53<26:46, 131.36it/s] 14%|█▎        | 33441/244489 [00:53<26:39, 131.92it/s] 14%|█▎        | 33455/244489 [00:54<26:26, 133.01it/s] 14%|█▎        | 33469/244489 [00:54<26:14, 133.98it/s] 14%|█▎        | 33483/244489 [00:54<26:06, 134.66it/s] 14%|█▎        | 33497/244489 [00:54<26:01, 135.11it/s] 14%|█▎        | 33511/244489 [00:54<26:03, 134.96it/s] 14%|█▎        | 33525/244489 [00:54<26:05, 134.74it/s] 14%|█▎        | 33539/244489 [00:54<26:02, 134.99it/s] 14%|█▎        | 33553/244489 [00:54<25:56, 135.54it/s] 14%|█▎        | 33567/244489 [00:54<25:54, 135.72it/s] 14%|█▎        | 33581/244489 [00:54<25:50, 136.05it/s] 14%|█▎        | 33595/244489 [00:55<25:45, 136.49it/s] 14%|█▎        | 33609/244489 [00:55<25:47, 136.29it/s] 14%|█▍        | 33623/244489 [00:55<25:48, 136.21it/s] 14%|█▍        | 33637/244489 [00:55<25:53, 135.72it/s] 14%|█▍        | 33651/244489 [00:55<25:59, 135.17it/s] 14%|█▍        | 33665/244489 [00:55<26:02, 134.94it/s] 14%|█▍        | 33679/244489 [00:55<26:07, 134.46it/s] 14%|█▍        | 33693/244489 [00:55<26:12, 134.04it/s] 14%|█▍        | 33707/244489 [00:55<26:12, 134.01it/s] 14%|█▍        | 33721/244489 [00:55<26:08, 134.34it/s] 14%|█▍        | 33735/244489 [00:56<26:13, 133.93it/s] 14%|█▍        | 33749/244489 [00:56<26:12, 133.99it/s] 14%|█▍        | 33763/244489 [00:56<26:14, 133.86it/s] 14%|█▍        | 33777/244489 [00:56<26:07, 134.41it/s] 14%|█▍        | 33791/244489 [00:56<26:03, 134.72it/s] 14%|█▍        | 33805/244489 [00:56<26:00, 134.97it/s] 14%|█▍        | 33819/244489 [00:56<26:08, 134.28it/s] 14%|█▍        | 33833/244489 [00:56<26:13, 133.90it/s] 14%|█▍        | 33847/244489 [00:56<26:11, 134.03it/s] 14%|█▍        | 33861/244489 [00:57<26:08, 134.32it/s] 14%|█▍        | 33875/244489 [00:57<26:25, 132.82it/s] 14%|█▍        | 33889/244489 [00:57<26:41, 131.48it/s] 14%|█▍        | 33903/244489 [00:57<26:34, 132.05it/s] 14%|█▍        | 33921/244489 [00:57<24:04, 145.78it/s] 14%|█▍        | 34078/244489 [00:57<06:15, 560.00it/s] 14%|█▍        | 34136/244489 [00:57<06:40, 524.81it/s] 14%|█▍        | 34190/244489 [00:58<11:42, 299.29it/s] 14%|█▍        | 34262/244489 [00:58<09:20, 375.18it/s] 14%|█▍        | 34313/244489 [00:58<13:42, 255.39it/s] 14%|█▍        | 34353/244489 [00:58<16:56, 206.66it/s] 14%|█▍        | 34385/244489 [00:59<18:44, 186.84it/s] 14%|█▍        | 34412/244489 [00:59<20:11, 173.45it/s] 14%|█▍        | 34435/244489 [00:59<21:17, 164.36it/s] 14%|█▍        | 34455/244489 [00:59<22:09, 157.97it/s] 14%|█▍        | 34473/244489 [00:59<22:51, 153.16it/s] 14%|█▍        | 34490/244489 [00:59<23:29, 149.01it/s] 14%|█▍        | 34506/244489 [00:59<24:01, 145.67it/s] 14%|█▍        | 34522/244489 [01:00<25:25, 137.63it/s] 14%|█▍        | 34537/244489 [01:00<25:45, 135.86it/s] 14%|█▍        | 34551/244489 [01:00<25:56, 134.84it/s] 14%|█▍        | 34565/244489 [01:00<26:05, 134.08it/s] 14%|█▍        | 34579/244489 [01:00<26:50, 130.32it/s] 14%|█▍        | 34593/244489 [01:00<26:47, 130.59it/s] 14%|█▍        | 34607/244489 [01:00<26:32, 131.76it/s] 14%|█▍        | 34621/244489 [01:00<26:19, 132.91it/s] 14%|█▍        | 34635/244489 [01:00<26:11, 133.57it/s] 14%|█▍        | 34649/244489 [01:01<26:05, 134.07it/s] 14%|█▍        | 34663/244489 [01:01<26:54, 129.96it/s] 14%|█▍        | 34677/244489 [01:01<26:50, 130.30it/s] 14%|█▍        | 34691/244489 [01:01<26:34, 131.54it/s] 14%|█▍        | 34705/244489 [01:01<26:30, 131.92it/s] 14%|█▍        | 34719/244489 [01:01<26:27, 132.15it/s] 14%|█▍        | 34733/244489 [01:01<26:15, 133.12it/s] 14%|█▍        | 34747/244489 [01:01<26:02, 134.23it/s] 14%|█▍        | 34761/244489 [01:01<25:59, 134.48it/s] 14%|█▍        | 34778/244489 [01:02<24:36, 141.98it/s] 14%|█▍        | 34793/244489 [01:02<25:03, 139.47it/s] 14%|█▍        | 34807/244489 [01:02<25:19, 137.97it/s] 14%|█▍        | 34821/244489 [01:02<25:23, 137.64it/s] 14%|█▍        | 34835/244489 [01:02<25:29, 137.05it/s] 14%|█▍        | 34849/244489 [01:02<25:36, 136.47it/s] 14%|█▍        | 34863/244489 [01:02<25:32, 136.75it/s] 14%|█▍        | 34877/244489 [01:02<25:35, 136.49it/s] 14%|█▍        | 34891/244489 [01:02<25:38, 136.22it/s] 14%|█▍        | 34905/244489 [01:02<25:38, 136.21it/s] 14%|█▍        | 34919/244489 [01:03<25:38, 136.26it/s] 14%|█▍        | 34933/244489 [01:03<25:38, 136.23it/s] 14%|█▍        | 34947/244489 [01:03<25:37, 136.30it/s] 14%|█▍        | 34961/244489 [01:03<25:38, 136.20it/s] 14%|█▍        | 34975/244489 [01:03<25:53, 134.89it/s] 14%|█▍        | 34989/244489 [01:03<26:02, 134.09it/s] 14%|█▍        | 35003/244489 [01:03<25:57, 134.47it/s] 14%|█▍        | 35017/244489 [01:03<26:07, 133.67it/s] 14%|█▍        | 35031/244489 [01:03<26:10, 133.36it/s] 14%|█▍        | 35045/244489 [01:04<26:15, 132.95it/s] 14%|█▍        | 35059/244489 [01:04<26:25, 132.12it/s] 14%|█▍        | 35073/244489 [01:04<26:34, 131.31it/s] 14%|█▍        | 35087/244489 [01:04<26:27, 131.87it/s] 14%|█▍        | 35103/244489 [01:04<25:16, 138.08it/s] 14%|█▍        | 35117/244489 [01:04<25:43, 135.64it/s] 14%|█▍        | 35131/244489 [01:04<25:52, 134.82it/s] 14%|█▍        | 35145/244489 [01:04<25:53, 134.72it/s] 14%|█▍        | 35159/244489 [01:04<25:51, 134.90it/s] 14%|█▍        | 35173/244489 [01:04<25:57, 134.43it/s] 14%|█▍        | 35187/244489 [01:05<26:11, 133.21it/s] 14%|█▍        | 35201/244489 [01:05<26:16, 132.74it/s] 14%|█▍        | 35215/244489 [01:05<26:13, 132.97it/s] 14%|█▍        | 35229/244489 [01:05<26:11, 133.18it/s] 14%|█▍        | 35243/244489 [01:05<26:07, 133.48it/s] 14%|█▍        | 35257/244489 [01:05<25:58, 134.23it/s] 14%|█▍        | 35271/244489 [01:05<25:51, 134.85it/s] 14%|█▍        | 35285/244489 [01:05<25:46, 135.31it/s] 14%|█▍        | 35299/244489 [01:05<25:42, 135.66it/s] 14%|█▍        | 35313/244489 [01:05<25:37, 136.03it/s] 14%|█▍        | 35327/244489 [01:06<25:36, 136.11it/s] 14%|█▍        | 35341/244489 [01:06<25:36, 136.12it/s] 14%|█▍        | 35355/244489 [01:06<25:36, 136.14it/s] 14%|█▍        | 35369/244489 [01:06<25:37, 136.02it/s] 14%|█▍        | 35383/244489 [01:06<25:36, 136.12it/s] 14%|█▍        | 35397/244489 [01:06<25:38, 135.89it/s] 14%|█▍        | 35411/244489 [01:06<25:40, 135.76it/s] 14%|█▍        | 35425/244489 [01:06<25:42, 135.57it/s] 14%|█▍        | 35439/244489 [01:06<25:48, 135.02it/s] 15%|█▍        | 35453/244489 [01:07<25:54, 134.43it/s] 15%|█▍        | 35467/244489 [01:07<25:57, 134.18it/s] 15%|█▍        | 35481/244489 [01:07<26:23, 132.00it/s] 15%|█▍        | 35495/244489 [01:07<27:01, 128.92it/s] 15%|█▍        | 35508/244489 [01:07<29:07, 119.58it/s] 15%|█▍        | 35522/244489 [01:07<28:20, 122.91it/s] 15%|█▍        | 35536/244489 [01:07<27:42, 125.69it/s] 15%|█▍        | 35550/244489 [01:07<27:10, 128.13it/s] 15%|█▍        | 35564/244489 [01:07<26:57, 129.17it/s] 15%|█▍        | 35578/244489 [01:08<26:49, 129.83it/s] 15%|█▍        | 35592/244489 [01:08<26:39, 130.62it/s] 15%|█▍        | 35606/244489 [01:08<28:40, 121.39it/s] 15%|█▍        | 35620/244489 [01:08<27:44, 125.48it/s] 15%|█▍        | 35634/244489 [01:08<27:04, 128.56it/s] 15%|█▍        | 35648/244489 [01:08<26:37, 130.74it/s] 15%|█▍        | 35662/244489 [01:08<26:15, 132.52it/s] 15%|█▍        | 35676/244489 [01:08<26:02, 133.67it/s] 15%|█▍        | 35690/244489 [01:08<25:51, 134.60it/s] 15%|█▍        | 35704/244489 [01:08<25:43, 135.26it/s] 15%|█▍        | 35718/244489 [01:09<25:38, 135.68it/s] 15%|█▍        | 35732/244489 [01:09<25:35, 135.98it/s] 15%|█▍        | 35746/244489 [01:09<25:33, 136.08it/s] 15%|█▍        | 35760/244489 [01:09<25:30, 136.35it/s] 15%|█▍        | 35774/244489 [01:09<25:26, 136.77it/s] 15%|█▍        | 35788/244489 [01:09<25:24, 136.91it/s] 15%|█▍        | 35802/244489 [01:09<25:22, 137.09it/s] 15%|█▍        | 35816/244489 [01:09<25:47, 134.82it/s] 15%|█▍        | 35830/244489 [01:09<25:49, 134.67it/s] 15%|█▍        | 35844/244489 [01:10<25:47, 134.82it/s] 15%|█▍        | 35858/244489 [01:10<25:50, 134.53it/s] 15%|█▍        | 35872/244489 [01:10<25:52, 134.36it/s] 15%|█▍        | 35886/244489 [01:10<25:50, 134.54it/s] 15%|█▍        | 35900/244489 [01:10<25:45, 134.94it/s] 15%|█▍        | 35914/244489 [01:10<25:48, 134.73it/s] 15%|█▍        | 35928/244489 [01:10<26:43, 130.04it/s] 15%|█▍        | 35942/244489 [01:10<27:00, 128.69it/s] 15%|█▍        | 35956/244489 [01:10<26:38, 130.44it/s] 15%|█▍        | 35970/244489 [01:10<26:18, 132.06it/s] 15%|█▍        | 35984/244489 [01:11<26:01, 133.55it/s] 15%|█▍        | 35998/244489 [01:11<25:51, 134.41it/s] 15%|█▍        | 36012/244489 [01:11<25:46, 134.80it/s] 15%|█▍        | 36026/244489 [01:11<25:50, 134.42it/s] 15%|█▍        | 36040/244489 [01:11<25:50, 134.45it/s] 15%|█▍        | 36054/244489 [01:11<25:46, 134.78it/s] 15%|█▍        | 36068/244489 [01:11<25:41, 135.21it/s] 15%|█▍        | 36082/244489 [01:11<25:35, 135.71it/s] 15%|█▍        | 36096/244489 [01:11<25:31, 136.04it/s] 15%|█▍        | 36110/244489 [01:11<25:33, 135.85it/s] 15%|█▍        | 36124/244489 [01:12<25:32, 135.96it/s] 15%|█▍        | 36138/244489 [01:12<25:31, 136.02it/s] 15%|█▍        | 36152/244489 [01:12<25:30, 136.11it/s] 15%|█▍        | 36166/244489 [01:12<25:30, 136.13it/s] 15%|█▍        | 36180/244489 [01:12<25:31, 135.98it/s] 15%|█▍        | 36194/244489 [01:12<25:44, 134.86it/s] 15%|█▍        | 36208/244489 [01:12<27:01, 128.47it/s] 15%|█▍        | 36222/244489 [01:12<26:47, 129.56it/s] 15%|█▍        | 36236/244489 [01:12<26:35, 130.53it/s] 15%|█▍        | 36250/244489 [01:13<26:23, 131.54it/s] 15%|█▍        | 36264/244489 [01:13<26:13, 132.30it/s] 15%|█▍        | 36278/244489 [01:13<26:02, 133.22it/s] 15%|█▍        | 36292/244489 [01:13<26:02, 133.28it/s] 15%|█▍        | 36306/244489 [01:13<25:55, 133.79it/s] 15%|█▍        | 36320/244489 [01:13<26:04, 133.07it/s] 15%|█▍        | 36334/244489 [01:13<25:59, 133.47it/s] 15%|█▍        | 36348/244489 [01:13<25:55, 133.82it/s] 15%|█▍        | 36362/244489 [01:13<25:56, 133.71it/s] 15%|█▍        | 36376/244489 [01:13<25:55, 133.77it/s] 15%|█▍        | 36390/244489 [01:14<25:53, 133.97it/s] 15%|█▍        | 36404/244489 [01:14<25:52, 134.01it/s] 15%|█▍        | 36418/244489 [01:14<25:54, 133.88it/s] 15%|█▍        | 36432/244489 [01:14<25:56, 133.64it/s] 15%|█▍        | 36446/244489 [01:14<25:59, 133.42it/s] 15%|█▍        | 36460/244489 [01:14<25:57, 133.56it/s] 15%|█▍        | 36474/244489 [01:14<25:58, 133.46it/s] 15%|█▍        | 36488/244489 [01:14<25:55, 133.75it/s] 15%|█▍        | 36502/244489 [01:14<25:50, 134.11it/s] 15%|█▍        | 36516/244489 [01:15<25:54, 133.78it/s] 15%|█▍        | 36530/244489 [01:15<25:53, 133.85it/s] 15%|█▍        | 36544/244489 [01:15<26:00, 133.27it/s] 15%|█▍        | 36558/244489 [01:15<26:16, 131.90it/s] 15%|█▍        | 36572/244489 [01:15<26:04, 132.89it/s] 15%|█▍        | 36586/244489 [01:15<26:04, 132.90it/s] 15%|█▍        | 36600/244489 [01:15<26:00, 133.25it/s] 15%|█▍        | 36614/244489 [01:15<25:56, 133.55it/s] 15%|█▍        | 36628/244489 [01:15<25:51, 133.94it/s] 15%|█▍        | 36642/244489 [01:15<25:49, 134.11it/s] 15%|█▍        | 36656/244489 [01:16<25:53, 133.77it/s] 15%|█▍        | 36670/244489 [01:16<25:53, 133.75it/s] 15%|█▌        | 36684/244489 [01:16<25:50, 134.06it/s] 15%|█▌        | 36698/244489 [01:16<25:46, 134.33it/s] 15%|█▌        | 36712/244489 [01:16<25:46, 134.33it/s] 15%|█▌        | 36726/244489 [01:16<25:44, 134.48it/s] 15%|█▌        | 36740/244489 [01:16<25:57, 133.42it/s] 15%|█▌        | 36754/244489 [01:16<25:54, 133.62it/s] 15%|█▌        | 36768/244489 [01:16<25:44, 134.45it/s] 15%|█▌        | 36782/244489 [01:17<25:51, 133.87it/s] 15%|█▌        | 36796/244489 [01:17<25:54, 133.64it/s] 15%|█▌        | 36810/244489 [01:17<25:51, 133.89it/s] 15%|█▌        | 36824/244489 [01:17<25:47, 134.21it/s] 15%|█▌        | 36838/244489 [01:17<25:46, 134.26it/s] 15%|█▌        | 36852/244489 [01:17<25:48, 134.06it/s] 15%|█▌        | 36866/244489 [01:17<25:50, 133.87it/s] 15%|█▌        | 36880/244489 [01:17<25:48, 134.06it/s] 15%|█▌        | 36894/244489 [01:17<25:47, 134.15it/s] 15%|█▌        | 36908/244489 [01:17<25:46, 134.18it/s] 15%|█▌        | 36922/244489 [01:18<25:45, 134.28it/s] 15%|█▌        | 36936/244489 [01:18<25:42, 134.59it/s] 15%|█▌        | 36950/244489 [01:18<25:38, 134.88it/s] 15%|█▌        | 36964/244489 [01:18<25:38, 134.93it/s] 15%|█▌        | 36981/244489 [01:18<24:18, 142.29it/s] 15%|█▌        | 36996/244489 [01:18<24:40, 140.16it/s] 15%|█▌        | 37011/244489 [01:18<24:57, 138.51it/s] 15%|█▌        | 37025/244489 [01:18<25:10, 137.34it/s] 15%|█▌        | 37039/244489 [01:18<25:16, 136.81it/s] 15%|█▌        | 37053/244489 [01:19<25:27, 135.84it/s] 15%|█▌        | 37067/244489 [01:19<25:31, 135.45it/s] 15%|█▌        | 37081/244489 [01:19<25:38, 134.81it/s] 15%|█▌        | 37095/244489 [01:19<25:39, 134.68it/s] 15%|█▌        | 37109/244489 [01:19<25:41, 134.52it/s] 15%|█▌        | 37123/244489 [01:19<25:39, 134.67it/s] 15%|█▌        | 37137/244489 [01:19<25:42, 134.45it/s] 15%|█▌        | 37151/244489 [01:19<26:14, 131.67it/s] 15%|█▌        | 37165/244489 [01:19<27:11, 127.11it/s] 15%|█▌        | 37178/244489 [01:19<27:01, 127.88it/s] 15%|█▌        | 37192/244489 [01:20<26:47, 128.94it/s] 15%|█▌        | 37205/244489 [01:20<26:50, 128.75it/s] 15%|█▌        | 37218/244489 [01:20<27:24, 126.06it/s] 15%|█▌        | 37231/244489 [01:20<27:56, 123.61it/s] 15%|█▌        | 37244/244489 [01:20<28:44, 120.20it/s] 15%|█▌        | 37258/244489 [01:20<27:45, 124.42it/s] 15%|█▌        | 37272/244489 [01:20<27:04, 127.56it/s] 15%|█▌        | 37286/244489 [01:20<26:34, 129.99it/s] 15%|█▌        | 37300/244489 [01:20<26:16, 131.42it/s] 15%|█▌        | 37314/244489 [01:21<26:22, 130.91it/s] 15%|█▌        | 37328/244489 [01:21<26:37, 129.65it/s] 15%|█▌        | 37341/244489 [01:21<27:26, 125.83it/s] 15%|█▌        | 37354/244489 [01:21<27:46, 124.28it/s] 15%|█▌        | 37367/244489 [01:21<27:54, 123.69it/s] 15%|█▌        | 37381/244489 [01:21<27:20, 126.24it/s] 15%|█▌        | 37394/244489 [01:21<27:22, 126.11it/s] 15%|█▌        | 37407/244489 [01:21<30:03, 114.80it/s] 15%|█▌        | 37419/244489 [01:21<29:49, 115.73it/s] 15%|█▌        | 37432/244489 [01:22<29:22, 117.46it/s] 15%|█▌        | 37466/244489 [01:22<19:24, 177.80it/s] 15%|█▌        | 37485/244489 [01:22<21:28, 160.71it/s] 15%|█▌        | 37502/244489 [01:22<23:05, 149.42it/s] 15%|█▌        | 37518/244489 [01:22<23:25, 147.28it/s] 15%|█▌        | 37534/244489 [01:22<24:40, 139.75it/s] 15%|█▌        | 37549/244489 [01:22<25:29, 135.32it/s] 15%|█▌        | 37563/244489 [01:22<26:20, 130.95it/s] 15%|█▌        | 37577/244489 [01:23<26:29, 130.17it/s] 15%|█▌        | 37591/244489 [01:23<27:32, 125.18it/s] 15%|█▌        | 37605/244489 [01:23<27:10, 126.89it/s] 15%|█▌        | 37619/244489 [01:23<26:50, 128.46it/s] 15%|█▌        | 37633/244489 [01:23<26:38, 129.40it/s] 15%|█▌        | 37647/244489 [01:23<26:28, 130.22it/s] 15%|█▌        | 37661/244489 [01:23<26:29, 130.13it/s] 15%|█▌        | 37675/244489 [01:23<26:17, 131.08it/s] 15%|█▌        | 37689/244489 [01:23<26:07, 131.97it/s] 15%|█▌        | 37703/244489 [01:23<26:05, 132.06it/s] 15%|█▌        | 37717/244489 [01:24<26:01, 132.38it/s] 15%|█▌        | 37731/244489 [01:24<26:09, 131.74it/s] 15%|█▌        | 37745/244489 [01:24<26:14, 131.31it/s] 15%|█▌        | 37759/244489 [01:24<26:09, 131.71it/s] 15%|█▌        | 37773/244489 [01:24<26:03, 132.18it/s] 15%|█▌        | 37787/244489 [01:24<25:58, 132.64it/s] 15%|█▌        | 37801/244489 [01:24<25:50, 133.27it/s] 15%|█▌        | 37815/244489 [01:24<25:49, 133.39it/s] 15%|█▌        | 37829/244489 [01:24<25:42, 133.99it/s] 15%|█▌        | 37843/244489 [01:25<25:42, 133.97it/s] 15%|█▌        | 37857/244489 [01:25<25:38, 134.28it/s] 15%|█▌        | 37871/244489 [01:25<25:51, 133.16it/s] 15%|█▌        | 37885/244489 [01:25<25:59, 132.50it/s] 16%|█▌        | 37899/244489 [01:25<26:00, 132.41it/s] 16%|█▌        | 37913/244489 [01:25<26:02, 132.22it/s] 16%|█▌        | 37927/244489 [01:25<26:04, 132.05it/s] 16%|█▌        | 37941/244489 [01:25<26:09, 131.63it/s] 16%|█▌        | 37955/244489 [01:25<26:09, 131.62it/s] 16%|█▌        | 37969/244489 [01:25<26:17, 130.92it/s] 16%|█▌        | 37983/244489 [01:26<26:17, 130.90it/s] 16%|█▌        | 37997/244489 [01:26<26:17, 130.92it/s] 16%|█▌        | 38011/244489 [01:26<26:11, 131.42it/s] 16%|█▌        | 38025/244489 [01:26<26:08, 131.64it/s] 16%|█▌        | 38039/244489 [01:26<26:09, 131.51it/s] 16%|█▌        | 38053/244489 [01:26<26:34, 129.50it/s] 16%|█▌        | 38067/244489 [01:26<26:28, 129.96it/s] 16%|█▌        | 38081/244489 [01:26<26:16, 130.95it/s] 16%|█▌        | 38095/244489 [01:26<26:04, 131.95it/s] 16%|█▌        | 38109/244489 [01:27<25:52, 132.97it/s] 16%|█▌        | 38123/244489 [01:27<25:45, 133.55it/s] 16%|█▌        | 38137/244489 [01:27<25:37, 134.18it/s] 16%|█▌        | 38151/244489 [01:27<25:37, 134.18it/s] 16%|█▌        | 38165/244489 [01:27<25:39, 134.04it/s] 16%|█▌        | 38179/244489 [01:27<25:41, 133.86it/s] 16%|█▌        | 38193/244489 [01:27<25:37, 134.17it/s] 16%|█▌        | 38207/244489 [01:27<25:37, 134.16it/s] 16%|█▌        | 38221/244489 [01:27<25:31, 134.70it/s] 16%|█▌        | 38235/244489 [01:27<25:33, 134.53it/s] 16%|█▌        | 38249/244489 [01:28<25:31, 134.65it/s] 16%|█▌        | 38263/244489 [01:28<25:29, 134.81it/s] 16%|█▌        | 38277/244489 [01:28<25:23, 135.33it/s] 16%|█▌        | 38291/244489 [01:28<25:22, 135.45it/s] 16%|█▌        | 38305/244489 [01:28<25:17, 135.84it/s] 16%|█▌        | 38319/244489 [01:28<25:21, 135.52it/s] 16%|█▌        | 38333/244489 [01:28<25:18, 135.74it/s] 16%|█▌        | 38347/244489 [01:28<25:23, 135.27it/s] 16%|█▌        | 38361/244489 [01:28<25:24, 135.20it/s] 16%|█▌        | 38375/244489 [01:29<25:28, 134.85it/s] 16%|█▌        | 38389/244489 [01:29<25:24, 135.23it/s] 16%|█▌        | 38403/244489 [01:29<25:39, 133.87it/s] 16%|█▌        | 38417/244489 [01:29<25:31, 134.55it/s] 16%|█▌        | 38431/244489 [01:29<25:30, 134.66it/s] 16%|█▌        | 38445/244489 [01:29<25:49, 133.02it/s] 16%|█▌        | 38459/244489 [01:29<26:11, 131.14it/s] 16%|█▌        | 38473/244489 [01:29<26:31, 129.45it/s] 16%|█▌        | 38486/244489 [01:29<26:35, 129.12it/s] 16%|█▌        | 38500/244489 [01:29<26:33, 129.29it/s] 16%|█▌        | 38513/244489 [01:30<26:33, 129.25it/s] 16%|█▌        | 38526/244489 [01:30<26:45, 128.32it/s] 16%|█▌        | 38540/244489 [01:30<26:19, 130.40it/s] 16%|█▌        | 38554/244489 [01:30<26:01, 131.86it/s] 16%|█▌        | 38579/244489 [01:30<20:46, 165.13it/s] 16%|█▌        | 38606/244489 [01:30<17:44, 193.36it/s] 16%|█▌        | 38630/244489 [01:30<16:38, 206.15it/s] 16%|█▌        | 38656/244489 [01:30<15:29, 221.42it/s] 16%|█▌        | 38681/244489 [01:30<15:01, 228.19it/s] 16%|█▌        | 38706/244489 [01:31<14:41, 233.47it/s] 16%|█▌        | 38732/244489 [01:31<14:22, 238.63it/s] 16%|█▌        | 38756/244489 [01:31<14:39, 233.95it/s] 16%|█▌        | 38781/244489 [01:31<14:23, 238.26it/s] 16%|█▌        | 38806/244489 [01:31<14:17, 240.00it/s] 16%|█▌        | 38831/244489 [01:31<14:15, 240.45it/s] 16%|█▌        | 38856/244489 [01:31<14:08, 242.21it/s] 16%|█▌        | 38881/244489 [01:31<15:36, 219.66it/s] 16%|█▌        | 38906/244489 [01:31<15:14, 224.85it/s] 16%|█▌        | 38929/244489 [01:31<15:20, 223.30it/s] 16%|█▌        | 38953/244489 [01:32<15:05, 226.93it/s] 16%|█▌        | 38978/244489 [01:32<14:44, 232.31it/s] 16%|█▌        | 39002/244489 [01:32<14:43, 232.48it/s] 16%|█▌        | 39026/244489 [01:32<15:24, 222.14it/s] 16%|█▌        | 39049/244489 [01:32<16:28, 207.86it/s] 16%|█▌        | 39071/244489 [01:32<16:41, 205.18it/s] 16%|█▌        | 39094/244489 [01:32<16:19, 209.77it/s] 16%|█▌        | 39116/244489 [01:32<16:14, 210.76it/s] 16%|█▌        | 39138/244489 [01:32<17:18, 197.70it/s] 16%|█▌        | 39158/244489 [01:33<17:34, 194.66it/s] 16%|█▌        | 39178/244489 [01:33<18:06, 189.05it/s] 16%|█▌        | 39199/244489 [01:33<17:33, 194.77it/s] 16%|█▌        | 39219/244489 [01:33<17:39, 193.69it/s] 16%|█▌        | 39239/244489 [01:33<17:33, 194.77it/s] 16%|█▌        | 39259/244489 [01:33<17:38, 193.84it/s] 16%|█▌        | 39279/244489 [01:33<17:48, 191.98it/s] 16%|█▌        | 39299/244489 [01:33<17:46, 192.44it/s] 16%|█▌        | 39320/244489 [01:33<17:21, 196.95it/s] 16%|█▌        | 39342/244489 [01:34<16:50, 203.08it/s] 16%|█▌        | 39365/244489 [01:34<16:12, 210.87it/s] 16%|█▌        | 39388/244489 [01:34<15:53, 215.21it/s] 16%|█▌        | 39413/244489 [01:34<15:22, 222.29it/s] 16%|█▌        | 39436/244489 [01:34<15:19, 222.96it/s] 16%|█▌        | 39460/244489 [01:34<15:10, 225.22it/s] 16%|█▌        | 39484/244489 [01:34<15:03, 226.78it/s] 16%|█▌        | 39507/244489 [01:34<15:06, 226.06it/s] 16%|█▌        | 39530/244489 [01:34<15:11, 224.89it/s] 16%|█▌        | 39554/244489 [01:34<14:54, 229.16it/s] 16%|█▌        | 39578/244489 [01:35<14:48, 230.72it/s] 16%|█▌        | 39602/244489 [01:35<14:51, 229.84it/s] 16%|█▌        | 39625/244489 [01:35<14:54, 229.01it/s] 16%|█▌        | 39649/244489 [01:35<14:50, 230.14it/s] 16%|█▌        | 39673/244489 [01:35<15:25, 221.39it/s] 16%|█▌        | 39698/244489 [01:35<14:59, 227.58it/s] 16%|█▌        | 39725/244489 [01:35<14:16, 239.10it/s] 16%|█▋        | 39777/244489 [01:35<10:41, 318.91it/s] 17%|█▋        | 41131/244489 [01:35<00:48, 4182.92it/s] 18%|█▊        | 43489/244489 [01:35<00:20, 9895.81it/s] 19%|█▉        | 45962/244489 [01:36<00:13, 14288.68it/s] 20%|█▉        | 47759/244489 [01:36<00:12, 15377.50it/s] 20%|██        | 49642/244489 [01:36<00:11, 16404.65it/s] 21%|██        | 51345/244489 [01:36<00:11, 16589.09it/s] 22%|██▏       | 53012/244489 [01:36<00:14, 13135.37it/s] 22%|██▏       | 54444/244489 [01:36<00:17, 10820.31it/s] 23%|██▎       | 55666/244489 [01:36<00:18, 9986.37it/s]  23%|██▎       | 56764/244489 [01:37<00:20, 9378.58it/s] 24%|██▎       | 57769/244489 [01:37<00:20, 8915.13it/s] 24%|██▍       | 58704/244489 [01:37<00:21, 8506.78it/s] 24%|██▍       | 59582/244489 [01:37<00:22, 8305.68it/s] 25%|██▍       | 60429/244489 [01:37<00:22, 8152.67it/s] 25%|██▌       | 62165/244489 [01:37<00:17, 10469.61it/s] 26%|██▌       | 64083/244489 [01:37<00:14, 12802.65it/s] 27%|██▋       | 65982/244489 [01:37<00:12, 14512.90it/s] 28%|██▊       | 67650/244489 [01:37<00:11, 15124.47it/s] 28%|██▊       | 69416/244489 [01:38<00:11, 15853.09it/s] 29%|██▉       | 71105/244489 [01:38<00:10, 16154.56it/s] 30%|██▉       | 72744/244489 [01:38<00:12, 13402.88it/s] 30%|███       | 74178/244489 [01:38<00:15, 10660.50it/s] 31%|███▏      | 76907/244489 [01:38<00:11, 14370.36it/s] 32%|███▏      | 78572/244489 [01:38<00:14, 11424.12it/s] 33%|███▎      | 80393/244489 [01:38<00:12, 12842.47it/s] 34%|███▎      | 82160/244489 [01:39<00:11, 13951.74it/s] 34%|███▍      | 83752/244489 [01:41<01:15, 2119.73it/s]  35%|███▍      | 84886/244489 [01:49<04:58, 535.52it/s]  35%|███▌      | 85684/244489 [01:55<07:40, 345.06it/s] 35%|███▌      | 86247/244489 [01:59<09:30, 277.60it/s] 35%|███▌      | 86645/244489 [02:02<10:49, 242.93it/s] 36%|███▌      | 86928/244489 [02:04<11:52, 221.09it/s] 36%|███▌      | 87130/244489 [02:06<12:46, 205.40it/s] 36%|███▌      | 87276/244489 [02:07<13:35, 192.76it/s] 36%|███▌      | 87382/244489 [02:08<13:54, 188.27it/s] 36%|███▌      | 87461/244489 [02:08<14:04, 185.94it/s] 36%|███▌      | 87521/244489 [02:08<14:08, 185.09it/s] 36%|███▌      | 87569/244489 [02:09<14:09, 184.65it/s] 36%|███▌      | 87608/244489 [02:09<14:15, 183.44it/s] 36%|███▌      | 87641/244489 [02:09<14:33, 179.46it/s] 36%|███▌      | 87669/244489 [02:09<15:01, 173.91it/s] 36%|███▌      | 87693/244489 [02:09<15:13, 171.65it/s] 36%|███▌      | 87714/244489 [02:10<15:18, 170.67it/s] 36%|███▌      | 87734/244489 [02:10<15:24, 169.63it/s] 36%|███▌      | 87753/244489 [02:10<15:30, 168.42it/s] 36%|███▌      | 87771/244489 [02:10<15:46, 165.60it/s] 36%|███▌      | 87789/244489 [02:10<16:01, 163.02it/s] 36%|███▌      | 87806/244489 [02:10<16:09, 161.60it/s] 36%|███▌      | 87824/244489 [02:10<15:56, 163.74it/s] 36%|███▌      | 87841/244489 [02:10<16:04, 162.40it/s] 36%|███▌      | 87858/244489 [02:11<16:33, 157.62it/s] 36%|███▌      | 87874/244489 [02:11<16:39, 156.72it/s] 36%|███▌      | 87890/244489 [02:11<16:46, 155.59it/s] 36%|███▌      | 87906/244489 [02:11<17:01, 153.35it/s] 36%|███▌      | 87922/244489 [02:11<16:59, 153.62it/s] 36%|███▌      | 87939/244489 [02:11<16:31, 157.84it/s] 36%|███▌      | 87959/244489 [02:11<15:28, 168.50it/s] 36%|███▌      | 87976/244489 [02:11<15:54, 163.90it/s] 36%|███▌      | 87993/244489 [02:11<16:21, 159.49it/s] 36%|███▌      | 88009/244489 [02:12<19:23, 134.51it/s] 36%|███▌      | 88025/244489 [02:12<18:46, 138.90it/s] 36%|███▌      | 88040/244489 [02:12<18:31, 140.80it/s] 36%|███▌      | 88055/244489 [02:12<18:16, 142.65it/s] 36%|███▌      | 88071/244489 [02:12<17:43, 147.06it/s] 36%|███▌      | 88087/244489 [02:12<17:27, 149.26it/s] 36%|███▌      | 88103/244489 [02:12<17:17, 150.78it/s] 36%|███▌      | 88119/244489 [02:12<17:49, 146.18it/s] 36%|███▌      | 88134/244489 [02:12<17:57, 145.08it/s] 36%|███▌      | 88149/244489 [02:12<18:03, 144.23it/s] 36%|███▌      | 88164/244489 [02:13<17:55, 145.33it/s] 36%|███▌      | 88179/244489 [02:13<17:59, 144.80it/s] 36%|███▌      | 88196/244489 [02:13<17:19, 150.41it/s] 36%|███▌      | 88212/244489 [02:13<17:04, 152.51it/s] 36%|███▌      | 88229/244489 [02:13<16:43, 155.73it/s] 36%|███▌      | 88245/244489 [02:13<16:35, 156.89it/s] 36%|███▌      | 88261/244489 [02:13<16:40, 156.11it/s] 36%|███▌      | 88277/244489 [02:13<16:57, 153.51it/s] 36%|███▌      | 88293/244489 [02:13<16:52, 154.30it/s] 36%|███▌      | 88311/244489 [02:14<16:24, 158.62it/s] 36%|███▌      | 88328/244489 [02:14<16:15, 160.02it/s] 36%|███▌      | 88345/244489 [02:14<16:14, 160.16it/s] 36%|███▌      | 88362/244489 [02:14<16:10, 160.82it/s] 36%|███▌      | 88379/244489 [02:14<16:21, 159.13it/s] 36%|███▌      | 88395/244489 [02:14<16:24, 158.54it/s] 36%|███▌      | 88411/244489 [02:14<16:39, 156.10it/s] 36%|███▌      | 88427/244489 [02:14<16:56, 153.46it/s] 36%|███▌      | 88443/244489 [02:14<17:29, 148.73it/s] 36%|███▌      | 88458/244489 [02:14<17:26, 149.04it/s] 36%|███▌      | 88478/244489 [02:15<16:06, 161.38it/s] 36%|███▌      | 88497/244489 [02:15<15:26, 168.29it/s] 36%|███▌      | 88516/244489 [02:15<14:55, 174.15it/s] 36%|███▌      | 88536/244489 [02:15<14:26, 180.03it/s] 36%|███▌      | 88555/244489 [02:15<15:10, 171.18it/s] 36%|███▌      | 88573/244489 [02:15<16:29, 157.60it/s] 36%|███▌      | 88590/244489 [02:15<17:20, 149.76it/s] 36%|███▋      | 88723/244489 [02:15<05:39, 459.04it/s] 36%|███▋      | 88886/244489 [02:15<03:20, 777.65it/s] 36%|███▋      | 89033/244489 [02:16<02:40, 968.24it/s] 36%|███▋      | 89194/244489 [02:16<02:14, 1150.99it/s] 37%|███▋      | 89344/244489 [02:16<02:04, 1250.79it/s] 37%|███▋      | 89492/244489 [02:16<01:57, 1317.72it/s] 37%|███▋      | 89656/244489 [02:16<01:49, 1411.75it/s] 37%|███▋      | 89823/244489 [02:16<01:44, 1486.74it/s] 37%|███▋      | 89980/244489 [02:16<01:42, 1503.89it/s] 37%|███▋      | 90132/244489 [02:16<01:42, 1507.68it/s] 37%|███▋      | 90295/244489 [02:16<01:39, 1542.54it/s] 37%|███▋      | 90460/244489 [02:16<01:37, 1573.30it/s] 37%|███▋      | 90626/244489 [02:17<01:36, 1591.43it/s] 37%|███▋      | 90790/244489 [02:17<01:35, 1604.14it/s] 37%|███▋      | 90955/244489 [02:17<01:34, 1617.03it/s] 37%|███▋      | 91117/244489 [02:17<03:57, 647.13it/s]  37%|███▋      | 91239/244489 [02:18<07:38, 334.34it/s] 37%|███▋      | 91328/244489 [02:19<10:04, 253.50it/s] 37%|███▋      | 91395/244489 [02:19<11:41, 218.31it/s] 37%|███▋      | 91446/244489 [02:20<12:59, 196.39it/s] 37%|███▋      | 91486/244489 [02:20<14:02, 181.70it/s] 37%|███▋      | 91518/244489 [02:20<14:55, 170.90it/s] 37%|███▋      | 91544/244489 [02:21<17:45, 143.53it/s] 37%|███▋      | 91565/244489 [02:21<18:00, 141.52it/s] 37%|███▋      | 91584/244489 [02:21<18:13, 139.79it/s] 37%|███▋      | 91601/244489 [02:21<18:20, 138.98it/s] 37%|███▋      | 91617/244489 [02:21<18:26, 138.14it/s] 37%|███▋      | 91633/244489 [02:21<18:42, 136.23it/s] 37%|███▋      | 91648/244489 [02:22<18:50, 135.25it/s] 37%|███▋      | 91663/244489 [02:22<18:51, 135.09it/s] 37%|███▋      | 91677/244489 [02:22<18:51, 135.02it/s] 38%|███▊      | 91691/244489 [02:22<18:52, 134.88it/s] 38%|███▊      | 91705/244489 [02:22<18:56, 134.38it/s] 38%|███▊      | 91719/244489 [02:22<18:59, 134.05it/s] 38%|███▊      | 91733/244489 [02:22<18:58, 134.18it/s] 38%|███▊      | 91747/244489 [02:22<18:58, 134.12it/s] 38%|███▊      | 91761/244489 [02:22<18:59, 134.03it/s] 38%|███▊      | 91775/244489 [02:23<18:59, 133.99it/s] 38%|███▊      | 91789/244489 [02:23<18:59, 134.06it/s] 38%|███▊      | 91803/244489 [02:23<18:57, 134.19it/s] 38%|███▊      | 91817/244489 [02:23<19:06, 133.16it/s] 38%|███▊      | 91831/244489 [02:23<19:11, 132.54it/s] 38%|███▊      | 91845/244489 [02:23<19:10, 132.67it/s] 38%|███▊      | 91859/244489 [02:23<19:12, 132.40it/s] 38%|███▊      | 91873/244489 [02:23<19:15, 132.05it/s] 38%|███▊      | 91887/244489 [02:23<19:18, 131.75it/s] 38%|███▊      | 91901/244489 [02:23<19:14, 132.20it/s] 38%|███▊      | 91915/244489 [02:24<19:09, 132.67it/s] 38%|███▊      | 91929/244489 [02:24<19:02, 133.53it/s] 38%|███▊      | 91943/244489 [02:24<19:01, 133.68it/s] 38%|███▊      | 91957/244489 [02:24<18:58, 133.93it/s] 38%|███▊      | 91971/244489 [02:24<19:05, 133.09it/s] 38%|███▊      | 91985/244489 [02:24<19:06, 133.01it/s] 38%|███▊      | 91999/244489 [02:24<18:59, 133.88it/s] 38%|███▊      | 92013/244489 [02:24<18:54, 134.37it/s] 38%|███▊      | 92027/244489 [02:24<18:49, 134.95it/s] 38%|███▊      | 92041/244489 [02:25<18:50, 134.82it/s] 38%|███▊      | 92055/244489 [02:25<18:49, 135.01it/s] 38%|███▊      | 92069/244489 [02:25<18:44, 135.50it/s] 38%|███▊      | 92083/244489 [02:25<18:42, 135.76it/s] 38%|███▊      | 92097/244489 [02:25<18:43, 135.62it/s] 38%|███▊      | 92111/244489 [02:25<18:43, 135.63it/s] 38%|███▊      | 92125/244489 [02:25<18:43, 135.66it/s] 38%|███▊      | 92139/244489 [02:25<18:42, 135.73it/s] 38%|███▊      | 92153/244489 [02:25<18:42, 135.66it/s] 38%|███▊      | 92167/244489 [02:25<18:45, 135.30it/s] 38%|███▊      | 92181/244489 [02:26<18:46, 135.19it/s] 38%|███▊      | 92195/244489 [02:26<18:48, 135.00it/s] 38%|███▊      | 92209/244489 [02:26<18:49, 134.84it/s] 38%|███▊      | 92223/244489 [02:26<18:46, 135.15it/s] 38%|███▊      | 92237/244489 [02:26<18:45, 135.27it/s] 38%|███▊      | 92251/244489 [02:26<18:44, 135.39it/s] 38%|███▊      | 92265/244489 [02:26<18:54, 134.23it/s] 38%|███▊      | 92279/244489 [02:26<20:17, 125.06it/s] 38%|███▊      | 92292/244489 [02:26<20:09, 125.86it/s] 38%|███▊      | 92306/244489 [02:27<19:56, 127.16it/s] 38%|███▊      | 92320/244489 [02:27<19:38, 129.13it/s] 38%|███▊      | 92334/244489 [02:27<19:33, 129.67it/s] 38%|███▊      | 92348/244489 [02:27<19:29, 130.15it/s] 38%|███▊      | 92362/244489 [02:27<19:16, 131.50it/s] 38%|███▊      | 92376/244489 [02:27<19:06, 132.62it/s] 38%|███▊      | 92390/244489 [02:27<19:02, 133.16it/s] 38%|███▊      | 92404/244489 [02:27<18:57, 133.71it/s] 38%|███▊      | 92418/244489 [02:27<18:56, 133.81it/s] 38%|███▊      | 92432/244489 [02:27<18:59, 133.45it/s] 38%|███▊      | 92446/244489 [02:28<18:58, 133.55it/s] 38%|███▊      | 92460/244489 [02:28<18:54, 134.06it/s] 38%|███▊      | 92474/244489 [02:28<18:50, 134.45it/s] 38%|███▊      | 92488/244489 [02:28<18:49, 134.61it/s] 38%|███▊      | 92502/244489 [02:28<18:46, 134.91it/s] 38%|███▊      | 92516/244489 [02:28<18:44, 135.16it/s] 38%|███▊      | 92530/244489 [02:28<18:43, 135.29it/s] 38%|███▊      | 92544/244489 [02:28<18:43, 135.18it/s] 38%|███▊      | 92558/244489 [02:28<18:43, 135.23it/s] 38%|███▊      | 92572/244489 [02:28<18:44, 135.09it/s] 38%|███▊      | 92586/244489 [02:29<18:43, 135.23it/s] 38%|███▊      | 92600/244489 [02:29<18:41, 135.48it/s] 38%|███▊      | 92614/244489 [02:29<18:41, 135.40it/s] 38%|███▊      | 92628/244489 [02:29<18:44, 135.09it/s] 38%|███▊      | 92642/244489 [02:29<18:43, 135.19it/s] 38%|███▊      | 92656/244489 [02:29<18:55, 133.77it/s] 38%|███▊      | 92670/244489 [02:29<18:51, 134.22it/s] 38%|███▊      | 92684/244489 [02:29<18:48, 134.52it/s] 38%|███▊      | 92698/244489 [02:29<18:45, 134.82it/s] 38%|███▊      | 92712/244489 [02:30<18:43, 135.07it/s] 38%|███▊      | 92726/244489 [02:30<18:41, 135.27it/s] 38%|███▊      | 92740/244489 [02:30<18:45, 134.86it/s] 38%|███▊      | 92754/244489 [02:30<18:49, 134.35it/s] 38%|███▊      | 92768/244489 [02:30<18:50, 134.16it/s] 38%|███▊      | 92782/244489 [02:30<18:56, 133.46it/s] 38%|███▊      | 92796/244489 [02:30<18:59, 133.11it/s] 38%|███▊      | 92810/244489 [02:30<18:59, 133.12it/s] 38%|███▊      | 92824/244489 [02:30<18:53, 133.86it/s] 38%|███▊      | 92838/244489 [02:30<18:47, 134.50it/s] 38%|███▊      | 92852/244489 [02:31<18:45, 134.73it/s] 38%|███▊      | 92866/244489 [02:31<18:50, 134.17it/s] 38%|███▊      | 92880/244489 [02:31<21:15, 118.82it/s] 38%|███▊      | 92894/244489 [02:31<20:29, 123.28it/s] 38%|███▊      | 92908/244489 [02:31<19:57, 126.62it/s] 38%|███▊      | 92922/244489 [02:31<19:33, 129.16it/s] 38%|███▊      | 92936/244489 [02:31<19:17, 130.91it/s] 38%|███▊      | 92950/244489 [02:31<19:09, 131.85it/s] 38%|███▊      | 92964/244489 [02:31<19:06, 132.15it/s] 38%|███▊      | 92978/244489 [02:32<19:01, 132.70it/s] 38%|███▊      | 92992/244489 [02:32<18:57, 133.13it/s] 38%|███▊      | 93006/244489 [02:32<18:55, 133.43it/s] 38%|███▊      | 93020/244489 [02:32<19:19, 130.66it/s] 38%|███▊      | 93034/244489 [02:32<19:19, 130.60it/s] 38%|███▊      | 93048/244489 [02:32<19:20, 130.55it/s] 38%|███▊      | 93062/244489 [02:32<19:10, 131.61it/s] 38%|███▊      | 93076/244489 [02:32<19:09, 131.76it/s] 38%|███▊      | 93090/244489 [02:32<19:02, 132.56it/s] 38%|███▊      | 93104/244489 [02:33<18:57, 133.10it/s] 38%|███▊      | 93118/244489 [02:33<19:00, 132.73it/s] 38%|███▊      | 93132/244489 [02:33<18:55, 133.30it/s] 38%|███▊      | 93146/244489 [02:33<18:49, 133.98it/s] 38%|███▊      | 93160/244489 [02:33<19:00, 132.67it/s] 38%|███▊      | 93174/244489 [02:33<20:59, 120.13it/s] 38%|███▊      | 93188/244489 [02:33<20:20, 123.96it/s] 38%|███▊      | 93202/244489 [02:33<19:49, 127.20it/s] 38%|███▊      | 93215/244489 [02:33<19:42, 127.91it/s] 38%|███▊      | 93228/244489 [02:33<19:41, 128.02it/s] 38%|███▊      | 93242/244489 [02:34<19:28, 129.49it/s] 38%|███▊      | 93256/244489 [02:34<19:13, 131.07it/s] 38%|███▊      | 93270/244489 [02:34<19:04, 132.08it/s] 38%|███▊      | 93284/244489 [02:34<18:57, 132.96it/s] 38%|███▊      | 93298/244489 [02:34<18:52, 133.51it/s] 38%|███▊      | 93312/244489 [02:34<18:53, 133.38it/s] 38%|███▊      | 93326/244489 [02:34<18:58, 132.74it/s] 38%|███▊      | 93340/244489 [02:34<18:52, 133.45it/s] 38%|███▊      | 93354/244489 [02:34<19:13, 131.01it/s] 38%|███▊      | 93368/244489 [02:35<19:40, 128.00it/s] 38%|███▊      | 93381/244489 [02:35<20:01, 125.79it/s] 38%|███▊      | 93394/244489 [02:35<20:14, 124.38it/s] 38%|███▊      | 93407/244489 [02:35<20:15, 124.30it/s] 38%|███▊      | 93421/244489 [02:35<19:50, 126.86it/s] 38%|███▊      | 93435/244489 [02:35<19:36, 128.40it/s] 38%|███▊      | 93449/244489 [02:35<19:23, 129.83it/s] 38%|███▊      | 93463/244489 [02:35<19:16, 130.64it/s] 38%|███▊      | 93477/244489 [02:35<19:13, 130.90it/s] 38%|███▊      | 93491/244489 [02:36<19:04, 131.98it/s] 38%|███▊      | 93505/244489 [02:36<18:55, 132.98it/s] 38%|███▊      | 93519/244489 [02:36<18:54, 133.04it/s] 38%|███▊      | 93533/244489 [02:36<19:04, 131.87it/s] 38%|███▊      | 93547/244489 [02:36<19:04, 131.94it/s] 38%|███▊      | 93561/244489 [02:36<18:52, 133.22it/s] 38%|███▊      | 93575/244489 [02:36<18:56, 132.79it/s] 38%|███▊      | 93589/244489 [02:36<18:49, 133.59it/s] 38%|███▊      | 93603/244489 [02:36<18:47, 133.87it/s] 38%|███▊      | 93617/244489 [02:36<18:47, 133.78it/s] 38%|███▊      | 93631/244489 [02:37<18:57, 132.62it/s] 38%|███▊      | 93645/244489 [02:37<19:00, 132.31it/s] 38%|███▊      | 93659/244489 [02:37<19:21, 129.84it/s] 38%|███▊      | 93673/244489 [02:37<19:16, 130.45it/s] 38%|███▊      | 93687/244489 [02:37<19:19, 130.10it/s] 38%|███▊      | 93701/244489 [02:37<19:17, 130.33it/s] 38%|███▊      | 93715/244489 [02:37<19:14, 130.64it/s] 38%|███▊      | 93729/244489 [02:37<19:10, 131.05it/s] 38%|███▊      | 93743/244489 [02:37<19:02, 131.92it/s] 38%|███▊      | 93757/244489 [02:38<18:54, 132.84it/s] 38%|███▊      | 93771/244489 [02:38<18:56, 132.58it/s] 38%|███▊      | 93785/244489 [02:38<19:15, 130.37it/s] 38%|███▊      | 93799/244489 [02:38<19:25, 129.30it/s] 38%|███▊      | 93813/244489 [02:38<19:14, 130.50it/s] 38%|███▊      | 93827/244489 [02:38<19:07, 131.31it/s] 38%|███▊      | 93841/244489 [02:38<19:00, 132.07it/s] 38%|███▊      | 93855/244489 [02:38<18:58, 132.28it/s] 38%|███▊      | 93869/244489 [02:38<18:55, 132.61it/s] 38%|███▊      | 93883/244489 [02:38<18:54, 132.72it/s] 38%|███▊      | 93897/244489 [02:39<19:02, 131.81it/s] 38%|███▊      | 93911/244489 [02:39<19:00, 132.07it/s] 38%|███▊      | 93925/244489 [02:39<19:00, 132.04it/s] 38%|███▊      | 93939/244489 [02:39<19:05, 131.42it/s] 38%|███▊      | 93953/244489 [02:39<19:05, 131.36it/s] 38%|███▊      | 93967/244489 [02:39<19:01, 131.83it/s] 38%|███▊      | 93981/244489 [02:39<19:01, 131.91it/s] 38%|███▊      | 93995/244489 [02:39<18:57, 132.36it/s] 38%|███▊      | 94009/244489 [02:39<18:57, 132.26it/s] 38%|███▊      | 94023/244489 [02:40<19:00, 131.90it/s] 38%|███▊      | 94037/244489 [02:40<18:59, 132.09it/s] 38%|███▊      | 94051/244489 [02:40<18:58, 132.19it/s] 38%|███▊      | 94065/244489 [02:40<18:57, 132.28it/s] 38%|███▊      | 94079/244489 [02:40<18:59, 131.99it/s] 38%|███▊      | 94093/244489 [02:40<19:00, 131.90it/s] 38%|███▊      | 94107/244489 [02:40<19:04, 131.41it/s] 38%|███▊      | 94121/244489 [02:40<19:09, 130.78it/s] 39%|███▊      | 94135/244489 [02:40<19:08, 130.96it/s] 39%|███▊      | 94149/244489 [02:41<19:23, 129.26it/s] 39%|███▊      | 94162/244489 [02:41<19:27, 128.75it/s] 39%|███▊      | 94175/244489 [02:41<20:18, 123.36it/s] 39%|███▊      | 94189/244489 [02:41<19:46, 126.67it/s] 39%|███▊      | 94203/244489 [02:41<19:24, 129.10it/s] 39%|███▊      | 94217/244489 [02:41<19:09, 130.68it/s] 39%|███▊      | 94231/244489 [02:41<18:57, 132.15it/s] 39%|███▊      | 94245/244489 [02:41<18:57, 132.03it/s] 39%|███▊      | 94259/244489 [02:41<18:58, 131.97it/s] 39%|███▊      | 94273/244489 [02:41<19:05, 131.11it/s] 39%|███▊      | 94287/244489 [02:42<19:20, 129.44it/s] 39%|███▊      | 94301/244489 [02:42<19:14, 130.13it/s] 39%|███▊      | 94315/244489 [02:42<19:19, 129.53it/s] 39%|███▊      | 94329/244489 [02:42<19:12, 130.24it/s] 39%|███▊      | 94343/244489 [02:42<19:14, 130.04it/s] 39%|███▊      | 94357/244489 [02:42<19:21, 129.24it/s] 39%|███▊      | 94371/244489 [02:42<19:15, 129.86it/s] 39%|███▊      | 94384/244489 [02:42<19:19, 129.49it/s] 39%|███▊      | 94398/244489 [02:42<19:12, 130.23it/s] 39%|███▊      | 94412/244489 [02:43<19:06, 130.89it/s] 39%|███▊      | 94426/244489 [02:43<19:01, 131.41it/s] 39%|███▊      | 94440/244489 [02:43<18:55, 132.15it/s] 39%|███▊      | 94454/244489 [02:43<19:01, 131.45it/s] 39%|███▊      | 94468/244489 [02:43<18:52, 132.52it/s] 39%|███▊      | 94482/244489 [02:43<18:54, 132.18it/s] 39%|███▊      | 94496/244489 [02:43<18:46, 133.14it/s] 39%|███▊      | 94510/244489 [02:43<18:52, 132.42it/s] 39%|███▊      | 94524/244489 [02:43<18:57, 131.83it/s] 39%|███▊      | 94538/244489 [02:43<18:45, 133.20it/s] 39%|███▊      | 94552/244489 [02:44<18:58, 131.67it/s] 39%|███▊      | 94566/244489 [02:44<18:59, 131.61it/s] 39%|███▊      | 94580/244489 [02:44<19:11, 130.19it/s] 39%|███▊      | 94594/244489 [02:44<19:13, 129.91it/s] 39%|███▊      | 94607/244489 [02:44<19:13, 129.92it/s] 39%|███▊      | 94621/244489 [02:44<18:58, 131.60it/s] 39%|███▊      | 94635/244489 [02:44<19:03, 131.05it/s] 39%|███▊      | 94649/244489 [02:44<19:03, 131.00it/s] 39%|███▊      | 94663/244489 [02:44<18:59, 131.48it/s] 39%|███▊      | 94677/244489 [02:45<18:52, 132.34it/s] 39%|███▊      | 94691/244489 [02:45<18:45, 133.14it/s] 39%|███▊      | 94705/244489 [02:45<18:40, 133.65it/s] 39%|███▊      | 94719/244489 [02:45<18:39, 133.81it/s] 39%|███▊      | 94733/244489 [02:45<18:43, 133.33it/s] 39%|███▉      | 94747/244489 [02:45<18:45, 133.01it/s] 39%|███▉      | 94761/244489 [02:45<18:39, 133.72it/s] 39%|███▉      | 94775/244489 [02:45<18:36, 134.10it/s] 39%|███▉      | 94789/244489 [02:45<18:35, 134.20it/s] 39%|███▉      | 94803/244489 [02:45<18:33, 134.43it/s] 39%|███▉      | 94817/244489 [02:46<18:32, 134.53it/s] 39%|███▉      | 94831/244489 [02:46<18:32, 134.49it/s] 39%|███▉      | 94845/244489 [02:46<20:43, 120.37it/s] 39%|███▉      | 94859/244489 [02:46<20:05, 124.15it/s] 39%|███▉      | 94873/244489 [02:46<19:37, 127.01it/s] 39%|███▉      | 94887/244489 [02:46<19:15, 129.48it/s] 39%|███▉      | 94901/244489 [02:46<19:01, 131.10it/s] 39%|███▉      | 94915/244489 [02:46<18:51, 132.21it/s] 39%|███▉      | 94929/244489 [02:46<18:43, 133.15it/s] 39%|███▉      | 94943/244489 [02:47<18:36, 133.90it/s] 39%|███▉      | 94957/244489 [02:47<18:34, 134.15it/s] 39%|███▉      | 94971/244489 [02:47<18:36, 133.92it/s] 39%|███▉      | 94985/244489 [02:47<18:51, 132.16it/s] 39%|███▉      | 94999/244489 [02:47<19:03, 130.71it/s] 39%|███▉      | 95013/244489 [02:47<19:16, 129.26it/s] 39%|███▉      | 95026/244489 [02:47<19:20, 128.74it/s] 39%|███▉      | 95039/244489 [02:47<19:22, 128.52it/s] 39%|███▉      | 95053/244489 [02:47<19:16, 129.19it/s] 39%|███▉      | 95067/244489 [02:48<19:09, 129.98it/s] 39%|███▉      | 95081/244489 [02:48<19:21, 128.68it/s] 39%|███▉      | 95095/244489 [02:48<19:15, 129.29it/s] 39%|███▉      | 95109/244489 [02:48<19:09, 129.91it/s] 39%|███▉      | 95123/244489 [02:48<19:03, 130.61it/s] 39%|███▉      | 95137/244489 [02:48<18:53, 131.76it/s] 39%|███▉      | 95151/244489 [02:48<18:47, 132.44it/s] 39%|███▉      | 95165/244489 [02:48<18:44, 132.82it/s] 39%|███▉      | 95179/244489 [02:48<18:40, 133.26it/s] 39%|███▉      | 95193/244489 [02:48<18:45, 132.70it/s] 39%|███▉      | 95207/244489 [02:49<18:48, 132.27it/s] 39%|███▉      | 95221/244489 [02:49<18:44, 132.72it/s] 39%|███▉      | 95235/244489 [02:49<18:40, 133.15it/s] 39%|███▉      | 95249/244489 [02:49<18:35, 133.75it/s] 39%|███▉      | 95263/244489 [02:49<18:33, 133.97it/s] 39%|███▉      | 95277/244489 [02:49<18:30, 134.34it/s] 39%|███▉      | 95291/244489 [02:49<18:29, 134.45it/s] 39%|███▉      | 95305/244489 [02:49<18:25, 134.89it/s] 39%|███▉      | 95319/244489 [02:49<18:25, 134.91it/s] 39%|███▉      | 95333/244489 [02:50<18:26, 134.83it/s] 39%|███▉      | 95347/244489 [02:50<18:29, 134.37it/s] 39%|███▉      | 95361/244489 [02:50<18:26, 134.75it/s] 39%|███▉      | 95375/244489 [02:50<18:32, 133.98it/s] 39%|███▉      | 95389/244489 [02:50<18:30, 134.23it/s] 39%|███▉      | 95403/244489 [02:50<18:27, 134.56it/s] 39%|███▉      | 95417/244489 [02:50<18:25, 134.79it/s] 39%|███▉      | 95431/244489 [02:50<18:28, 134.42it/s] 39%|███▉      | 95445/244489 [02:50<18:29, 134.33it/s] 39%|███▉      | 95459/244489 [02:50<18:27, 134.53it/s] 39%|███▉      | 95473/244489 [02:51<18:25, 134.74it/s] 39%|███▉      | 95487/244489 [02:51<18:24, 134.86it/s] 39%|███▉      | 95501/244489 [02:51<18:43, 132.63it/s] 39%|███▉      | 95515/244489 [02:51<21:16, 116.70it/s] 39%|███▉      | 95529/244489 [02:51<20:32, 120.89it/s] 39%|███▉      | 95543/244489 [02:51<19:55, 124.58it/s] 39%|███▉      | 95557/244489 [02:51<19:38, 126.36it/s] 39%|███▉      | 95570/244489 [02:51<19:32, 126.97it/s] 39%|███▉      | 95584/244489 [02:51<19:20, 128.32it/s] 39%|███▉      | 95598/244489 [02:52<19:05, 130.03it/s] 39%|███▉      | 95612/244489 [02:52<18:53, 131.32it/s] 39%|███▉      | 95626/244489 [02:52<18:46, 132.11it/s] 39%|███▉      | 95640/244489 [02:52<18:45, 132.29it/s] 39%|███▉      | 95654/244489 [02:52<18:45, 132.24it/s] 39%|███▉      | 95668/244489 [02:52<18:46, 132.13it/s] 39%|███▉      | 95682/244489 [02:52<18:41, 132.74it/s] 39%|███▉      | 95696/244489 [02:52<18:39, 132.89it/s] 39%|███▉      | 95710/244489 [02:52<18:33, 133.58it/s] 39%|███▉      | 95724/244489 [02:52<18:31, 133.86it/s] 39%|███▉      | 95738/244489 [02:53<18:42, 132.54it/s] 39%|███▉      | 95752/244489 [02:53<18:56, 130.92it/s] 39%|███▉      | 95766/244489 [02:53<19:08, 129.54it/s] 39%|███▉      | 95779/244489 [02:53<19:17, 128.49it/s] 39%|███▉      | 95792/244489 [02:53<19:19, 128.21it/s] 39%|███▉      | 95805/244489 [02:53<19:56, 124.30it/s] 39%|███▉      | 95819/244489 [02:53<19:32, 126.79it/s] 39%|███▉      | 95833/244489 [02:53<19:10, 129.17it/s] 39%|███▉      | 95847/244489 [02:53<19:00, 130.30it/s] 39%|███▉      | 95861/244489 [02:54<18:51, 131.37it/s] 39%|███▉      | 95875/244489 [02:54<18:45, 132.01it/s] 39%|███▉      | 95889/244489 [02:54<18:40, 132.65it/s] 39%|███▉      | 95903/244489 [02:54<18:35, 133.17it/s] 39%|███▉      | 95917/244489 [02:54<18:30, 133.81it/s] 39%|███▉      | 95931/244489 [02:54<18:30, 133.77it/s] 39%|███▉      | 95945/244489 [02:54<18:26, 134.24it/s] 39%|███▉      | 95959/244489 [02:54<18:28, 133.96it/s] 39%|███▉      | 95973/244489 [02:54<18:33, 133.36it/s] 39%|███▉      | 95987/244489 [02:54<18:37, 132.92it/s] 39%|███▉      | 96001/244489 [02:55<18:33, 133.39it/s] 39%|███▉      | 96015/244489 [02:55<18:35, 133.05it/s] 39%|███▉      | 96029/244489 [02:55<18:41, 132.41it/s] 39%|███▉      | 96043/244489 [02:55<18:43, 132.12it/s] 39%|███▉      | 96057/244489 [02:55<18:34, 133.17it/s] 39%|███▉      | 96071/244489 [02:55<18:29, 133.77it/s] 39%|███▉      | 96085/244489 [02:55<18:30, 133.61it/s] 39%|███▉      | 96099/244489 [02:55<18:28, 133.84it/s] 39%|███▉      | 96113/244489 [02:55<18:38, 132.66it/s] 39%|███▉      | 96127/244489 [02:56<18:42, 132.14it/s] 39%|███▉      | 96141/244489 [02:56<18:33, 133.18it/s] 39%|███▉      | 96155/244489 [02:56<18:27, 133.98it/s] 39%|███▉      | 96169/244489 [02:56<18:22, 134.50it/s] 39%|███▉      | 96183/244489 [02:56<18:18, 134.98it/s] 39%|███▉      | 96197/244489 [02:56<18:17, 135.13it/s] 39%|███▉      | 96211/244489 [02:56<18:14, 135.49it/s] 39%|███▉      | 96225/244489 [02:56<18:12, 135.69it/s] 39%|███▉      | 96239/244489 [02:56<18:09, 136.04it/s] 39%|███▉      | 96253/244489 [02:56<18:09, 136.00it/s] 39%|███▉      | 96267/244489 [02:57<18:10, 135.97it/s] 39%|███▉      | 96281/244489 [02:57<18:11, 135.83it/s] 39%|███▉      | 96295/244489 [02:57<18:09, 136.02it/s] 39%|███▉      | 96309/244489 [02:57<18:10, 135.84it/s] 39%|███▉      | 96323/244489 [02:57<18:11, 135.74it/s] 39%|███▉      | 96337/244489 [02:57<18:10, 135.90it/s] 39%|███▉      | 96351/244489 [02:57<18:09, 135.99it/s] 39%|███▉      | 96365/244489 [02:57<18:15, 135.17it/s] 39%|███▉      | 96379/244489 [02:57<18:15, 135.22it/s] 39%|███▉      | 96393/244489 [02:58<18:15, 135.13it/s] 39%|███▉      | 96407/244489 [02:58<18:20, 134.57it/s] 39%|███▉      | 96421/244489 [02:58<18:23, 134.23it/s] 39%|███▉      | 96435/244489 [02:58<18:25, 133.95it/s] 39%|███▉      | 96449/244489 [02:58<18:27, 133.70it/s] 39%|███▉      | 96463/244489 [02:58<18:27, 133.69it/s] 39%|███▉      | 96477/244489 [02:58<18:22, 134.19it/s] 39%|███▉      | 96491/244489 [02:58<20:01, 123.16it/s] 39%|███▉      | 96505/244489 [02:58<19:33, 126.14it/s] 39%|███▉      | 96519/244489 [02:58<19:10, 128.58it/s] 39%|███▉      | 96533/244489 [02:59<18:55, 130.35it/s] 39%|███▉      | 96547/244489 [02:59<18:43, 131.66it/s] 39%|███▉      | 96561/244489 [02:59<18:34, 132.74it/s] 40%|███▉      | 96575/244489 [02:59<18:29, 133.26it/s] 40%|███▉      | 96589/244489 [02:59<18:30, 133.14it/s] 40%|███▉      | 96603/244489 [02:59<18:24, 133.92it/s] 40%|███▉      | 96617/244489 [02:59<18:20, 134.33it/s] 40%|███▉      | 96631/244489 [02:59<18:14, 135.03it/s] 40%|███▉      | 96645/244489 [02:59<18:10, 135.60it/s] 40%|███▉      | 96659/244489 [03:00<18:08, 135.76it/s] 40%|███▉      | 96673/244489 [03:00<18:07, 135.90it/s] 40%|███▉      | 96687/244489 [03:00<18:08, 135.83it/s] 40%|███▉      | 96701/244489 [03:00<18:10, 135.50it/s] 40%|███▉      | 96715/244489 [03:00<18:12, 135.23it/s] 40%|███▉      | 96729/244489 [03:00<18:15, 134.91it/s] 40%|███▉      | 96743/244489 [03:00<18:13, 135.07it/s] 40%|███▉      | 96757/244489 [03:00<18:17, 134.57it/s] 40%|███▉      | 96771/244489 [03:00<18:17, 134.59it/s] 40%|███▉      | 96785/244489 [03:00<18:16, 134.73it/s] 40%|███▉      | 96799/244489 [03:01<18:15, 134.81it/s] 40%|███▉      | 96813/244489 [03:01<18:18, 134.48it/s] 40%|███▉      | 96827/244489 [03:01<18:17, 134.61it/s] 40%|███▉      | 96841/244489 [03:01<18:23, 133.83it/s] 40%|███▉      | 96855/244489 [03:01<18:30, 132.99it/s] 40%|███▉      | 96869/244489 [03:01<18:31, 132.82it/s] 40%|███▉      | 96883/244489 [03:01<18:26, 133.41it/s] 40%|███▉      | 96897/244489 [03:01<18:37, 132.03it/s] 40%|███▉      | 96911/244489 [03:01<18:44, 131.26it/s] 40%|███▉      | 96925/244489 [03:02<18:58, 129.60it/s] 40%|███▉      | 96938/244489 [03:02<19:08, 128.47it/s] 40%|███▉      | 96951/244489 [03:02<19:22, 126.92it/s] 40%|███▉      | 96964/244489 [03:02<19:32, 125.87it/s] 40%|███▉      | 96978/244489 [03:02<19:18, 127.38it/s] 40%|███▉      | 96992/244489 [03:02<19:03, 129.02it/s] 40%|███▉      | 97006/244489 [03:02<18:50, 130.51it/s] 40%|███▉      | 97020/244489 [03:02<18:47, 130.76it/s] 40%|███▉      | 97034/244489 [03:02<19:13, 127.81it/s] 40%|███▉      | 97047/244489 [03:02<19:10, 128.12it/s] 40%|███▉      | 97060/244489 [03:03<19:08, 128.32it/s] 40%|███▉      | 97073/244489 [03:03<19:10, 128.12it/s] 40%|███▉      | 97086/244489 [03:03<19:06, 128.56it/s] 40%|███▉      | 97099/244489 [03:03<19:06, 128.52it/s] 40%|███▉      | 97112/244489 [03:03<19:04, 128.81it/s] 40%|███▉      | 97125/244489 [03:03<19:05, 128.66it/s] 40%|███▉      | 97138/244489 [03:03<19:03, 128.81it/s] 40%|███▉      | 97151/244489 [03:03<19:03, 128.85it/s] 40%|███▉      | 97164/244489 [03:03<19:06, 128.48it/s] 40%|███▉      | 97177/244489 [03:03<19:03, 128.84it/s] 40%|███▉      | 97190/244489 [03:04<19:06, 128.50it/s] 40%|███▉      | 97203/244489 [03:04<19:07, 128.38it/s] 40%|███▉      | 97216/244489 [03:04<19:08, 128.25it/s] 40%|███▉      | 97229/244489 [03:04<19:08, 128.21it/s] 40%|███▉      | 97242/244489 [03:04<19:08, 128.24it/s] 40%|███▉      | 97255/244489 [03:04<19:07, 128.29it/s] 40%|███▉      | 97268/244489 [03:04<19:05, 128.53it/s] 40%|███▉      | 97281/244489 [03:04<19:06, 128.35it/s] 40%|███▉      | 97294/244489 [03:04<19:06, 128.35it/s] 40%|███▉      | 97307/244489 [03:04<19:07, 128.27it/s] 40%|███▉      | 97321/244489 [03:05<19:02, 128.81it/s] 40%|███▉      | 97334/244489 [03:05<19:06, 128.34it/s] 40%|███▉      | 97348/244489 [03:05<18:54, 129.74it/s] 40%|███▉      | 97362/244489 [03:05<18:46, 130.55it/s] 40%|███▉      | 97376/244489 [03:05<18:54, 129.68it/s] 40%|███▉      | 97389/244489 [03:05<18:56, 129.39it/s] 40%|███▉      | 97402/244489 [03:05<19:00, 128.95it/s] 40%|███▉      | 97415/244489 [03:05<19:06, 128.31it/s] 40%|███▉      | 97428/244489 [03:05<19:03, 128.61it/s] 40%|███▉      | 97441/244489 [03:06<19:03, 128.57it/s] 40%|███▉      | 97454/244489 [03:06<19:01, 128.76it/s] 40%|███▉      | 97467/244489 [03:06<18:59, 128.99it/s] 40%|███▉      | 97481/244489 [03:06<18:48, 130.25it/s] 40%|███▉      | 97495/244489 [03:06<18:52, 129.84it/s] 40%|███▉      | 97509/244489 [03:06<18:37, 131.48it/s] 40%|███▉      | 97523/244489 [03:06<18:29, 132.42it/s] 40%|███▉      | 97537/244489 [03:06<18:22, 133.32it/s] 40%|███▉      | 97551/244489 [03:06<18:19, 133.69it/s] 40%|███▉      | 97565/244489 [03:06<18:15, 134.09it/s] 40%|███▉      | 97579/244489 [03:07<18:12, 134.44it/s] 40%|███▉      | 97593/244489 [03:07<19:58, 122.58it/s] 40%|███▉      | 97606/244489 [03:07<19:41, 124.36it/s] 40%|███▉      | 97620/244489 [03:07<19:12, 127.46it/s] 40%|███▉      | 97634/244489 [03:07<18:51, 129.75it/s] 40%|███▉      | 97648/244489 [03:07<18:38, 131.23it/s] 40%|███▉      | 97662/244489 [03:07<18:37, 131.43it/s] 40%|███▉      | 97676/244489 [03:07<18:31, 132.05it/s] 40%|███▉      | 97690/244489 [03:07<18:26, 132.66it/s] 40%|███▉      | 97704/244489 [03:08<18:17, 133.69it/s] 40%|███▉      | 97718/244489 [03:08<18:14, 134.07it/s] 40%|███▉      | 97732/244489 [03:08<18:12, 134.33it/s] 40%|███▉      | 97746/244489 [03:08<18:10, 134.51it/s] 40%|███▉      | 97760/244489 [03:08<18:10, 134.50it/s] 40%|███▉      | 97774/244489 [03:08<18:17, 133.68it/s] 40%|███▉      | 97788/244489 [03:08<18:21, 133.20it/s] 40%|████      | 97802/244489 [03:08<18:18, 133.57it/s] 40%|████      | 97816/244489 [03:08<18:22, 133.00it/s] 40%|████      | 97830/244489 [03:08<18:22, 133.01it/s] 40%|████      | 97844/244489 [03:09<18:23, 132.86it/s] 40%|████      | 97858/244489 [03:09<18:16, 133.71it/s] 40%|████      | 97872/244489 [03:09<18:13, 134.13it/s] 40%|████      | 97886/244489 [03:09<18:09, 134.59it/s] 40%|████      | 97900/244489 [03:09<18:10, 134.37it/s] 40%|████      | 97914/244489 [03:09<18:19, 133.34it/s] 40%|████      | 97928/244489 [03:09<18:19, 133.35it/s] 40%|████      | 97942/244489 [03:09<18:15, 133.77it/s] 40%|████      | 97956/244489 [03:09<18:12, 134.07it/s] 40%|████      | 97970/244489 [03:10<18:11, 134.26it/s] 40%|████      | 97984/244489 [03:10<18:07, 134.67it/s] 40%|████      | 97998/244489 [03:10<18:06, 134.83it/s] 40%|████      | 98012/244489 [03:10<18:02, 135.25it/s] 40%|████      | 98026/244489 [03:10<18:04, 134.99it/s] 40%|████      | 98040/244489 [03:10<18:04, 135.03it/s] 40%|████      | 98054/244489 [03:10<18:03, 135.12it/s] 40%|████      | 98068/244489 [03:10<18:06, 134.76it/s] 40%|████      | 98082/244489 [03:10<18:06, 134.73it/s] 40%|████      | 98096/244489 [03:10<18:05, 134.87it/s] 40%|████      | 98110/244489 [03:11<18:04, 134.97it/s] 40%|████      | 98124/244489 [03:11<18:02, 135.27it/s] 40%|████      | 98138/244489 [03:11<18:01, 135.34it/s] 40%|████      | 98152/244489 [03:11<18:01, 135.33it/s] 40%|████      | 98166/244489 [03:11<18:01, 135.29it/s] 40%|████      | 98180/244489 [03:11<18:05, 134.82it/s] 40%|████      | 98194/244489 [03:11<18:02, 135.11it/s] 40%|████      | 98208/244489 [03:11<18:07, 134.54it/s] 40%|████      | 98222/244489 [03:11<18:14, 133.63it/s] 40%|████      | 98236/244489 [03:12<18:30, 131.71it/s] 40%|████      | 98250/244489 [03:12<18:41, 130.35it/s] 40%|████      | 98264/244489 [03:12<18:57, 128.59it/s] 40%|████      | 98277/244489 [03:12<19:06, 127.52it/s] 40%|████      | 98290/244489 [03:12<19:11, 126.94it/s] 40%|████      | 98303/244489 [03:12<19:06, 127.52it/s] 40%|████      | 98317/244489 [03:12<18:58, 128.44it/s] 40%|████      | 98330/244489 [03:12<18:55, 128.73it/s] 40%|████      | 98344/244489 [03:12<18:44, 129.97it/s] 40%|████      | 98358/244489 [03:12<18:38, 130.66it/s] 40%|████      | 98372/244489 [03:13<18:31, 131.43it/s] 40%|████      | 98386/244489 [03:13<18:23, 132.38it/s] 40%|████      | 98400/244489 [03:13<18:17, 133.09it/s] 40%|████      | 98414/244489 [03:13<18:14, 133.45it/s] 40%|████      | 98428/244489 [03:13<18:11, 133.81it/s] 40%|████      | 98442/244489 [03:13<18:14, 133.38it/s] 40%|████      | 98456/244489 [03:13<18:13, 133.52it/s] 40%|████      | 98470/244489 [03:13<18:12, 133.68it/s] 40%|████      | 98484/244489 [03:13<18:11, 133.77it/s] 40%|████      | 98498/244489 [03:13<18:11, 133.76it/s] 40%|████      | 98512/244489 [03:14<18:11, 133.68it/s] 40%|████      | 98526/244489 [03:14<18:10, 133.85it/s] 40%|████      | 98540/244489 [03:14<18:09, 133.90it/s] 40%|████      | 98554/244489 [03:14<18:11, 133.65it/s] 40%|████      | 98568/244489 [03:14<18:19, 132.67it/s] 40%|████      | 98582/244489 [03:14<18:17, 132.92it/s] 40%|████      | 98596/244489 [03:14<18:16, 133.06it/s] 40%|████      | 98610/244489 [03:14<18:19, 132.68it/s] 40%|████      | 98624/244489 [03:14<18:16, 132.98it/s] 40%|████      | 98638/244489 [03:15<18:29, 131.45it/s] 40%|████      | 98652/244489 [03:15<18:38, 130.39it/s] 40%|████      | 98666/244489 [03:15<18:36, 130.65it/s] 40%|████      | 98680/244489 [03:15<18:38, 130.37it/s] 40%|████      | 98694/244489 [03:15<18:41, 130.04it/s] 40%|████      | 98708/244489 [03:15<18:41, 129.98it/s] 40%|████      | 98722/244489 [03:15<18:34, 130.78it/s] 40%|████      | 98736/244489 [03:15<18:28, 131.55it/s] 40%|████      | 98750/244489 [03:15<18:22, 132.17it/s] 40%|████      | 98764/244489 [03:16<18:19, 132.57it/s] 40%|████      | 98778/244489 [03:16<19:03, 127.37it/s] 40%|████      | 98792/244489 [03:16<18:55, 128.30it/s] 40%|████      | 98806/244489 [03:16<18:38, 130.21it/s] 40%|████      | 98820/244489 [03:16<18:25, 131.82it/s] 40%|████      | 98834/244489 [03:16<18:18, 132.65it/s] 40%|████      | 98848/244489 [03:16<18:19, 132.48it/s] 40%|████      | 98862/244489 [03:16<18:12, 133.25it/s] 40%|████      | 98876/244489 [03:16<18:07, 133.89it/s] 40%|████      | 98890/244489 [03:16<18:03, 134.32it/s] 40%|████      | 98904/244489 [03:17<18:02, 134.50it/s] 40%|████      | 98918/244489 [03:17<17:59, 134.85it/s] 40%|████      | 98932/244489 [03:17<18:00, 134.73it/s] 40%|████      | 98946/244489 [03:17<18:04, 134.22it/s] 40%|████      | 98960/244489 [03:17<18:24, 131.78it/s] 40%|████      | 98974/244489 [03:17<18:35, 130.45it/s] 40%|████      | 98988/244489 [03:17<18:41, 129.73it/s] 40%|████      | 99002/244489 [03:17<18:32, 130.73it/s] 40%|████      | 99016/244489 [03:17<18:28, 131.28it/s] 41%|████      | 99030/244489 [03:18<18:20, 132.14it/s] 41%|████      | 99044/244489 [03:18<18:18, 132.35it/s] 41%|████      | 99058/244489 [03:18<18:15, 132.73it/s] 41%|████      | 99072/244489 [03:18<19:45, 122.70it/s] 41%|████      | 99085/244489 [03:18<19:57, 121.44it/s] 41%|████      | 99098/244489 [03:18<20:05, 120.58it/s] 41%|████      | 99111/244489 [03:18<20:25, 118.60it/s] 41%|████      | 99123/244489 [03:18<20:31, 118.01it/s] 41%|████      | 99135/244489 [03:18<20:31, 118.07it/s] 41%|████      | 99149/244489 [03:19<19:45, 122.62it/s] 41%|████      | 99163/244489 [03:19<19:09, 126.45it/s] 41%|████      | 99177/244489 [03:19<18:46, 129.02it/s] 41%|████      | 99191/244489 [03:19<18:29, 130.97it/s] 41%|████      | 99205/244489 [03:19<18:23, 131.63it/s] 41%|████      | 99219/244489 [03:19<18:18, 132.20it/s] 41%|████      | 99233/244489 [03:19<18:08, 133.39it/s] 41%|████      | 99247/244489 [03:19<18:01, 134.33it/s] 41%|████      | 99261/244489 [03:19<17:57, 134.84it/s] 41%|████      | 99275/244489 [03:19<17:53, 135.23it/s] 41%|████      | 99289/244489 [03:20<18:00, 134.34it/s] 41%|████      | 99303/244489 [03:20<18:04, 133.85it/s] 41%|████      | 99317/244489 [03:20<18:02, 134.08it/s] 41%|████      | 99331/244489 [03:20<18:12, 132.83it/s] 41%|████      | 99345/244489 [03:20<18:15, 132.50it/s] 41%|████      | 99359/244489 [03:20<18:14, 132.60it/s] 41%|████      | 99373/244489 [03:20<18:06, 133.55it/s] 41%|████      | 99387/244489 [03:20<18:01, 134.19it/s] 41%|████      | 99401/244489 [03:20<17:56, 134.82it/s] 41%|████      | 99415/244489 [03:20<17:58, 134.47it/s] 41%|████      | 99429/244489 [03:21<18:03, 133.92it/s] 41%|████      | 99443/244489 [03:21<17:59, 134.40it/s] 41%|████      | 99457/244489 [03:21<17:56, 134.78it/s] 41%|████      | 99471/244489 [03:21<17:55, 134.85it/s] 41%|████      | 99485/244489 [03:21<17:53, 135.04it/s] 41%|████      | 99499/244489 [03:21<17:52, 135.22it/s] 41%|████      | 99513/244489 [03:21<17:59, 134.24it/s] 41%|████      | 99527/244489 [03:21<18:05, 133.53it/s] 41%|████      | 99541/244489 [03:21<18:04, 133.61it/s] 41%|████      | 99555/244489 [03:22<18:01, 133.99it/s] 41%|████      | 99569/244489 [03:22<18:15, 132.27it/s] 41%|████      | 99583/244489 [03:22<18:16, 132.11it/s] 41%|████      | 99597/244489 [03:22<18:12, 132.60it/s] 41%|████      | 99611/244489 [03:22<18:05, 133.41it/s] 41%|████      | 99625/244489 [03:22<18:03, 133.75it/s] 41%|████      | 99639/244489 [03:22<18:01, 133.93it/s] 41%|████      | 99653/244489 [03:22<18:02, 133.76it/s] 41%|████      | 99667/244489 [03:22<18:23, 131.21it/s] 41%|████      | 99681/244489 [03:22<18:36, 129.72it/s] 41%|████      | 99695/244489 [03:23<18:27, 130.70it/s] 41%|████      | 99709/244489 [03:23<19:01, 126.84it/s] 41%|████      | 99723/244489 [03:23<18:45, 128.67it/s] 41%|████      | 99737/244489 [03:23<18:32, 130.15it/s] 41%|████      | 99751/244489 [03:23<18:20, 131.55it/s] 41%|████      | 99765/244489 [03:23<18:10, 132.67it/s] 41%|████      | 99779/244489 [03:23<18:08, 132.91it/s] 41%|████      | 99793/244489 [03:23<18:09, 132.78it/s] 41%|████      | 99807/244489 [03:23<18:05, 133.27it/s] 41%|████      | 99821/244489 [03:24<18:01, 133.78it/s] 41%|████      | 99835/244489 [03:24<17:57, 134.20it/s] 41%|████      | 99849/244489 [03:24<17:55, 134.53it/s] 41%|████      | 99863/244489 [03:24<17:52, 134.91it/s] 41%|████      | 99877/244489 [03:24<17:49, 135.20it/s] 41%|████      | 99891/244489 [03:24<17:49, 135.19it/s] 41%|████      | 99905/244489 [03:24<17:48, 135.32it/s] 41%|████      | 99919/244489 [03:24<17:48, 135.24it/s] 41%|████      | 99933/244489 [03:24<17:47, 135.36it/s] 41%|████      | 99947/244489 [03:24<17:51, 134.88it/s] 41%|████      | 99961/244489 [03:25<17:58, 133.95it/s] 41%|████      | 99975/244489 [03:25<17:59, 133.89it/s] 41%|████      | 99989/244489 [03:25<17:55, 134.34it/s] 41%|████      | 100003/244489 [03:25<18:11, 132.37it/s] 41%|████      | 100017/244489 [03:25<18:15, 131.92it/s] 41%|████      | 100031/244489 [03:25<18:11, 132.35it/s] 41%|████      | 100045/244489 [03:25<18:04, 133.24it/s] 41%|████      | 100059/244489 [03:25<17:59, 133.83it/s] 41%|████      | 100073/244489 [03:25<18:03, 133.30it/s] 41%|████      | 100087/244489 [03:26<18:10, 132.43it/s] 41%|████      | 100101/244489 [03:26<18:35, 129.41it/s] 41%|████      | 100115/244489 [03:26<18:27, 130.37it/s] 41%|████      | 100129/244489 [03:26<18:22, 130.92it/s] 41%|████      | 100143/244489 [03:26<18:18, 131.45it/s] 41%|████      | 100157/244489 [03:26<18:11, 132.23it/s] 41%|████      | 100171/244489 [03:26<18:05, 132.91it/s] 41%|████      | 100185/244489 [03:26<18:02, 133.30it/s] 41%|████      | 100199/244489 [03:26<18:00, 133.53it/s] 41%|████      | 100213/244489 [03:26<17:57, 133.91it/s] 41%|████      | 100227/244489 [03:27<17:55, 134.11it/s] 41%|████      | 100241/244489 [03:27<17:55, 134.13it/s] 41%|████      | 100255/244489 [03:27<17:55, 134.15it/s] 41%|████      | 100269/244489 [03:27<17:53, 134.39it/s] 41%|████      | 100283/244489 [03:27<17:50, 134.67it/s] 41%|████      | 100297/244489 [03:27<17:49, 134.82it/s] 41%|████      | 100311/244489 [03:27<17:49, 134.77it/s] 41%|████      | 100325/244489 [03:27<17:51, 134.57it/s] 41%|████      | 100339/244489 [03:27<17:51, 134.54it/s] 41%|████      | 100353/244489 [03:28<17:51, 134.58it/s] 41%|████      | 100367/244489 [03:28<17:52, 134.44it/s] 41%|████      | 100381/244489 [03:28<17:51, 134.55it/s] 41%|████      | 100395/244489 [03:28<17:50, 134.64it/s] 41%|████      | 100409/244489 [03:28<17:55, 133.96it/s] 41%|████      | 100423/244489 [03:28<17:59, 133.44it/s] 41%|████      | 100437/244489 [03:28<18:05, 132.73it/s] 41%|████      | 100451/244489 [03:28<18:15, 131.49it/s] 41%|████      | 100465/244489 [03:28<18:18, 131.15it/s] 41%|████      | 100479/244489 [03:28<18:20, 130.86it/s] 41%|████      | 100493/244489 [03:29<18:24, 130.37it/s] 41%|████      | 100507/244489 [03:29<18:15, 131.39it/s] 41%|████      | 100521/244489 [03:29<18:07, 132.44it/s] 41%|████      | 100535/244489 [03:29<18:02, 132.97it/s] 41%|████      | 100549/244489 [03:29<18:01, 133.08it/s] 41%|████      | 100563/244489 [03:29<18:05, 132.62it/s] 41%|████      | 100577/244489 [03:29<18:06, 132.42it/s] 41%|████      | 100591/244489 [03:29<18:02, 132.91it/s] 41%|████      | 100605/244489 [03:29<17:56, 133.69it/s] 41%|████      | 100619/244489 [03:30<17:52, 134.20it/s] 41%|████      | 100633/244489 [03:30<17:48, 134.61it/s] 41%|████      | 100647/244489 [03:30<17:46, 134.81it/s] 41%|████      | 100661/244489 [03:30<17:46, 134.82it/s] 41%|████      | 100675/244489 [03:30<19:25, 123.42it/s] 41%|████      | 100689/244489 [03:30<18:55, 126.67it/s] 41%|████      | 100703/244489 [03:30<18:35, 128.91it/s] 41%|████      | 100717/244489 [03:30<18:18, 130.94it/s] 41%|████      | 100731/244489 [03:30<18:08, 132.12it/s] 41%|████      | 100745/244489 [03:31<17:59, 133.16it/s] 41%|████      | 100759/244489 [03:31<17:54, 133.76it/s] 41%|████      | 100773/244489 [03:31<17:50, 134.25it/s] 41%|████      | 100787/244489 [03:31<17:50, 134.26it/s] 41%|████      | 100801/244489 [03:31<17:51, 134.14it/s] 41%|████      | 100815/244489 [03:31<17:48, 134.49it/s] 41%|████      | 100829/244489 [03:31<17:45, 134.79it/s] 41%|████      | 100843/244489 [03:31<17:45, 134.84it/s] 41%|████▏     | 100857/244489 [03:31<17:59, 133.11it/s] 41%|████▏     | 100871/244489 [03:31<18:06, 132.19it/s] 41%|████▏     | 100885/244489 [03:32<18:10, 131.65it/s] 41%|████▏     | 100899/244489 [03:32<20:11, 118.49it/s] 41%|████▏     | 100912/244489 [03:32<20:23, 117.38it/s] 41%|████▏     | 100925/244489 [03:32<20:02, 119.39it/s] 41%|████▏     | 100939/244489 [03:32<19:18, 123.94it/s] 41%|████▏     | 100953/244489 [03:32<18:50, 126.96it/s] 41%|████▏     | 100967/244489 [03:32<18:29, 129.35it/s] 41%|████▏     | 100981/244489 [03:32<18:19, 130.57it/s] 41%|████▏     | 100995/244489 [03:32<18:22, 130.21it/s] 41%|████▏     | 101009/244489 [03:33<18:14, 131.05it/s] 41%|████▏     | 101023/244489 [03:33<18:07, 131.92it/s] 41%|████▏     | 101037/244489 [03:33<18:00, 132.81it/s] 41%|████▏     | 101094/244489 [03:33<09:14, 258.48it/s] 41%|████▏     | 101121/244489 [03:33<10:39, 224.03it/s] 41%|████▏     | 101271/244489 [03:33<04:16, 557.59it/s] 41%|████▏     | 101432/244489 [03:33<02:49, 842.89it/s] 42%|████▏     | 101594/244489 [03:33<02:14, 1059.86it/s] 42%|████▏     | 101751/244489 [03:33<01:58, 1205.19it/s] 42%|████▏     | 101919/244489 [03:34<01:46, 1340.69it/s] 42%|████▏     | 102084/244489 [03:34<01:39, 1430.83it/s] 42%|████▏     | 102241/244489 [03:34<01:36, 1471.26it/s] 42%|████▏     | 102405/244489 [03:34<01:33, 1517.60it/s] 42%|████▏     | 102559/244489 [03:35<05:41, 416.03it/s]  42%|████▏     | 102671/244489 [03:36<08:30, 277.85it/s] 42%|████▏     | 102754/244489 [03:36<10:16, 229.75it/s] 42%|████▏     | 102816/244489 [03:37<11:31, 204.92it/s] 42%|████▏     | 102864/244489 [03:37<12:28, 189.33it/s] 42%|████▏     | 102902/244489 [03:37<13:16, 177.79it/s] 42%|████▏     | 102933/244489 [03:38<13:55, 169.46it/s] 42%|████▏     | 102959/244489 [03:38<14:38, 161.16it/s] 42%|████▏     | 102981/244489 [03:38<15:04, 156.45it/s] 42%|████▏     | 103001/244489 [03:38<15:28, 152.37it/s] 42%|████▏     | 103019/244489 [03:38<15:50, 148.85it/s] 42%|████▏     | 103036/244489 [03:38<16:14, 145.22it/s] 42%|████▏     | 103052/244489 [03:38<16:29, 142.89it/s] 42%|████▏     | 103067/244489 [03:39<16:41, 141.28it/s] 42%|████▏     | 103082/244489 [03:39<16:52, 139.66it/s] 42%|████▏     | 103097/244489 [03:39<16:59, 138.72it/s] 42%|████▏     | 103111/244489 [03:39<17:05, 137.88it/s] 42%|████▏     | 103125/244489 [03:39<17:08, 137.40it/s] 42%|████▏     | 103139/244489 [03:39<17:12, 136.91it/s] 42%|████▏     | 103153/244489 [03:39<17:14, 136.58it/s] 42%|████▏     | 103167/244489 [03:39<17:17, 136.25it/s] 42%|████▏     | 103181/244489 [03:39<17:17, 136.18it/s] 42%|████▏     | 103195/244489 [03:40<17:16, 136.32it/s] 42%|████▏     | 103209/244489 [03:40<17:16, 136.36it/s] 42%|████▏     | 103223/244489 [03:40<17:16, 136.26it/s] 42%|████▏     | 103237/244489 [03:40<17:15, 136.47it/s] 42%|████▏     | 103251/244489 [03:40<17:16, 136.23it/s] 42%|████▏     | 103265/244489 [03:40<17:15, 136.35it/s] 42%|████▏     | 103279/244489 [03:40<17:16, 136.23it/s] 42%|████▏     | 103293/244489 [03:40<17:16, 136.29it/s] 42%|████▏     | 103307/244489 [03:40<17:16, 136.17it/s] 42%|████▏     | 103321/244489 [03:40<17:18, 135.96it/s] 42%|████▏     | 103335/244489 [03:41<17:19, 135.82it/s] 42%|████▏     | 103349/244489 [03:41<17:20, 135.70it/s] 42%|████▏     | 103363/244489 [03:41<17:33, 133.99it/s] 42%|████▏     | 103377/244489 [03:41<17:30, 134.37it/s] 42%|████▏     | 103391/244489 [03:41<17:28, 134.56it/s] 42%|████▏     | 103405/244489 [03:41<17:33, 133.98it/s] 42%|████▏     | 103419/244489 [03:41<17:33, 133.95it/s] 42%|████▏     | 103433/244489 [03:41<17:32, 134.02it/s] 42%|████▏     | 103447/244489 [03:41<17:39, 133.09it/s] 42%|████▏     | 103461/244489 [03:42<17:41, 132.90it/s] 42%|████▏     | 103475/244489 [03:42<17:39, 133.08it/s] 42%|████▏     | 103489/244489 [03:42<17:34, 133.69it/s] 42%|████▏     | 103503/244489 [03:42<17:29, 134.38it/s] 42%|████▏     | 103517/244489 [03:42<17:25, 134.83it/s] 42%|████▏     | 103531/244489 [03:42<17:29, 134.30it/s] 42%|████▏     | 103545/244489 [03:42<17:32, 133.87it/s] 42%|████▏     | 103559/244489 [03:42<17:28, 134.40it/s] 42%|████▏     | 103573/244489 [03:42<17:24, 134.93it/s] 42%|████▏     | 103587/244489 [03:42<17:22, 135.13it/s] 42%|████▏     | 103601/244489 [03:43<17:22, 135.13it/s] 42%|████▏     | 103615/244489 [03:43<17:21, 135.29it/s] 42%|████▏     | 103629/244489 [03:43<17:19, 135.50it/s] 42%|████▏     | 103643/244489 [03:43<17:18, 135.56it/s] 42%|████▏     | 103657/244489 [03:43<17:19, 135.45it/s] 42%|████▏     | 103671/244489 [03:43<17:27, 134.40it/s] 42%|████▏     | 103685/244489 [03:43<17:31, 133.91it/s] 42%|████▏     | 103699/244489 [03:43<17:26, 134.52it/s] 42%|████▏     | 103713/244489 [03:43<17:31, 133.82it/s] 42%|████▏     | 103727/244489 [03:43<17:37, 133.17it/s] 42%|████▏     | 103741/244489 [03:44<17:33, 133.58it/s] 42%|████▏     | 103755/244489 [03:44<17:30, 133.93it/s] 42%|████▏     | 103769/244489 [03:44<17:29, 134.04it/s] 42%|████▏     | 103783/244489 [03:44<17:29, 134.05it/s] 42%|████▏     | 103797/244489 [03:44<17:33, 133.52it/s] 42%|████▏     | 103811/244489 [03:44<17:37, 133.05it/s] 42%|████▏     | 103825/244489 [03:44<17:40, 132.66it/s] 42%|████▏     | 103839/244489 [03:44<17:50, 131.33it/s] 42%|████▏     | 103853/244489 [03:44<17:50, 131.36it/s] 42%|████▏     | 103867/244489 [03:45<17:46, 131.82it/s] 42%|████▏     | 103881/244489 [03:45<17:40, 132.56it/s] 42%|████▏     | 103895/244489 [03:45<17:36, 133.06it/s] 43%|████▎     | 103909/244489 [03:45<17:35, 133.17it/s] 43%|████▎     | 103923/244489 [03:45<17:37, 132.98it/s] 43%|████▎     | 103937/244489 [03:45<17:37, 132.87it/s] 43%|████▎     | 103951/244489 [03:45<19:48, 118.22it/s] 43%|████▎     | 103965/244489 [03:45<18:59, 123.34it/s] 43%|████▎     | 103979/244489 [03:45<18:28, 126.79it/s] 43%|████▎     | 103993/244489 [03:46<18:10, 128.80it/s] 43%|████▎     | 104007/244489 [03:46<17:56, 130.55it/s] 43%|████▎     | 104021/244489 [03:46<17:38, 132.74it/s] 43%|████▎     | 104035/244489 [03:46<17:33, 133.35it/s] 43%|████▎     | 104049/244489 [03:46<17:36, 132.90it/s] 43%|████▎     | 104063/244489 [03:46<17:32, 133.48it/s] 43%|████▎     | 104077/244489 [03:46<17:35, 132.97it/s] 43%|████▎     | 104091/244489 [03:46<17:40, 132.34it/s] 43%|████▎     | 104105/244489 [03:46<17:33, 133.24it/s] 43%|████▎     | 104119/244489 [03:46<17:29, 133.79it/s] 43%|████▎     | 104133/244489 [03:47<17:26, 134.15it/s] 43%|████▎     | 104147/244489 [03:47<17:22, 134.58it/s] 43%|████▎     | 104161/244489 [03:47<17:19, 135.03it/s] 43%|████▎     | 104175/244489 [03:47<17:17, 135.30it/s] 43%|████▎     | 104189/244489 [03:47<17:15, 135.49it/s] 43%|████▎     | 104203/244489 [03:47<17:11, 136.06it/s] 43%|████▎     | 104217/244489 [03:47<17:08, 136.41it/s] 43%|████▎     | 104231/244489 [03:47<17:16, 135.35it/s] 43%|████▎     | 104245/244489 [03:47<17:20, 134.84it/s] 43%|████▎     | 104259/244489 [03:47<17:24, 134.26it/s] 43%|████▎     | 104273/244489 [03:48<17:26, 134.04it/s] 43%|████▎     | 104287/244489 [03:48<17:30, 133.43it/s] 43%|████▎     | 104302/244489 [03:48<17:05, 136.71it/s] 43%|████▎     | 104316/244489 [03:48<17:06, 136.58it/s] 43%|████▎     | 104330/244489 [03:48<17:13, 135.61it/s] 43%|████▎     | 104344/244489 [03:48<17:19, 134.80it/s] 43%|████▎     | 104358/244489 [03:48<17:15, 135.26it/s] 43%|████▎     | 104372/244489 [03:48<17:19, 134.79it/s] 43%|████▎     | 104386/244489 [03:48<17:20, 134.70it/s] 43%|████▎     | 104400/244489 [03:49<17:21, 134.50it/s] 43%|████▎     | 104414/244489 [03:49<17:22, 134.35it/s] 43%|████▎     | 104428/244489 [03:49<17:21, 134.44it/s] 43%|████▎     | 104442/244489 [03:49<17:43, 131.74it/s] 43%|████▎     | 104456/244489 [03:49<17:37, 132.40it/s] 43%|████▎     | 104470/244489 [03:49<17:32, 133.02it/s] 43%|████▎     | 104484/244489 [03:49<17:29, 133.46it/s] 43%|████▎     | 104498/244489 [03:49<17:24, 133.96it/s] 43%|████▎     | 104512/244489 [03:49<17:22, 134.27it/s] 43%|████▎     | 104526/244489 [03:49<17:24, 134.05it/s] 43%|████▎     | 104540/244489 [03:50<17:17, 134.91it/s] 43%|████▎     | 104554/244489 [03:50<17:20, 134.44it/s] 43%|████▎     | 104568/244489 [03:50<17:08, 136.06it/s] 43%|████▎     | 104582/244489 [03:50<17:07, 136.23it/s] 43%|████▎     | 104596/244489 [03:50<17:07, 136.16it/s] 43%|████▎     | 104610/244489 [03:50<17:13, 135.39it/s] 43%|████▎     | 104624/244489 [03:50<17:08, 135.94it/s] 43%|████▎     | 104638/244489 [03:50<19:22, 120.29it/s] 43%|████▎     | 104651/244489 [03:50<19:37, 118.74it/s] 43%|████▎     | 104664/244489 [03:51<19:33, 119.15it/s] 43%|████▎     | 104677/244489 [03:51<19:24, 120.02it/s] 43%|████▎     | 104690/244489 [03:51<19:03, 122.26it/s] 43%|████▎     | 104704/244489 [03:51<18:26, 126.30it/s] 43%|████▎     | 104718/244489 [03:51<17:55, 129.95it/s] 43%|████▎     | 104732/244489 [03:51<17:33, 132.63it/s] 43%|████▎     | 104746/244489 [03:51<17:20, 134.27it/s] 43%|████▎     | 104760/244489 [03:51<17:15, 134.93it/s] 43%|████▎     | 104774/244489 [03:51<17:23, 133.94it/s] 43%|████▎     | 104788/244489 [03:51<17:25, 133.61it/s] 43%|████▎     | 104802/244489 [03:52<17:40, 131.72it/s] 43%|████▎     | 104816/244489 [03:52<17:27, 133.30it/s] 43%|████▎     | 104830/244489 [03:52<17:22, 133.96it/s] 43%|████▎     | 104844/244489 [03:52<17:16, 134.69it/s] 43%|████▎     | 104858/244489 [03:52<17:13, 135.09it/s] 43%|████▎     | 104872/244489 [03:52<17:14, 135.02it/s] 43%|████▎     | 104886/244489 [03:52<17:11, 135.29it/s] 43%|████▎     | 104900/244489 [03:52<17:11, 135.38it/s] 43%|████▎     | 104914/244489 [03:52<17:10, 135.40it/s] 43%|████▎     | 104928/244489 [03:53<17:11, 135.36it/s] 43%|████▎     | 104942/244489 [03:53<17:11, 135.34it/s] 43%|████▎     | 104956/244489 [03:53<17:12, 135.16it/s] 43%|████▎     | 104970/244489 [03:53<17:07, 135.83it/s] 43%|████▎     | 104984/244489 [03:53<17:06, 135.89it/s] 43%|████▎     | 104998/244489 [03:53<17:03, 136.23it/s] 43%|████▎     | 105012/244489 [03:53<16:58, 136.99it/s] 43%|████▎     | 105026/244489 [03:53<16:56, 137.22it/s] 43%|████▎     | 105040/244489 [03:53<16:56, 137.16it/s] 43%|████▎     | 105054/244489 [03:53<17:03, 136.27it/s] 43%|████▎     | 105068/244489 [03:54<16:57, 137.05it/s] 43%|████▎     | 105082/244489 [03:54<17:23, 133.64it/s] 43%|████▎     | 105096/244489 [03:54<17:23, 133.58it/s] 43%|████▎     | 105110/244489 [03:54<17:22, 133.76it/s] 43%|████▎     | 105124/244489 [03:54<17:18, 134.23it/s] 43%|████▎     | 105138/244489 [03:54<17:19, 134.00it/s] 43%|████▎     | 105152/244489 [03:54<17:23, 133.57it/s] 43%|████▎     | 105166/244489 [03:54<17:21, 133.72it/s] 43%|████▎     | 105180/244489 [03:54<17:34, 132.10it/s] 43%|████▎     | 105194/244489 [03:55<17:38, 131.56it/s] 43%|████▎     | 105208/244489 [03:55<17:34, 132.08it/s] 43%|████▎     | 105222/244489 [03:55<17:51, 130.00it/s] 43%|████▎     | 105236/244489 [03:55<17:46, 130.54it/s] 43%|████▎     | 105250/244489 [03:55<17:42, 131.07it/s] 43%|████▎     | 105264/244489 [03:55<17:45, 130.72it/s] 43%|████▎     | 105278/244489 [03:55<17:40, 131.21it/s] 43%|████▎     | 105292/244489 [03:55<17:39, 131.44it/s] 43%|████▎     | 105306/244489 [03:55<17:36, 131.72it/s] 43%|████▎     | 105320/244489 [03:55<17:38, 131.48it/s] 43%|████▎     | 105334/244489 [03:56<17:36, 131.65it/s] 43%|████▎     | 105348/244489 [03:56<17:35, 131.76it/s] 43%|████▎     | 105362/244489 [03:56<17:33, 132.06it/s] 43%|████▎     | 105376/244489 [03:56<17:34, 131.89it/s] 43%|████▎     | 105390/244489 [03:56<17:31, 132.23it/s] 43%|████▎     | 105404/244489 [03:56<17:23, 133.32it/s] 43%|████▎     | 105418/244489 [03:56<17:24, 133.20it/s] 43%|████▎     | 105432/244489 [03:56<17:25, 133.05it/s] 43%|████▎     | 105446/244489 [03:56<17:47, 130.26it/s] 43%|████▎     | 105460/244489 [03:57<17:53, 129.56it/s] 43%|████▎     | 105473/244489 [03:57<18:05, 128.12it/s] 43%|████▎     | 105486/244489 [03:57<18:07, 127.86it/s] 43%|████▎     | 105499/244489 [03:57<18:14, 126.95it/s] 43%|████▎     | 105512/244489 [03:57<18:14, 127.04it/s] 43%|████▎     | 105525/244489 [03:57<18:06, 127.87it/s] 43%|████▎     | 105538/244489 [03:57<18:16, 126.67it/s] 43%|████▎     | 105551/244489 [03:57<18:12, 127.16it/s] 43%|████▎     | 105565/244489 [03:57<17:56, 129.05it/s] 43%|████▎     | 105579/244489 [03:57<17:48, 129.99it/s] 43%|████▎     | 105592/244489 [03:58<18:08, 127.57it/s] 43%|████▎     | 105606/244489 [03:58<17:51, 129.56it/s] 43%|████▎     | 105620/244489 [03:58<17:44, 130.42it/s] 43%|████▎     | 105634/244489 [03:58<17:42, 130.74it/s] 43%|████▎     | 105648/244489 [03:58<17:48, 129.96it/s] 43%|████▎     | 105662/244489 [03:58<17:40, 130.93it/s] 43%|████▎     | 105676/244489 [03:58<17:42, 130.67it/s] 43%|████▎     | 105690/244489 [03:58<17:42, 130.70it/s] 43%|████▎     | 105704/244489 [03:58<17:42, 130.63it/s] 43%|████▎     | 105718/244489 [03:59<17:52, 129.38it/s] 43%|████▎     | 105731/244489 [03:59<17:59, 128.53it/s] 43%|████▎     | 105744/244489 [03:59<19:35, 118.01it/s] 43%|████▎     | 105758/244489 [03:59<18:53, 122.42it/s] 43%|████▎     | 105772/244489 [03:59<18:20, 126.04it/s] 43%|████▎     | 105786/244489 [03:59<17:59, 128.49it/s] 43%|████▎     | 105800/244489 [03:59<17:44, 130.33it/s] 43%|████▎     | 105814/244489 [03:59<17:32, 131.77it/s] 43%|████▎     | 105828/244489 [03:59<17:25, 132.58it/s] 43%|████▎     | 105842/244489 [04:00<17:19, 133.33it/s] 43%|████▎     | 105856/244489 [04:00<17:16, 133.78it/s] 43%|████▎     | 105870/244489 [04:00<17:13, 134.14it/s] 43%|████▎     | 105884/244489 [04:00<17:10, 134.46it/s] 43%|████▎     | 105898/244489 [04:00<17:07, 134.84it/s] 43%|████▎     | 105912/244489 [04:00<17:16, 133.69it/s] 43%|████▎     | 105926/244489 [04:00<17:36, 131.17it/s] 43%|████▎     | 105940/244489 [04:00<17:33, 131.46it/s] 43%|████▎     | 105954/244489 [04:00<17:51, 129.25it/s] 43%|████▎     | 105967/244489 [04:00<18:26, 125.19it/s] 43%|████▎     | 105980/244489 [04:01<18:18, 126.08it/s] 43%|████▎     | 105994/244489 [04:01<18:02, 127.90it/s] 43%|████▎     | 106008/244489 [04:01<17:48, 129.59it/s] 43%|████▎     | 106022/244489 [04:01<17:33, 131.38it/s] 43%|████▎     | 106036/244489 [04:01<17:24, 132.55it/s] 43%|████▎     | 106050/244489 [04:01<17:19, 133.22it/s] 43%|████▎     | 106064/244489 [04:01<17:21, 132.87it/s] 43%|████▎     | 106078/244489 [04:01<17:25, 132.45it/s] 43%|████▎     | 106092/244489 [04:01<17:22, 132.78it/s] 43%|████▎     | 106106/244489 [04:02<17:25, 132.40it/s] 43%|████▎     | 106120/244489 [04:02<17:30, 131.75it/s] 43%|████▎     | 106134/244489 [04:02<17:31, 131.64it/s] 43%|████▎     | 106148/244489 [04:02<17:33, 131.31it/s] 43%|████▎     | 106162/244489 [04:02<17:32, 131.38it/s] 43%|████▎     | 106176/244489 [04:02<17:32, 131.48it/s] 43%|████▎     | 106190/244489 [04:02<17:30, 131.69it/s] 43%|████▎     | 106204/244489 [04:02<17:29, 131.74it/s] 43%|████▎     | 106218/244489 [04:02<17:28, 131.90it/s] 43%|████▎     | 106232/244489 [04:02<17:27, 131.99it/s] 43%|████▎     | 106246/244489 [04:03<17:25, 132.28it/s] 43%|████▎     | 106260/244489 [04:03<17:22, 132.59it/s] 43%|████▎     | 106274/244489 [04:03<17:21, 132.75it/s] 43%|████▎     | 106288/244489 [04:03<17:17, 133.14it/s] 43%|████▎     | 106302/244489 [04:03<17:22, 132.56it/s] 43%|████▎     | 106316/244489 [04:03<17:16, 133.28it/s] 43%|████▎     | 106330/244489 [04:03<17:15, 133.46it/s] 43%|████▎     | 106344/244489 [04:03<17:21, 132.69it/s] 44%|████▎     | 106358/244489 [04:03<17:59, 128.02it/s] 44%|████▎     | 106372/244489 [04:04<17:52, 128.74it/s] 44%|████▎     | 106386/244489 [04:04<17:47, 129.42it/s] 44%|████▎     | 106400/244489 [04:04<17:36, 130.68it/s] 44%|████▎     | 106414/244489 [04:04<17:35, 130.83it/s] 44%|████▎     | 106428/244489 [04:04<17:34, 130.95it/s] 44%|████▎     | 106442/244489 [04:04<17:26, 131.89it/s] 44%|████▎     | 106456/244489 [04:04<17:19, 132.79it/s] 44%|████▎     | 106470/244489 [04:04<17:17, 133.09it/s] 44%|████▎     | 106484/244489 [04:04<17:19, 132.73it/s] 44%|████▎     | 106498/244489 [04:04<17:19, 132.71it/s] 44%|████▎     | 106512/244489 [04:05<17:20, 132.63it/s] 44%|████▎     | 106526/244489 [04:05<17:18, 132.91it/s] 44%|████▎     | 106540/244489 [04:05<17:13, 133.45it/s] 44%|████▎     | 106554/244489 [04:05<17:12, 133.61it/s] 44%|████▎     | 106568/244489 [04:05<17:09, 134.00it/s] 44%|████▎     | 106582/244489 [04:05<17:09, 134.01it/s] 44%|████▎     | 106596/244489 [04:05<17:07, 134.15it/s] 44%|████▎     | 106610/244489 [04:05<17:14, 133.29it/s] 44%|████▎     | 106624/244489 [04:05<17:10, 133.74it/s] 44%|████▎     | 106638/244489 [04:06<17:14, 133.25it/s] 44%|████▎     | 106652/244489 [04:06<17:11, 133.58it/s] 44%|████▎     | 106666/244489 [04:06<17:15, 133.08it/s] 44%|████▎     | 106680/244489 [04:06<17:10, 133.73it/s] 44%|████▎     | 106694/244489 [04:06<17:13, 133.34it/s] 44%|████▎     | 106708/244489 [04:06<17:23, 132.10it/s] 44%|████▎     | 106722/244489 [04:06<17:27, 131.50it/s] 44%|████▎     | 106736/244489 [04:06<17:26, 131.69it/s] 44%|████▎     | 106750/244489 [04:06<17:16, 132.92it/s] 44%|████▎     | 106764/244489 [04:06<17:19, 132.52it/s] 44%|████▎     | 106778/244489 [04:07<17:08, 133.93it/s] 44%|████▎     | 106792/244489 [04:07<17:14, 133.17it/s] 44%|████▎     | 106806/244489 [04:07<17:18, 132.59it/s] 44%|████▎     | 106820/244489 [04:07<17:21, 132.20it/s] 44%|████▎     | 106834/244489 [04:07<17:22, 131.99it/s] 44%|████▎     | 106848/244489 [04:07<17:26, 131.58it/s] 44%|████▎     | 106862/244489 [04:07<17:19, 132.37it/s] 44%|████▎     | 106876/244489 [04:07<17:24, 131.75it/s] 44%|████▎     | 106890/244489 [04:07<17:24, 131.74it/s] 44%|████▎     | 106904/244489 [04:08<17:33, 130.57it/s] 44%|████▎     | 106918/244489 [04:08<18:45, 122.19it/s] 44%|████▎     | 106931/244489 [04:08<18:53, 121.36it/s] 44%|████▎     | 106944/244489 [04:08<19:00, 120.65it/s] 44%|████▎     | 106957/244489 [04:08<19:03, 120.27it/s] 44%|████▍     | 106970/244489 [04:08<19:08, 119.70it/s] 44%|████▍     | 106982/244489 [04:08<19:11, 119.45it/s] 44%|████▍     | 106994/244489 [04:08<19:13, 119.21it/s] 44%|████▍     | 107006/244489 [04:08<19:12, 119.29it/s] 44%|████▍     | 107020/244489 [04:09<18:28, 124.05it/s] 44%|████▍     | 107034/244489 [04:09<17:58, 127.48it/s] 44%|████▍     | 107048/244489 [04:09<17:40, 129.65it/s] 44%|████▍     | 107062/244489 [04:09<17:27, 131.24it/s] 44%|████▍     | 107076/244489 [04:09<17:17, 132.39it/s] 44%|████▍     | 107090/244489 [04:09<17:19, 132.15it/s] 44%|████▍     | 107104/244489 [04:09<17:12, 133.01it/s] 44%|████▍     | 107118/244489 [04:09<17:07, 133.74it/s] 44%|████▍     | 107132/244489 [04:09<17:05, 133.92it/s] 44%|████▍     | 107146/244489 [04:09<17:05, 133.89it/s] 44%|████▍     | 107160/244489 [04:10<17:04, 134.00it/s] 44%|████▍     | 107174/244489 [04:10<17:06, 133.80it/s] 44%|████▍     | 107188/244489 [04:10<17:10, 133.24it/s] 44%|████▍     | 107202/244489 [04:10<17:21, 131.80it/s] 44%|████▍     | 107216/244489 [04:10<17:21, 131.76it/s] 44%|████▍     | 107230/244489 [04:10<17:26, 131.15it/s] 44%|████▍     | 107244/244489 [04:10<17:23, 131.57it/s] 44%|████▍     | 107258/244489 [04:10<17:31, 130.50it/s] 44%|████▍     | 107272/244489 [04:10<17:31, 130.46it/s] 44%|████▍     | 107286/244489 [04:11<17:28, 130.85it/s] 44%|████▍     | 107300/244489 [04:11<17:29, 130.73it/s] 44%|████▍     | 107314/244489 [04:11<17:26, 131.07it/s] 44%|████▍     | 107328/244489 [04:11<17:26, 131.13it/s] 44%|████▍     | 107342/244489 [04:11<17:37, 129.74it/s] 44%|████▍     | 107355/244489 [04:11<17:40, 129.37it/s] 44%|████▍     | 107368/244489 [04:11<17:39, 129.47it/s] 44%|████▍     | 107382/244489 [04:11<17:34, 130.00it/s] 44%|████▍     | 107396/244489 [04:11<17:30, 130.51it/s] 44%|████▍     | 107410/244489 [04:11<17:25, 131.14it/s] 44%|████▍     | 107424/244489 [04:12<17:31, 130.41it/s] 44%|████▍     | 107438/244489 [04:12<17:23, 131.31it/s] 44%|████▍     | 107452/244489 [04:12<17:16, 132.17it/s] 44%|████▍     | 107466/244489 [04:12<17:16, 132.25it/s] 44%|████▍     | 107480/244489 [04:12<17:21, 131.50it/s] 44%|████▍     | 107494/244489 [04:12<17:25, 131.05it/s] 44%|████▍     | 107508/244489 [04:12<17:18, 131.91it/s] 44%|████▍     | 107522/244489 [04:12<17:04, 133.68it/s] 45%|████▍     | 109746/244489 [04:12<00:21, 6415.21it/s] 46%|████▌     | 111713/244489 [04:13<00:13, 10085.43it/s] 47%|████▋     | 115477/244489 [04:13<00:07, 18039.09it/s] 49%|████▉     | 120383/244489 [04:13<00:04, 27098.31it/s] 50%|█████     | 123135/244489 [04:13<00:05, 23586.09it/s] 52%|█████▏    | 127648/244489 [04:13<00:03, 29335.52it/s] 54%|█████▍    | 131676/244489 [04:13<00:03, 32357.12it/s] 55%|█████▌    | 135041/244489 [04:13<00:04, 25058.59it/s] 56%|█████▋    | 137882/244489 [04:14<00:06, 15790.31it/s] 57%|█████▋    | 140101/244489 [04:14<00:08, 12867.33it/s] 58%|█████▊    | 141890/244489 [04:14<00:09, 11080.14it/s] 59%|█████▊    | 143359/244489 [04:14<00:09, 10559.23it/s] 59%|█████▉    | 144653/244489 [04:15<00:09, 10007.59it/s] 60%|█████▉    | 145806/244489 [04:15<00:09, 9869.23it/s]  60%|██████    | 146894/244489 [04:15<00:10, 9644.68it/s] 61%|██████    | 147922/244489 [04:15<00:10, 9245.02it/s] 61%|██████    | 148884/244489 [04:15<00:10, 8941.29it/s] 61%|██████▏   | 149799/244489 [04:15<00:10, 8662.27it/s] 62%|██████▏   | 150676/244489 [04:15<00:11, 8478.83it/s] 62%|██████▏   | 151529/244489 [04:15<00:11, 8342.63it/s] 62%|██████▏   | 152365/244489 [04:15<00:11, 8261.71it/s] 63%|██████▎   | 153193/244489 [04:16<00:11, 8266.33it/s] 63%|██████▎   | 154020/244489 [04:16<00:11, 8185.47it/s] 63%|██████▎   | 154839/244489 [04:16<00:11, 8030.85it/s] 64%|██████▎   | 155854/244489 [04:16<00:10, 8631.49it/s] 64%|██████▍   | 156721/244489 [04:16<00:10, 8513.66it/s] 64%|██████▍   | 157575/244489 [04:16<00:11, 7845.21it/s] 65%|██████▍   | 158370/244489 [04:16<00:11, 7341.27it/s] 65%|██████▌   | 159165/244489 [04:16<00:11, 7503.84it/s] 65%|██████▌   | 159925/244489 [04:16<00:11, 7333.62it/s] 66%|██████▌   | 160762/244489 [04:17<00:10, 7621.68it/s] 66%|██████▌   | 161531/244489 [04:17<00:12, 6688.90it/s] 66%|██████▋   | 162426/244489 [04:17<00:11, 7281.87it/s] 67%|██████▋   | 163358/244489 [04:17<00:10, 7835.49it/s] 67%|██████▋   | 164165/244489 [04:17<00:13, 5958.62it/s] 67%|██████▋   | 164847/244489 [04:17<00:12, 6157.22it/s] 68%|██████▊   | 165617/244489 [04:17<00:12, 6540.07it/s] 68%|██████▊   | 166532/244489 [04:17<00:10, 7224.07it/s] 68%|██████▊   | 167301/244489 [04:18<00:10, 7023.41it/s] 69%|██████▊   | 168036/244489 [04:18<00:10, 7067.79it/s] 69%|██████▉   | 169468/244489 [04:18<00:08, 9073.90it/s] 70%|██████▉   | 170407/244489 [04:18<00:10, 7043.18it/s] 71%|███████   | 172845/244489 [04:18<00:06, 11163.72it/s] 72%|███████▏  | 175308/244489 [04:18<00:04, 14576.53it/s] 73%|███████▎  | 177657/244489 [04:18<00:03, 16945.23it/s] 74%|███████▎  | 179833/244489 [04:18<00:03, 18269.78it/s] 75%|███████▍  | 182202/244489 [04:18<00:03, 19798.99it/s] 75%|███████▌  | 184278/244489 [04:19<00:04, 13585.43it/s] 76%|███████▌  | 185965/244489 [04:19<00:05, 10302.38it/s] 77%|███████▋  | 187328/244489 [04:19<00:05, 10863.88it/s] 77%|███████▋  | 189111/244489 [04:19<00:04, 12146.55it/s] 78%|███████▊  | 190562/244489 [04:20<00:07, 6872.34it/s]  78%|███████▊  | 191670/244489 [04:20<00:07, 6873.83it/s] 79%|███████▉  | 192652/244489 [04:20<00:07, 6941.97it/s] 79%|███████▉  | 193741/244489 [04:20<00:06, 7653.12it/s] 80%|███████▉  | 195052/244489 [04:20<00:05, 8769.33it/s] 80%|████████  | 196117/244489 [04:20<00:07, 6141.75it/s] 81%|████████  | 196962/244489 [04:21<00:10, 4681.10it/s] 81%|████████  | 198275/244489 [04:21<00:07, 5924.23it/s] 81%|████████▏ | 199116/244489 [04:21<00:09, 4760.97it/s] 82%|████████▏ | 199792/244489 [04:22<00:16, 2747.52it/s] 82%|████████▏ | 200298/244489 [04:22<00:17, 2548.67it/s] 82%|████████▏ | 201156/244489 [04:22<00:13, 3255.80it/s] 82%|████████▏ | 201700/244489 [04:23<00:16, 2543.39it/s] 83%|████████▎ | 203226/244489 [04:23<00:09, 4167.33it/s] 83%|████████▎ | 203991/244489 [04:23<00:08, 4547.94it/s] 84%|████████▎ | 204707/244489 [04:23<00:16, 2455.21it/s] 84%|████████▍ | 206089/244489 [04:24<00:10, 3700.37it/s] 85%|████████▍ | 207545/244489 [04:24<00:07, 5170.04it/s] 85%|████████▌ | 208841/244489 [04:24<00:05, 6431.87it/s] 86%|████████▌ | 210637/244489 [04:24<00:03, 8598.17it/s] 87%|████████▋ | 212155/244489 [04:24<00:03, 9990.38it/s] 87%|████████▋ | 213597/244489 [04:24<00:02, 11017.78it/s] 88%|████████▊ | 214983/244489 [04:24<00:02, 11617.77it/s] 89%|████████▊ | 216572/244489 [04:24<00:02, 12731.04it/s] 89%|████████▉ | 218494/244489 [04:24<00:01, 14489.91it/s] 90%|█████████ | 220389/244489 [04:24<00:01, 15735.03it/s] 91%|█████████ | 222227/244489 [04:25<00:01, 16487.09it/s] 92%|█████████▏| 224161/244489 [04:25<00:01, 17312.00it/s] 92%|█████████▏| 226040/244489 [04:25<00:01, 17744.20it/s] 93%|█████████▎| 227855/244489 [04:25<00:00, 17848.83it/s] 94%|█████████▍| 229736/244489 [04:25<00:00, 18132.47it/s] 95%|█████████▍| 231621/244489 [04:25<00:00, 18343.23it/s] 96%|█████████▌| 233494/244489 [04:25<00:00, 18458.00it/s] 96%|█████████▋| 235397/244489 [04:25<00:00, 18627.76it/s] 97%|█████████▋| 237267/244489 [04:25<00:00, 18272.06it/s] 98%|█████████▊| 239101/244489 [04:25<00:00, 18000.25it/s] 99%|█████████▊| 241006/244489 [04:26<00:00, 18305.58it/s] 99%|█████████▉| 242985/244489 [04:26<00:00, 18741.00it/s]100%|██████████| 244489/244489 [04:26<00:00, 918.18it/s]  
  0%|          | 0/34927 [00:00<?, ?it/s]  6%|▌         | 1959/34927 [00:00<00:01, 19582.50it/s] 11%|█▏        | 3936/34927 [00:00<00:01, 19690.19it/s] 17%|█▋        | 5906/34927 [00:00<00:01, 18760.63it/s] 22%|██▏       | 7788/34927 [00:00<00:01, 18132.04it/s] 28%|██▊       | 9606/34927 [00:00<00:01, 16372.40it/s] 32%|███▏      | 11272/34927 [00:00<00:01, 16460.44it/s] 37%|███▋      | 12939/34927 [00:00<00:01, 16523.06it/s] 42%|████▏     | 14604/34927 [00:00<00:01, 16512.76it/s] 47%|████▋     | 16264/34927 [00:00<00:01, 16490.29it/s] 51%|█████▏    | 17921/34927 [00:01<00:01, 16514.00it/s] 56%|█████▌    | 19577/34927 [00:01<00:00, 15994.31it/s] 61%|██████    | 21248/34927 [00:01<00:00, 16204.11it/s] 66%|██████▌   | 22930/34927 [00:01<00:00, 16383.58it/s] 70%|███████   | 24572/34927 [00:01<00:00, 16233.28it/s] 75%|███████▌  | 26254/34927 [00:01<00:00, 16403.59it/s] 80%|███████▉  | 27897/34927 [00:01<00:00, 16212.46it/s] 85%|████████▍ | 29521/34927 [00:01<00:00, 16035.49it/s] 89%|████████▉ | 31154/34927 [00:01<00:00, 16119.48it/s] 94%|█████████▍| 32768/34927 [00:01<00:00, 15909.41it/s] 98%|█████████▊| 34375/34927 [00:02<00:00, 15954.17it/s]100%|██████████| 34927/34927 [00:02<00:00, 16508.49it/s]
  0%|          | 0/69854 [00:00<?, ?it/s]  3%|▎         | 1813/69854 [00:00<00:03, 18121.16it/s]  5%|▌         | 3832/69854 [00:00<00:03, 19335.07it/s]  8%|▊         | 5766/69854 [00:00<00:03, 19243.47it/s] 11%|█         | 7821/69854 [00:00<00:03, 19754.13it/s] 14%|█▍        | 9797/69854 [00:00<00:03, 19737.59it/s] 17%|█▋        | 11771/69854 [00:00<00:03, 19204.57it/s] 20%|█▉        | 13740/69854 [00:00<00:02, 19357.87it/s] 22%|██▏       | 15678/69854 [00:00<00:02, 18372.00it/s] 25%|██▌       | 17526/69854 [00:00<00:03, 17394.97it/s] 28%|██▊       | 19280/69854 [00:01<00:02, 16926.98it/s] 30%|███       | 20983/69854 [00:01<00:02, 16520.73it/s] 32%|███▏      | 22642/69854 [00:01<00:02, 16312.41it/s] 35%|███▍      | 24324/69854 [00:01<00:02, 16457.11it/s] 37%|███▋      | 26033/69854 [00:01<00:02, 16638.20it/s] 40%|███▉      | 27727/69854 [00:01<00:02, 16725.19it/s] 42%|████▏     | 29402/69854 [00:01<00:02, 16713.63it/s] 45%|████▍     | 31191/69854 [00:01<00:02, 17060.33it/s] 47%|████▋     | 32899/69854 [00:01<00:02, 17044.25it/s] 50%|████▉     | 34605/69854 [00:01<00:02, 16866.00it/s] 52%|█████▏    | 36324/69854 [00:02<00:01, 16961.15it/s] 54%|█████▍    | 38022/69854 [00:02<00:01, 16887.04it/s] 57%|█████▋    | 39712/69854 [00:02<00:01, 16792.48it/s] 59%|█████▉    | 41392/69854 [00:02<00:01, 16745.68it/s] 62%|██████▏   | 43078/69854 [00:02<00:01, 16778.29it/s] 64%|██████▍   | 44757/69854 [00:02<00:01, 16418.63it/s] 66%|██████▋   | 46401/69854 [00:02<00:01, 16341.16it/s] 69%|██████▉   | 48132/69854 [00:02<00:01, 16623.57it/s] 71%|███████▏  | 49828/69854 [00:02<00:01, 16721.34it/s] 74%|███████▍  | 51589/69854 [00:02<00:01, 16983.40it/s] 76%|███████▋  | 53289/69854 [00:03<00:00, 16876.11it/s] 79%|███████▊  | 55008/69854 [00:03<00:00, 16968.03it/s] 82%|████████▏ | 57032/69854 [00:03<00:00, 17941.55it/s] 84%|████████▍ | 58876/69854 [00:03<00:00, 18088.31it/s] 87%|████████▋ | 60686/69854 [00:03<00:00, 17178.15it/s] 89%|████████▉ | 62414/69854 [00:03<00:00, 16580.91it/s] 92%|█████████▏| 64082/69854 [00:03<00:00, 14742.27it/s] 94%|█████████▍| 65596/69854 [00:03<00:00, 14713.94it/s] 96%|█████████▌| 67133/69854 [00:03<00:00, 14849.67it/s] 98%|█████████▊| 68701/69854 [00:04<00:00, 15080.30it/s]100%|██████████| 69854/69854 [00:04<00:00, 16825.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:102: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  train_dataset = TensorDataset(torch.tensor(train_X).float(), torch.tensor(train_y).float())
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.59it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.10it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.29it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.37it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.81it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.59it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.79it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.10it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.14it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.99it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 34.08it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.88it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.88it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 23.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.76it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.01it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.95it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.29it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 31.04it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.89it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.35it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.32it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.23it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.76it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.50it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.35it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.21it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.96it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 37.55it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.99it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.48it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.84it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.66it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.66it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.53it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.14it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 31.00it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.77it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 34.07it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 36.47it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.55it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.76it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.07it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.35it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 27.61it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.30it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 25.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 47.00it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.92it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.00it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.63it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.03it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.15it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.84it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.32it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.95it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.30it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.38it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.94it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.62it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.24it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.03it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 30.24it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 34.85it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 11.94it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 29.36it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 24.63it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 23.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.68it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.43it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.51it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.01it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.43it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.95it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 31.18it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.94it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.52it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.41it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.50it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.43it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.61it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.79it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.36it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.88it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.83it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.27it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 34.40it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.82it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.03it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 29.42it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.14it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.31it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 32.66it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 33.43it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.24it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.35it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 34.90it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.81it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 22.64it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.14it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.55it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.35it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.40it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.13it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.43it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.49it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.83it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.26it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.52it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.01it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.21it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.48it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.46it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 29.29it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.91it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.10it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.00it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.93it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 30.65it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.90it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.23it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.55it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.76it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.87it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.88it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 21.47it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.98it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 23.98it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 27.97it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.25it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.85it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.27it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 35.03it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.19it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 29.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.32it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.52it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.36it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.27it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.68it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.91it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.83it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.61it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.98it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.59it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.42it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.25it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.44it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.02it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.18it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 44.99it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.11it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.41it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.04it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.83it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.26it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.99it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.25it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.39it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.14it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.40it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 34.50it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.66it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.24it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 27.52it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 29.24it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.79it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.49it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.40it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.02it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.50it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.64it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.28it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.48it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.13it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.38it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 34.96it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.10it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.78it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.30it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.76it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.73it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.12it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.20it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.71it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.97it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.33it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.21it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.89it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.47it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.04it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.87it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.64it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.41it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.88it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.15it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.51it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 32.60it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.98it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.94it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 32.96it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.21it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.56it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.14it/s]Loading MSD from data/song/msd_clean.csv
Loading FMA from data/song/fma_clean.csv
Current MSD columns Index(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
       '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24',
       '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36',
       '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48',
       '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60',
       '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72',
       '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84',
       '85', '86', '87', '88', '89', 'title'],
      dtype='object')
Current FMA columns Index(['title', '0', '1', '2', '3', '4', '5', '6', '7', '8',
       ...
       '508', '509', '510', '511', '512', '513', '514', '515', '516', '517'],
      dtype='object', length=519)
Loading data from cache
Done
Generating top1 dataset
Generating top1 dataset
Generating top1 dataset
Loading data
Prepare for training
Start training
=================================================================
                     Kernel Shape Output Shape  Params  Mult-Adds
Layer                                                            
0_fc_layers.Linear_0   [518, 400]  [4096, 400]  207600     207200
1_fc_layers.Linear_1   [400, 200]  [4096, 200]   80200      80000
2_fc_layers.Linear_2     [200, 1]    [4096, 1]     201        200
-----------------------------------------------------------------
                      Totals
Total params          288001
Trainable params      288001
Non-trainable params       0
Mult-Adds             287400
=================================================================
n_classes=2
task=regression
model_name=song_B_2022-05-21-21-33-47
sche_threshold=0.0001
sche_patience=30
sche_factor=0.1
use_scheduler=True
num_workers=4
device=cuda:2
test_batch_size=4096
train_batch_size=4096
learning_rate=0.001
weight_decay=1e-05
num_epochs=200
model_save_path=ckp/song_B_2022-05-21-21-33-47.pth
test_rate=0.2
val_rate=0.1
multiprocess_context=fork
metrics=['r2_score', 'rmse', 'mae']
metrics_f=[<metric.r2_score.R2Score object at 0x7ff12b668430>, <metric.rmse.RMSE object at 0x7ff12b668490>, <metric.mae.MAE object at 0x7ff12b668250>]
hidden_sizes=[400, 200]
model=MLP(
  (fc_layers): ModuleList(
    (0): Linear(in_features=518, out_features=400, bias=True)
    (1): Linear(in_features=400, out_features=200, bias=True)
    (2): Linear(in_features=200, out_features=1, bias=True)
  )
)
writer=<torch.utils.tensorboard.writer.SummaryWriter object at 0x7ff12b668460>
Epoch 1: Loss:            : Train 0.1037, Val 0.0945, Test 0.0951
          R2_Score         : Train -7.0598, Val -6.3026, Test -6.5646
          RMSE             : Train 28.6663, Val 27.3297, Test 27.3161
          MAE              : Train 25.1294, Val 23.0564, Test 23.0534
Best:
          R2_Score         : Train -7.0598, Val -6.3026, Test -6.5646
          RMSE             : Train 28.6663, Val 27.3297, Test 27.3161
          MAE              : Train 25.1294, Val 23.0564, Test 23.0534
Epoch 2: Loss:            : Train 0.0897, Val 0.0856, Test 0.0861
          R2_Score         : Train -5.9699, Val -5.6111, Test -5.8475
          RMSE             : Train 26.6576, Val 26.0036, Test 25.9891
          MAE              : Train 22.5874, Val 22.0134, Test 22.0107
Best:
          R2_Score         : Train -5.9699, Val -5.6111, Test -5.8475
          RMSE             : Train 26.6576, Val 26.0036, Test 25.9891
          MAE              : Train 22.5874, Val 22.0134, Test 22.0107
Epoch 3: Loss:            : Train 0.0807, Val 0.0764, Test 0.0768
          R2_Score         : Train -5.2751, Val -4.9017, Test -5.1117
          RMSE             : Train 25.2941, Val 24.5689, Test 24.5532
          MAE              : Train 21.4531, Val 20.8388, Test 20.8418
Best:
          R2_Score         : Train -5.2751, Val -4.9017, Test -5.1117
          RMSE             : Train 25.2941, Val 24.5689, Test 24.5532
          MAE              : Train 21.4531, Val 20.8388, Test 20.8418
Epoch 4: Loss:            : Train 0.0709, Val 0.0660, Test 0.0663
          R2_Score         : Train -4.5141, Val -4.0961, Test -4.2762
          RMSE             : Train 23.7107, Val 22.8305, Test 22.8132
          MAE              : Train 20.1420, Val 19.4389, Test 19.4389
Best:
          R2_Score         : Train -4.5141, Val -4.0961, Test -4.2762
          RMSE             : Train 23.7107, Val 22.8305, Test 22.8132
          MAE              : Train 20.1420, Val 19.4389, Test 19.4389
Epoch 5: Loss:            : Train 0.0599, Val 0.0544, Test 0.0546
          R2_Score         : Train -3.6564, Val -3.1996, Test -3.3446
          RMSE             : Train 21.7888, Val 20.7253, Test 20.7014
          MAE              : Train 18.5607, Val 17.7109, Test 17.7082
Best:
          R2_Score         : Train -3.6564, Val -3.1996, Test -3.3446
          RMSE             : Train 21.7888, Val 20.7253, Test 20.7014
          MAE              : Train 18.5607, Val 17.7109, Test 17.7082
Epoch 6: Loss:            : Train 0.0480, Val 0.0422, Test 0.0424
          R2_Score         : Train -2.7279, Val -2.2643, Test -2.3712
          RMSE             : Train 19.4958, Val 18.2723, Test 18.2355
          MAE              : Train 16.6556, Val 15.6650, Test 15.6491
Best:
          R2_Score         : Train -2.7279, Val -2.2643, Test -2.3712
          RMSE             : Train 19.4958, Val 18.2723, Test 18.2355
          MAE              : Train 16.6556, Val 15.6650, Test 15.6491
Epoch 7: Loss:            : Train 0.0360, Val 0.0308, Test 0.0308
          R2_Score         : Train -1.8001, Val -1.3784, Test -1.4506
          RMSE             : Train 16.8966, Val 15.5970, Test 15.5474
          MAE              : Train 14.4692, Val 13.3456, Test 13.3262
Best:
          R2_Score         : Train -1.8001, Val -1.3784, Test -1.4506
          RMSE             : Train 16.8966, Val 15.5970, Test 15.5474
          MAE              : Train 14.4692, Val 13.3456, Test 13.3262
Epoch 8: Loss:            : Train 0.0254, Val 0.0215, Test 0.0213
          R2_Score         : Train -0.9783, Val -0.6600, Test -0.7021
          RMSE             : Train 14.2020, Val 13.0304, Test 12.9573
          MAE              : Train 12.1069, Val 11.0401, Test 11.0075
Best:
          R2_Score         : Train -0.9783, Val -0.6600, Test -0.7021
          RMSE             : Train 14.2020, Val 13.0304, Test 12.9573
          MAE              : Train 12.1069, Val 11.0401, Test 11.0075
Epoch 9: Loss:            : Train 0.0178, Val 0.0156, Test 0.0154
          R2_Score         : Train -0.3811, Val -0.2116, Test -0.2296
          RMSE             : Train 11.8663, Val 11.1321, Test 11.0132
          MAE              : Train 9.8569, Val 8.9872, Test 8.9370
Best:
          R2_Score         : Train -0.3811, Val -0.2116, Test -0.2296
          RMSE             : Train 11.8663, Val 11.1321, Test 11.0132
          MAE              : Train 9.8569, Val 8.9872, Test 8.9370
Epoch 10: Loss:            : Train 0.0138, Val 0.0136, Test 0.0132
          R2_Score         : Train -0.0726, Val -0.0542, Test -0.0580
          RMSE             : Train 10.4576, Val 10.3841, Test 10.2155
          MAE              : Train 8.1841, Val 7.7563, Test 7.6884
Best:
          R2_Score         : Train -0.0726, Val -0.0542, Test -0.0580
          RMSE             : Train 10.4576, Val 10.3841, Test 10.2155
          MAE              : Train 8.1841, Val 7.7563, Test 7.6884
Epoch 11: Loss:            : Train 0.0129, Val 0.0133, Test 0.0129
          R2_Score         : Train -0.0009, Val -0.0361, Test -0.0393
          RMSE             : Train 10.1017, Val 10.2942, Test 10.1248
          MAE              : Train 7.4877, Val 7.6593, Test 7.5926
Best:
          R2_Score         : Train -0.0009, Val -0.0361, Test -0.0393
          RMSE             : Train 10.1017, Val 10.2942, Test 10.1248
          MAE              : Train 7.4877, Val 7.6593, Test 7.5926
Epoch 12: Loss:            : Train 0.0127, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0113, Val -0.0284, Test -0.0313
          RMSE             : Train 10.0400, Val 10.2558, Test 10.0862
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.69it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.08it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.53it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.23it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.89it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.41it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.11it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.70it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.25it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.76it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.54it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.76it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.47it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.57it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.04it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.84it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.69it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.57it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.89it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.35it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 28.53it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.02it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.12it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.96it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.87it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.43it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.65it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.19it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 33.84it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.58it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.42it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.84it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 34.83it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.36it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.03it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.62it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.83it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.06it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 36.61it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.77it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.16it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.98it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.63it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.62it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.39it/s]Train:  10%|█         | 6/60 [00:00<00:01, 29.34it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.00it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.45it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.82it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.11it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.53it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.19it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.84it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.41it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.23it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.86it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.49it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 25.40it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.03it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 26.26it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.96it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.73it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.95it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.87it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.53it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.44it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.31it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.97it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.59it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.47it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.53it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.34it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 34.06it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 29.94it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 34.79it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 35.85it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.06it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 27.72it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 31.72it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.68it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 34.70it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.85it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 30.05it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.03it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.38it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.31it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.20it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 33.19it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.54it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 33.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 48.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.86it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.35it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 33.61it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.72it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.25it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 18.80it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.83it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.86it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.40it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.63it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.69it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 33.09it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.12it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.30it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.38it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.16it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.85it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 27.52it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 32.00it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 37.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.72it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 33.67it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 20.33it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.61it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 35.19it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.93it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.26it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.11it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.70it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 36.13it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.70it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.24it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.75it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 28.99it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.62it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 31.88it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.84it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 27.93it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 30.41it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 35.79it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.67it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.01it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.40it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.98it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.78it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.84it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.71it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.04it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 26.15it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.43it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.52it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.73it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.61it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.67it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.14it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 34.33it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.34it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.04it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 31.28it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.28it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.64it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.43it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.38it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.02it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.16it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.73it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.51it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.43it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.59it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.35it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.70it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.40it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.04it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.89it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.00it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.87it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.63it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.98it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.72it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.15it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.25it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 31.92it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.25it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.53it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.14it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 33.00it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.19it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 28.15it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.70it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.36it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.24it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.03it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.63it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 28.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.99it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.66it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.65it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.22it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.14it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.62it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.24it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.03it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.95it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 26.75it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.82it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.12it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.76it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.74it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.04it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.17it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.04it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 29.13it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.00it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.52it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 33.54it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.37it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 31.02it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.77it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.93it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.72it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.41it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 35.89it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 34.24it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.33it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.90it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.14it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.92it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 34.84it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.75it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.48it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.89it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.19it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.77it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.42it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.38it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.35it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.84it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.24it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.95it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.96it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.36it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.99it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.33it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.23it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.63it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.22it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.96it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.81it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.01it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.48it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.52it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.55it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.32it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.76it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.80it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.72it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.81it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.98it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.40it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.42it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.31it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 41.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.31it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 36.62it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 37.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 24.79it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 36.19it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.33it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.03it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.98it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 26.66it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.46it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.76it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.47it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.41it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.55it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.34it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 28.92it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.57it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 32.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 34.78it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.84it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 38.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.06it/s]
          MAE              : Train 7.4345, Val 7.5139, Test 7.4578
Best:
          R2_Score         : Train 0.0113, Val -0.0284, Test -0.0313
          RMSE             : Train 10.0400, Val 10.2558, Test 10.0862
          MAE              : Train 7.4345, Val 7.5139, Test 7.4578
Epoch 13: Loss:            : Train 0.0126, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0177, Val -0.0303, Test -0.0320
          RMSE             : Train 10.0076, Val 10.2652, Test 10.0896
          MAE              : Train 7.4130, Val 7.5921, Test 7.5314
Best:
          R2_Score         : Train 0.0113, Val -0.0284, Test -0.0313
          RMSE             : Train 10.0400, Val 10.2558, Test 10.0862
          MAE              : Train 7.4345, Val 7.5139, Test 7.4578
Epoch 14: Loss:            : Train 0.0126, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0233, Val -0.0257, Test -0.0283
          RMSE             : Train 9.9792, Val 10.2423, Test 10.0715
          MAE              : Train 7.3903, Val 7.5993, Test 7.5348
Best:
          R2_Score         : Train 0.0233, Val -0.0257, Test -0.0283
          RMSE             : Train 9.9792, Val 10.2423, Test 10.0715
          MAE              : Train 7.3903, Val 7.5993, Test 7.5348
Epoch 15: Loss:            : Train 0.0125, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0275, Val -0.0274, Test -0.0294
          RMSE             : Train 9.9575, Val 10.2510, Test 10.0769
          MAE              : Train 7.3827, Val 7.5337, Test 7.4753
Best:
          R2_Score         : Train 0.0233, Val -0.0257, Test -0.0283
          RMSE             : Train 9.9792, Val 10.2423, Test 10.0715
          MAE              : Train 7.3903, Val 7.5993, Test 7.5348
Epoch 16: Loss:            : Train 0.0125, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0310, Val -0.0291, Test -0.0326
          RMSE             : Train 9.9395, Val 10.2596, Test 10.0924
          MAE              : Train 7.3647, Val 7.6351, Test 7.5775
Best:
          R2_Score         : Train 0.0233, Val -0.0257, Test -0.0283
          RMSE             : Train 9.9792, Val 10.2423, Test 10.0715
          MAE              : Train 7.3903, Val 7.5993, Test 7.5348
Epoch 17: Loss:            : Train 0.0124, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0345, Val -0.0283, Test -0.0275
          RMSE             : Train 9.9214, Val 10.2555, Test 10.0676
          MAE              : Train 7.3546, Val 7.4925, Test 7.4296
Best:
          R2_Score         : Train 0.0233, Val -0.0257, Test -0.0283
          RMSE             : Train 9.9792, Val 10.2423, Test 10.0715
          MAE              : Train 7.3903, Val 7.5993, Test 7.5348
Epoch 18: Loss:            : Train 0.0124, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0378, Val -0.0328, Test -0.0344
          RMSE             : Train 9.9045, Val 10.2781, Test 10.1013
          MAE              : Train 7.3382, Val 7.6538, Test 7.5941
Best:
          R2_Score         : Train 0.0233, Val -0.0257, Test -0.0283
          RMSE             : Train 9.9792, Val 10.2423, Test 10.0715
          MAE              : Train 7.3903, Val 7.5993, Test 7.5348
Epoch 19: Loss:            : Train 0.0123, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 20: Loss:            : Train 0.0123, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0436, Val -0.0258, Test -0.0253
          RMSE             : Train 9.8748, Val 10.2429, Test 10.0566
          MAE              : Train 7.3172, Val 7.5312, Test 7.4667
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 21: Loss:            : Train 0.0123, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0461, Val -0.0299, Test -0.0329
          RMSE             : Train 9.8621, Val 10.2632, Test 10.0937
          MAE              : Train 7.3039, Val 7.6304, Test 7.5756
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 22: Loss:            : Train 0.0122, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0485, Val -0.0348, Test -0.0390
          RMSE             : Train 9.8492, Val 10.2880, Test 10.1238
          MAE              : Train 7.3027, Val 7.6684, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 23: Loss:            : Train 0.0122, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0505, Val -0.0273, Test -0.0305
          RMSE             : Train 9.8393, Val 10.2505, Test 10.0822
          MAE              : Train 7.2950, Val 7.5321, Test 7.4797
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 24: Loss:            : Train 0.0122, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0517, Val -0.0284, Test -0.0308
          RMSE             : Train 9.8327, Val 10.2559, Test 10.0834
          MAE              : Train 7.2834, Val 7.5313, Test 7.4747
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 25: Loss:            : Train 0.0122, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0550, Val -0.0332, Test -0.0357
          RMSE             : Train 9.8159, Val 10.2797, Test 10.1075
          MAE              : Train 7.2727, Val 7.5957, Test 7.5327
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 26: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0566, Val -0.0358, Test -0.0379
          RMSE             : Train 9.8077, Val 10.2929, Test 10.1182
          MAE              : Train 7.2625, Val 7.6415, Test 7.5801
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 27: Loss:            : Train 0.0121, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0575, Val -0.0323, Test -0.0336
          RMSE             : Train 9.8028, Val 10.2753, Test 10.0975
          MAE              : Train 7.2666, Val 7.5672, Test 7.5064
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 28: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0597, Val -0.0323, Test -0.0364
          RMSE             : Train 9.7913, Val 10.2753, Test 10.1108
          MAE              : Train 7.2479, Val 7.5678, Test 7.5164
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 29: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0615, Val -0.0333, Test -0.0348
          RMSE             : Train 9.7822, Val 10.2802, Test 10.1033
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 43.79it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 35.92it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 33.44it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.40it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.14it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.73it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 29.89it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.36it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.29it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.63it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.14it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.09it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 32.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.59it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.50it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.77it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.07it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.68it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 32.37it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.33it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.43it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.45it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 33.37it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 34.79it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.90it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.83it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.81it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.01it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.53it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.11it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 33.32it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 34.14it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.17it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.83it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.77it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 33.57it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.28it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.04it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.50it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 32.57it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.72it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.46it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.70it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.04it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.41it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00,  8.65it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 18.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.35it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 22.84it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.23it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.92it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.14it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.58it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.89it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.22it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.61it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.51it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.44it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.10it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.73it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.52it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.17it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.97it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.15it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 34.83it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 49.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.22it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.06it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 35.41it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.90it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.63it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.46it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.95it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.18it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 32.90it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 36.25it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.13it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.98it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.40it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.77it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.64it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 48.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.58it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.15it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.69it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.70it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.04it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.16it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.71it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.55it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.56it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.38it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 27.83it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.62it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.93it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.86it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.16it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.76it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.94it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.23it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.04it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.14it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.70it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.90it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.29it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 31.99it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.56it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.60it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.14it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.55it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.42it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.09it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.97it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.86it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 27.99it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 29.23it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 22.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.00it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.44it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.48it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.67it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.20it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.16it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.71it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.11it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.05it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.75it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.44it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.28it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.17it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.27it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 36.07it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.72it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 30.56it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.81it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.14it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.48it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.22it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 33.21it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.75it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.87it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 27.96it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.75it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.79it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.13it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.97it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.39it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 33.92it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.44it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.10it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 31.89it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.01it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.60it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.04it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 27.28it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.76it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.58it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.11it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.16it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.99it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.58it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.74it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.90it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.69it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 31.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.98it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 29.02it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 34.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.15it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.34it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.44it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.24it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.97it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.82it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 29.73it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.31it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.84it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.17it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.79it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.31it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 35.03it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 34.85it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 25.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.26it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.27it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.68it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.10it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.90it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 35.46it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.65it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.42it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.89it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 33.10it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.77it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.46it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.36it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.20it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.85it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 33.17it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.72it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.31it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.80it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.48it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.86it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 33.08it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.95it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.88it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 29.66it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.09it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.59it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.21it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.85it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.30it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.84it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.78it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.69it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.27it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.83it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.97it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.43it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.63it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 26.41it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.57it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.21it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.46it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.96it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.35it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.30it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 36.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.77it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.42it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.23it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.42it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.96it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.56it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 32.87it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.31it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.51it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.27it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 28.89it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.06it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.82it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.82it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.10it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 26.87it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 26.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.43it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 25.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 40.35it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.95it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 39.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.88it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.68it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.69it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.83it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.39it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.88it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.56it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.54it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.53it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.49it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.54it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.82it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.79it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.30it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 35.75it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.03it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.76it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.35it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.00it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.95it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.11it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.69it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.81it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.68it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 36.26it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.79it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.09it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.42it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.79it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 29.42it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.71it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.00it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 21.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.90it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.64it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.28it/s]
          MAE              : Train 7.2432, Val 7.5604, Test 7.5006
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 30: Loss:            : Train 0.0121, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0624, Val -0.0375, Test -0.0428
          RMSE             : Train 9.7775, Val 10.3012, Test 10.1419
          MAE              : Train 7.2403, Val 7.6458, Test 7.6011
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 31: Loss:            : Train 0.0120, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0643, Val -0.0367, Test -0.0405
          RMSE             : Train 9.7671, Val 10.2973, Test 10.1310
          MAE              : Train 7.2277, Val 7.5847, Test 7.5278
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 32: Loss:            : Train 0.0120, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0657, Val -0.0375, Test -0.0402
          RMSE             : Train 9.7599, Val 10.3012, Test 10.1294
          MAE              : Train 7.2209, Val 7.5688, Test 7.5162
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 33: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0667, Val -0.0421, Test -0.0457
          RMSE             : Train 9.7547, Val 10.3239, Test 10.1562
          MAE              : Train 7.2211, Val 7.6319, Test 7.5729
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 34: Loss:            : Train 0.0120, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0677, Val -0.0404, Test -0.0433
          RMSE             : Train 9.7496, Val 10.3158, Test 10.1444
          MAE              : Train 7.2107, Val 7.6015, Test 7.5446
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 35: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0686, Val -0.0426, Test -0.0445
          RMSE             : Train 9.7448, Val 10.3266, Test 10.1501
          MAE              : Train 7.2028, Val 7.6207, Test 7.5633
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 36: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0706, Val -0.0430, Test -0.0479
          RMSE             : Train 9.7342, Val 10.3285, Test 10.1670
          MAE              : Train 7.1983, Val 7.6174, Test 7.5658
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 37: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0712, Val -0.0432, Test -0.0463
          RMSE             : Train 9.7313, Val 10.3297, Test 10.1592
          MAE              : Train 7.1945, Val 7.5874, Test 7.5321
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 38: Loss:            : Train 0.0119, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0722, Val -0.0376, Test -0.0417
          RMSE             : Train 9.7258, Val 10.3019, Test 10.1366
          MAE              : Train 7.1886, Val 7.5502, Test 7.4966
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 39: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0732, Val -0.0397, Test -0.0444
          RMSE             : Train 9.7209, Val 10.3122, Test 10.1500
          MAE              : Train 7.1886, Val 7.5835, Test 7.5296
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 40: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0748, Val -0.0423, Test -0.0483
          RMSE             : Train 9.7126, Val 10.3252, Test 10.1688
          MAE              : Train 7.1767, Val 7.6321, Test 7.5813
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 41: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0749, Val -0.0423, Test -0.0463
          RMSE             : Train 9.7117, Val 10.3251, Test 10.1589
          MAE              : Train 7.1738, Val 7.5723, Test 7.5176
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 42: Loss:            : Train 0.0119, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0758, Val -0.0446, Test -0.0480
          RMSE             : Train 9.7072, Val 10.3365, Test 10.1672
          MAE              : Train 7.1712, Val 7.5983, Test 7.5427
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 43: Loss:            : Train 0.0119, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0773, Val -0.0453, Test -0.0491
          RMSE             : Train 9.6990, Val 10.3400, Test 10.1729
          MAE              : Train 7.1590, Val 7.5765, Test 7.5189
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 44: Loss:            : Train 0.0119, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0762, Val -0.0455, Test -0.0475
          RMSE             : Train 9.7048, Val 10.3409, Test 10.1649
          MAE              : Train 7.1642, Val 7.6101, Test 7.5524
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 45: Loss:            : Train 0.0119, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0785, Val -0.0453, Test -0.0477
          RMSE             : Train 9.6930, Val 10.3398, Test 10.1661
          MAE              : Train 7.1582, Val 7.5854, Test 7.5248
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 46: Loss:            : Train 0.0118, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0794, Val -0.0462, Test -0.0487
          RMSE             : Train 9.6880, Val 10.3444, Test 10.1706
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.38it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.83it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 34.97it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.58it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.95it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 29.55it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 34.53it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.53it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.96it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.82it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.90it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.62it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.71it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.52it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 36.44it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.44it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 27.95it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.23it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.32it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.33it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.88it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.14it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.68it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.18it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.07it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 31.98it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.86it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.68it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.51it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.29it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.37it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 35.70it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.93it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.51it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.50it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.13it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.42it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 25.76it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.15it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.88it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.92it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.69it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.60it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.07it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.36it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.83it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.05it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 28.72it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.92it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 31.98it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.31it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.97it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.87it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.49it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.10it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.65it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 34.20it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.84it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.40it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.72it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.53it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.94it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.53it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.09it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.56it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 39.14it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.64it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.55it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.71it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.13it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.27it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.44it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.17it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.96it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.83it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 35.25it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 33.82it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.86it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.35it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.30it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.30it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.48it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.93it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.46it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.36it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.68it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.94it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.90it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.86it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 34.02it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.10it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.66it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.75it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.09it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.43it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.21it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.79it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.41it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.90it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.09it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.42it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.62it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.82it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 19.32it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.95it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.03it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.36it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.15it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.06it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.60it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.79it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.02it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 34.36it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.13it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.21it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.18it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.69it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.93it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.68it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.04it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.10it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.75it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.37it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.09it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.88it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 33.24it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.39it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.97it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.71it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.06it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.62it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.59it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 22.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.33it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 32.04it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.04it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 14.53it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.98it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.24it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.49it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.85it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.07it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.03it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.94it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.83it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 34.26it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.32it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.08it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  4.82it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 21.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.74it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 21.81it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 25.93it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 30.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.48it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.94it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 15.81it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.46it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.31it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.18it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.25it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.55it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.95it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.84it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.36it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.36it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.69it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.32it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.86it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 19.22it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 25.87it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 24.07it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.22it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.33it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.51it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.04it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.09it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.84it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.07it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.35it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.03it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.51it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.93it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.79it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.90it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.24it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.55it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.11it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 13.40it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.85it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.73it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.31it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.43it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 28.72it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.44it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.79it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.63it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.20it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.91it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 33.38it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.23it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.36it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.12it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.44it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.63it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.74it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.26it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 33.20it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.83it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.36it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.26it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.43it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.89it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.81it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.58it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.01it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.76it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 32.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.54it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.87it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.77it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.02it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:05,  9.86it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 26.69it/s]Train:  20%|██        | 12/60 [00:00<00:01, 34.12it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.50it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.93it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.60it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.21it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.25it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.00it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.86it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.99it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.50it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.28it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 37.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 48.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.04it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.77it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 24.76it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.15it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.29it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.57it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.62it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.35it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.00it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 27.76it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.50it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.10it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.95it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.70it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.52it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.77it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.86it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.17it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 28.03it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.23it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.24it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.59it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.79it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.88it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.24it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.04it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 36.08it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.26it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.53it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.84it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.19it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 33.57it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 33.98it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.16it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.90it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.77it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.66it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.40it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.19it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.24it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.46it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.04it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.57it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.38it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.20it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.44it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.29it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.25it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 37.01it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 34.67it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 33.78it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.45it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.52it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.38it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 30.04it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.87it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.01it/s]
          MAE              : Train 7.1484, Val 7.5701, Test 7.5072
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 47: Loss:            : Train 0.0118, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0793, Val -0.0538, Test -0.0593
          RMSE             : Train 9.6885, Val 10.3819, Test 10.2222
          MAE              : Train 7.1493, Val 7.6870, Test 7.6357
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 48: Loss:            : Train 0.0118, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0811, Val -0.0534, Test -0.0584
          RMSE             : Train 9.6795, Val 10.3801, Test 10.2177
          MAE              : Train 7.1362, Val 7.7004, Test 7.6441
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 49: Loss:            : Train 0.0118, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0805, Val -0.0461, Test -0.0512
          RMSE             : Train 9.6826, Val 10.3439, Test 10.1827
          MAE              : Train 7.1475, Val 7.5410, Test 7.4926
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 50: Loss:            : Train 0.0118, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0819, Val -0.0487, Test -0.0536
          RMSE             : Train 9.6750, Val 10.3569, Test 10.1947
          MAE              : Train 7.1296, Val 7.6042, Test 7.5496
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 51: Loss:            : Train 0.0116, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0953, Val -0.0484, Test -0.0524
          RMSE             : Train 9.6043, Val 10.3552, Test 10.1888
          MAE              : Train 7.0905, Val 7.6172, Test 7.5618
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 52: Loss:            : Train 0.0116, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0972, Val -0.0519, Test -0.0560
          RMSE             : Train 9.5939, Val 10.3723, Test 10.2060
          MAE              : Train 7.0768, Val 7.6445, Test 7.5890
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 53: Loss:            : Train 0.0116, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0979, Val -0.0515, Test -0.0556
          RMSE             : Train 9.5901, Val 10.3704, Test 10.2039
          MAE              : Train 7.0795, Val 7.6307, Test 7.5751
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 54: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0983, Val -0.0526, Test -0.0568
          RMSE             : Train 9.5882, Val 10.3760, Test 10.2100
          MAE              : Train 7.0693, Val 7.6310, Test 7.5760
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 55: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0986, Val -0.0550, Test -0.0590
          RMSE             : Train 9.5867, Val 10.3879, Test 10.2205
          MAE              : Train 7.0688, Val 7.6565, Test 7.5997
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 56: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0988, Val -0.0543, Test -0.0580
          RMSE             : Train 9.5857, Val 10.3841, Test 10.2156
          MAE              : Train 7.0699, Val 7.6440, Test 7.5863
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 57: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0990, Val -0.0540, Test -0.0580
          RMSE             : Train 9.5848, Val 10.3831, Test 10.2156
          MAE              : Train 7.0694, Val 7.6359, Test 7.5797
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 58: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0992, Val -0.0529, Test -0.0560
          RMSE             : Train 9.5837, Val 10.3773, Test 10.2063
          MAE              : Train 7.0674, Val 7.6184, Test 7.5605
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 59: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0992, Val -0.0574, Test -0.0612
          RMSE             : Train 9.5834, Val 10.3996, Test 10.2310
          MAE              : Train 7.0641, Val 7.6651, Test 7.6074
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 60: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.0995, Val -0.0600, Test -0.0640
          RMSE             : Train 9.5816, Val 10.4124, Test 10.2448
          MAE              : Train 7.0663, Val 7.6898, Test 7.6323
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 61: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0996, Val -0.0554, Test -0.0592
          RMSE             : Train 9.5815, Val 10.3896, Test 10.2213
          MAE              : Train 7.0648, Val 7.6383, Test 7.5816
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 62: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0998, Val -0.0553, Test -0.0590
          RMSE             : Train 9.5804, Val 10.3891, Test 10.2205
          MAE              : Train 7.0627, Val 7.6356, Test 7.5781
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 63: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0999, Val -0.0582, Test -0.0619
          RMSE             : Train 9.5798, Val 10.4035, Test 10.2346
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.75it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.74it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.44it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.47it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.30it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.32it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 27.80it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.73it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.50it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.61it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.88it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.35it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.90it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 30.33it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 30.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.47it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.31it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.90it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.13it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 33.06it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.32it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.25it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.40it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.48it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.93it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.38it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.09it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.45it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.75it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 32.92it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.75it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.96it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 32.65it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.30it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.67it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:11,  5.20it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.65it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.02it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.06it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.65it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.35it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.43it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.99it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.62it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.70it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 36.47it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.74it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 45.36it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.00it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.51it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.02it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.09it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.46it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.54it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.53it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 36.31it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 34.26it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.72it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.77it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.63it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 36.27it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.72it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.19it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.10it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.31it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.70it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 18.99it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.43it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.62it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.50it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.90it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.29it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 35.52it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.81it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.57it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.51it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.77it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.05it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.76it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 27.67it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 25.37it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.76it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.99it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.30it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.08it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.22it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.35it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.15it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.09it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.16it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.14it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.03it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 27.65it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.91it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.68it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.30it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.86it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 29.77it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.43it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.72it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.79it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.63it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.18it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.57it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.36it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.04it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 32.79it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.04it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.16it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.74it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.66it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.97it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.73it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.15it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.99it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.81it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.10it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 31.19it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.84it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.65it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.71it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 33.89it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.98it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 28.36it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 22.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.35it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.42it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.36it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 31.60it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.27it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.85it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.16it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.54it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.19it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.28it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.06it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 21.18it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 20.12it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 21.53it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 18.97it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.49it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 16.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 17.50it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.01it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.61it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 27.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.61it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 18.57it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.89it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.13it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.96it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 22.22it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 18.90it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 20.56it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 16.08it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 19.08it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 23.71it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 20.44it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 21.30it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 24.92it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.04it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 32.65it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.80it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 37.05it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 30.38it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.38it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.81it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.05it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.17it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.62it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.69it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.91it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.97it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.95it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.51it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.49it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 22.18it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.92it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 32.23it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.80it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.24it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.38it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.60it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.76it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.14it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.33it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.69it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.06it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 35.87it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.82it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.16it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.14it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 49.16it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 24.65it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.72it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.10it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.25it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 12.26it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.40it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 18.78it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.66it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.84it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.23it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.57it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.89it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.59it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.04it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.62it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.51it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 30.75it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.61it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 33.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 29.24it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.00it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.82it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.85it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:  10%|█         | 6/60 [00:00<00:01, 33.88it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 35.90it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.39it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.39it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.55it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.07it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.09it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.92it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.42it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.09it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.92it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.28it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 31.90it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.23it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.10it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.61it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.74it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 34.65it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.99it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.64it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.32it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 34.51it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.75it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.75it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.66it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.66it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 35.58it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 33.66it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.20it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 30.84it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 34.97it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 36.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.83it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 19.11it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.32it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.32it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 34.26it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.90it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.29it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 29.61it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 33.87it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.15it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.15it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.79it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.77it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 24.93it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 25.63it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.99it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.40it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.62it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.18it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.99it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.92it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.68it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.35it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.45it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.59it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.02it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 34.23it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.79it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 36.00it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.88it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 29.67it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 32.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.08it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.01it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.03it/s]
          MAE              : Train 7.0599, Val 7.6701, Test 7.6123
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 64: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1000, Val -0.0562, Test -0.0598
          RMSE             : Train 9.5791, Val 10.3936, Test 10.2246
          MAE              : Train 7.0632, Val 7.6387, Test 7.5816
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 65: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1001, Val -0.0590, Test -0.0621
          RMSE             : Train 9.5785, Val 10.4073, Test 10.2357
          MAE              : Train 7.0586, Val 7.6638, Test 7.6042
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 66: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1002, Val -0.0558, Test -0.0593
          RMSE             : Train 9.5781, Val 10.3918, Test 10.2218
          MAE              : Train 7.0618, Val 7.6335, Test 7.5763
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 67: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1004, Val -0.0572, Test -0.0604
          RMSE             : Train 9.5769, Val 10.3984, Test 10.2271
          MAE              : Train 7.0584, Val 7.6379, Test 7.5796
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 68: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1006, Val -0.0571, Test -0.0605
          RMSE             : Train 9.5759, Val 10.3983, Test 10.2279
          MAE              : Train 7.0564, Val 7.6402, Test 7.5823
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 69: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1007, Val -0.0598, Test -0.0634
          RMSE             : Train 9.5754, Val 10.4116, Test 10.2416
          MAE              : Train 7.0552, Val 7.6681, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 70: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1008, Val -0.0583, Test -0.0617
          RMSE             : Train 9.5750, Val 10.4041, Test 10.2338
          MAE              : Train 7.0552, Val 7.6557, Test 7.5968
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 71: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1009, Val -0.0624, Test -0.0662
          RMSE             : Train 9.5745, Val 10.4243, Test 10.2554
          MAE              : Train 7.0568, Val 7.6917, Test 7.6327
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 72: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1010, Val -0.0595, Test -0.0630
          RMSE             : Train 9.5737, Val 10.4097, Test 10.2400
          MAE              : Train 7.0527, Val 7.6595, Test 7.6008
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 73: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1012, Val -0.0594, Test -0.0626
          RMSE             : Train 9.5726, Val 10.4095, Test 10.2377
          MAE              : Train 7.0573, Val 7.6568, Test 7.5970
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 74: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1013, Val -0.0610, Test -0.0640
          RMSE             : Train 9.5724, Val 10.4172, Test 10.2444
          MAE              : Train 7.0529, Val 7.6619, Test 7.6011
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 75: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1014, Val -0.0590, Test -0.0619
          RMSE             : Train 9.5716, Val 10.4076, Test 10.2345
          MAE              : Train 7.0492, Val 7.6461, Test 7.5861
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 76: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1015, Val -0.0602, Test -0.0638
          RMSE             : Train 9.5714, Val 10.4132, Test 10.2434
          MAE              : Train 7.0528, Val 7.6567, Test 7.5988
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 77: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1016, Val -0.0627, Test -0.0663
          RMSE             : Train 9.5709, Val 10.4258, Test 10.2557
          MAE              : Train 7.0483, Val 7.6847, Test 7.6253
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 78: Loss:            : Train 0.0116, Val 0.0137, Test 0.0133
          R2_Score         : Train 0.1016, Val -0.0646, Test -0.0681
          RMSE             : Train 9.5704, Val 10.4347, Test 10.2645
          MAE              : Train 7.0529, Val 7.6993, Test 7.6397
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 79: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1017, Val -0.0627, Test -0.0662
          RMSE             : Train 9.5700, Val 10.4257, Test 10.2552
          MAE              : Train 7.0480, Val 7.6771, Test 7.6184
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 80: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1018, Val -0.0599, Test -0.0631
          RMSE             : Train 9.5694, Val 10.4118, Test 10.2402
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.19it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.10it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.99it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.69it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.20it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.73it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.58it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.60it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.65it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.77it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.78it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.34it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.76it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 48.93it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.56it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.53it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.86it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 25.64it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.98it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.35it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.40it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 36.80it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.66it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.49it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.50it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.27it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.98it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.85it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 12.52it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.37it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.12it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.60it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.94it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.13it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.05it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.21it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.73it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.07it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.35it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.30it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.22it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.20it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.76it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.74it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.94it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.32it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.13it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.94it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.73it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.57it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.75it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.45it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.60it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.20it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.59it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.73it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.07it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.71it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.94it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 36.85it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.64it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 23.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.70it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.64it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 28.35it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.87it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.30it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.40it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.72it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.91it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 35.11it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.32it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.62it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.16it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.00it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.03it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.64it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.84it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 28.26it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.01it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.35it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.09it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.78it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.72it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.10it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.54it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.28it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.86it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.26it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.28it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.48it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.17it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.33it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.60it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.47it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.45it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.67it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 34.64it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.09it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.73it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.62it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.03it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.70it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.82it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.06it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.58it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.59it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.74it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 34.46it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.77it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.37it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 15.67it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 23.90it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.44it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.91it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.38it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.68it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.72it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 28.84it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.46it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.63it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 32.94it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 33.92it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.92it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.97it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.95it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.28it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.30it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.50it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.50it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.88it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 33.01it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.61it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 30.73it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.41it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.03it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.28it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.97it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.79it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.11it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.81it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.92it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.83it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 12.70it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.69it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.34it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.61it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 28.93it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.04it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.79it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.48it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.07it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.12it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 34.96it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.72it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.72it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.44it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.57it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.04it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.18it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 34.67it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.26it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.59it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.30it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.13it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.98it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.32it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.47it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.00it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.67it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.11it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 28.82it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 33.18it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 35.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 43.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.71it/s]Train:  10%|█         | 6/60 [00:00<00:01, 29.67it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.85it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.23it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.29it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.03it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.62it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.13it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.78it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.54it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.86it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.59it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.52it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.64it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 14.31it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.55it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.47it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.97it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.97it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.64it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 28.54it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.25it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.06it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.09it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.11it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.17it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 37.12it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.44it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.95it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.52it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.99it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.11it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.92it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.26it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.87it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.28it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.26it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.66it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.54it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 33.48it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.69it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.99it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.24it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.54it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.50it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 28.67it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 22.23it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 26.17it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.45it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.37it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 18.14it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.72it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.71it/s]Train:  40%|████      | 24/60 [00:00<00:01, 28.47it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.29it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.00it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.01it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.06it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.60it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 33.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.43it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 32.16it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 27.57it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 25.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.25it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 14.16it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.57it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.50it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.73it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.94it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.83it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 34.81it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.13it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.32it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.57it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.65it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.56it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.00it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.84it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.34it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.95it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 30.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.51it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.05it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.46it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.49it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.05it/s]Train:  40%|████      | 24/60 [00:00<00:01, 28.52it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.22it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.09it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 33.68it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 32.40it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.85it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.30it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.05it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.56it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.23it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.97it/s]
          MAE              : Train 7.0505, Val 7.6494, Test 7.5900
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 81: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0588, Test -0.0620
          RMSE             : Train 9.5686, Val 10.4064, Test 10.2349
          MAE              : Train 7.0473, Val 7.6350, Test 7.5762
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 82: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1040, Val -0.0620, Test -0.0653
          RMSE             : Train 9.5580, Val 10.4220, Test 10.2509
          MAE              : Train 7.0333, Val 7.6686, Test 7.6089
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 83: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1041, Val -0.0620, Test -0.0654
          RMSE             : Train 9.5574, Val 10.4221, Test 10.2512
          MAE              : Train 7.0382, Val 7.6689, Test 7.6094
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 84: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1041, Val -0.0615, Test -0.0649
          RMSE             : Train 9.5573, Val 10.4197, Test 10.2488
          MAE              : Train 7.0415, Val 7.6631, Test 7.6038
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 85: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1041, Val -0.0612, Test -0.0646
          RMSE             : Train 9.5573, Val 10.4183, Test 10.2477
          MAE              : Train 7.0402, Val 7.6604, Test 7.6015
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 86: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1041, Val -0.0619, Test -0.0653
          RMSE             : Train 9.5572, Val 10.4215, Test 10.2508
          MAE              : Train 7.0383, Val 7.6675, Test 7.6083
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 87: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1041, Val -0.0622, Test -0.0657
          RMSE             : Train 9.5571, Val 10.4231, Test 10.2527
          MAE              : Train 7.0380, Val 7.6699, Test 7.6109
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 88: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1042, Val -0.0621, Test -0.0656
          RMSE             : Train 9.5570, Val 10.4229, Test 10.2524
          MAE              : Train 7.0394, Val 7.6699, Test 7.6108
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 89: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1042, Val -0.0621, Test -0.0656
          RMSE             : Train 9.5570, Val 10.4227, Test 10.2522
          MAE              : Train 7.0385, Val 7.6687, Test 7.6096
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 90: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1042, Val -0.0619, Test -0.0654
          RMSE             : Train 9.5569, Val 10.4219, Test 10.2512
          MAE              : Train 7.0386, Val 7.6671, Test 7.6079
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 91: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1042, Val -0.0623, Test -0.0658
          RMSE             : Train 9.5568, Val 10.4238, Test 10.2533
          MAE              : Train 7.0392, Val 7.6706, Test 7.6114
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 92: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1042, Val -0.0619, Test -0.0654
          RMSE             : Train 9.5567, Val 10.4218, Test 10.2512
          MAE              : Train 7.0393, Val 7.6662, Test 7.6072
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 93: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1042, Val -0.0615, Test -0.0649
          RMSE             : Train 9.5566, Val 10.4200, Test 10.2490
          MAE              : Train 7.0410, Val 7.6620, Test 7.6027
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 94: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1042, Val -0.0616, Test -0.0650
          RMSE             : Train 9.5567, Val 10.4202, Test 10.2496
          MAE              : Train 7.0389, Val 7.6631, Test 7.6041
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 95: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1042, Val -0.0619, Test -0.0653
          RMSE             : Train 9.5566, Val 10.4216, Test 10.2507
          MAE              : Train 7.0388, Val 7.6655, Test 7.6062
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 96: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1043, Val -0.0621, Test -0.0655
          RMSE             : Train 9.5565, Val 10.4226, Test 10.2520
          MAE              : Train 7.0394, Val 7.6666, Test 7.6075
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 97: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1043, Val -0.0623, Test -0.0656
          RMSE             : Train 9.5564, Val 10.4234, Test 10.2526
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.48it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.69it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.74it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.42it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.64it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.74it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 33.03it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.68it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.29it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.74it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.48it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 36.65it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 25.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.83it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.50it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.52it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.98it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 14.89it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 25.83it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.66it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.73it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.83it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.03it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.90it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.77it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.92it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.11it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.96it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.64it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.81it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.62it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.19it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.53it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.90it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.56it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.42it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.04it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.63it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.27it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 30.35it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.13it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.94it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.33it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.17it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.10it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.13it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.12it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 32.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.43it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.10it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.49it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.20it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.55it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.93it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 34.45it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 33.01it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.18it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.86it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.45it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.94it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.62it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.62it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.84it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.36it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 25.71it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.36it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.47it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.96it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.70it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.23it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.64it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.62it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.92it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.46it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.46it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 29.91it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.05it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.18it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.89it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.85it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.85it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.23it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.92it/s]Train:   8%|▊         | 5/60 [00:00<00:04, 13.47it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.36it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.41it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.63it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 31.12it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.43it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.48it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.16it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.32it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 32.08it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 33.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.65it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.61it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.41it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.27it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 25.43it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.04it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.07it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.13it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.66it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.99it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.13it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.79it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.28it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.67it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 32.58it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 37.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.08it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.55it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.85it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.83it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.71it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.49it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.77it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.62it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 26.05it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.98it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.09it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.82it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.13it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.30it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.02it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.42it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 30.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 33.54it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.11it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.10it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 28.59it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 33.07it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.38it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 33.31it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 34.46it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 34.92it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.99it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 34.98it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 37.95it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 35.52it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.73it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.90it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.14it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.17it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 21.54it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.27it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.79it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.10it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 29.55it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.27it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.62it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.23it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.99it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.88it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 28.77it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 35.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.75it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.79it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 19.04it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.11it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.77it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.67it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.01it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.61it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.19it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.04it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.96it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.04it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.36it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.51it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.94it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 38.16it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.55it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 27.56it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 33.01it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.85it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.93it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.56it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 32.09it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.33it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.10it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.52it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.80it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.01it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.62it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.80it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.73it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.25it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.05it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.52it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.82it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.41it/s]Train:  40%|████      | 24/60 [00:00<00:01, 34.54it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.38it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.39it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.24it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.94it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.76it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.09it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.83it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 34.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.30it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.03it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 26.20it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 32.12it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.53it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.11it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.07it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.14it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.22it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.09it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.21it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.40it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.77it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.41it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 28.44it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.23it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.48it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 35.67it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 39.54it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 38.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.83it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 44.19it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 36.85it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 32.72it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.80it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.08it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.13it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 34.60it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.04it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.41it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.16it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.82it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.41it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 31.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.00it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 29.62it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.17it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.97it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.93it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.14it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.95it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.84it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.54it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.02it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.41it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.01it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.38it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.44it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.36it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 48.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.52it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.04it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.99it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.32it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 14.89it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.54it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.91it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.84it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.27it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 28.27it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.64it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.29it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.74it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.47it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.42it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.28it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.37it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.21it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.28it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.32it/s]
          MAE              : Train 7.0370, Val 7.6681, Test 7.6087
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 98: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1043, Val -0.0616, Test -0.0650
          RMSE             : Train 9.5563, Val 10.4203, Test 10.2493
          MAE              : Train 7.0390, Val 7.6619, Test 7.6027
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 99: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1043, Val -0.0619, Test -0.0653
          RMSE             : Train 9.5563, Val 10.4217, Test 10.2509
          MAE              : Train 7.0385, Val 7.6645, Test 7.6051
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 100: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1043, Val -0.0627, Test -0.0662
          RMSE             : Train 9.5563, Val 10.4258, Test 10.2553
          MAE              : Train 7.0370, Val 7.6731, Test 7.6140
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 101: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1043, Val -0.0619, Test -0.0653
          RMSE             : Train 9.5562, Val 10.4217, Test 10.2511
          MAE              : Train 7.0398, Val 7.6639, Test 7.6050
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 102: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1043, Val -0.0624, Test -0.0658
          RMSE             : Train 9.5562, Val 10.4240, Test 10.2532
          MAE              : Train 7.0394, Val 7.6688, Test 7.6095
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 103: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1043, Val -0.0623, Test -0.0657
          RMSE             : Train 9.5561, Val 10.4238, Test 10.2530
          MAE              : Train 7.0371, Val 7.6673, Test 7.6081
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 104: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1044, Val -0.0626, Test -0.0661
          RMSE             : Train 9.5560, Val 10.4253, Test 10.2546
          MAE              : Train 7.0388, Val 7.6703, Test 7.6111
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 105: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1044, Val -0.0624, Test -0.0658
          RMSE             : Train 9.5560, Val 10.4244, Test 10.2535
          MAE              : Train 7.0400, Val 7.6686, Test 7.6091
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 106: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1044, Val -0.0629, Test -0.0663
          RMSE             : Train 9.5558, Val 10.4266, Test 10.2559
          MAE              : Train 7.0371, Val 7.6729, Test 7.6135
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 107: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1044, Val -0.0625, Test -0.0659
          RMSE             : Train 9.5559, Val 10.4246, Test 10.2540
          MAE              : Train 7.0389, Val 7.6691, Test 7.6101
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 108: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1044, Val -0.0621, Test -0.0656
          RMSE             : Train 9.5558, Val 10.4228, Test 10.2522
          MAE              : Train 7.0375, Val 7.6647, Test 7.6056
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 109: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1044, Val -0.0630, Test -0.0664
          RMSE             : Train 9.5557, Val 10.4272, Test 10.2564
          MAE              : Train 7.0373, Val 7.6734, Test 7.6140
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 110: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1044, Val -0.0623, Test -0.0658
          RMSE             : Train 9.5556, Val 10.4238, Test 10.2532
          MAE              : Train 7.0385, Val 7.6665, Test 7.6074
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 111: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1044, Val -0.0628, Test -0.0663
          RMSE             : Train 9.5556, Val 10.4261, Test 10.2556
          MAE              : Train 7.0386, Val 7.6712, Test 7.6121
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 112: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1044, Val -0.0624, Test -0.0658
          RMSE             : Train 9.5555, Val 10.4242, Test 10.2535
          MAE              : Train 7.0383, Val 7.6668, Test 7.6078
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 113: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0625, Test -0.0659
          RMSE             : Train 9.5543, Val 10.4246, Test 10.2539
          MAE              : Train 7.0355, Val 7.6675, Test 7.6084
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 114: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0626, Test -0.0660
          RMSE             : Train 9.5543, Val 10.4250, Test 10.2543
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.47it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.45it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.97it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 34.50it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.16it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.13it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.03it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 34.27it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.42it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.34it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.73it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.66it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 33.85it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 34.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 49.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.93it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 31.30it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.96it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.30it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.34it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.00it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.22it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.49it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.57it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.21it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.83it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.33it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 36.12it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.58it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.86it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.07it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 48.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.94it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.69it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.75it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.93it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.19it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 31.81it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.83it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.84it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.84it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.42it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.85it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.55it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 32.69it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.90it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.51it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.90it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.91it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.29it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.70it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.62it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.71it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.21it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 33.76it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.06it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.44it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.25it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.76it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.45it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.16it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.79it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.93it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.29it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 12.15it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 21.04it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 27.02it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.99it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.16it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.65it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.93it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.37it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.28it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.59it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.45it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.80it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.64it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.39it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 24.85it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.01it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 26.96it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.08it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 18.14it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 22.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.67it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.58it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.22it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.03it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.43it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.71it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.61it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.33it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.59it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.38it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.96it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.43it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.70it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 25.67it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 28.31it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.86it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.98it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.16it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.93it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.16it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 25.60it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.78it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.78it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.83it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.39it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.27it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.09it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.13it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.56it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.24it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.37it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.67it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.93it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 19.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.53it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 30.21it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.03it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.49it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.38it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.14it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.18it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.60it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.76it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.19it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.13it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.01it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 35.92it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 34.60it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.49it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.58it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 36.75it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 48.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.52it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 33.93it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 33.72it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.50it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.77it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 14.93it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.00it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.42it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.06it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.51it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 33.34it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 34.54it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 36.64it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.95it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.81it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 28.87it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.95it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.38it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 30.64it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.71it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.82it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.88it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.41it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.57it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.99it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.04it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.44it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.23it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.23it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.71it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.40it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.64it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 23.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.84it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.33it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.56it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.37it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.69it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.55it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.74it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.77it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.06it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 33.30it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.55it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 36.49it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.91it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.23it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 28.14it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.56it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.37it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.94it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.63it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.36it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 31.59it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.82it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.95it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.90it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.55it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 37.12it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 35.42it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.89it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.75it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 34.84it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.36it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.00it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.70it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 47.28it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.74it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.43it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.61it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.05it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.69it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.29it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.74it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.40it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 36.89it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.10it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.26it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.84it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.36it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.85it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.14it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 30.13it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.43it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.21it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.54it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.65it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.07it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.50it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.31it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 34.51it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.17it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.41it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.08it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 35.13it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.84it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 27.63it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.61it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 31.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.73it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.47it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.32it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.93it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.55it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.36it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.91it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.51it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.82it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 35.54it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 34.11it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.61it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.51it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 35.69it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.44it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.91it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 36.94it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 23.39it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 25.44it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.48it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.20it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.66it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.85it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.17it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.72it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.00it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.87it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.98it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.68it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.47it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.71it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.70it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:02,  7.93it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 22.63it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.95it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 34.28it/s]Train:  20%|██        | 12/60 [00:00<00:01, 31.72it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.57it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.31it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.23it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 35.27it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.78it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.95it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 36.74it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 35.39it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.24it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.47it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.16it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.28it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.16it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.11it/s]
          MAE              : Train 7.0361, Val 7.6684, Test 7.6093
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 115: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0626, Test -0.0660
          RMSE             : Train 9.5543, Val 10.4252, Test 10.2545
          MAE              : Train 7.0365, Val 7.6686, Test 7.6095
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 116: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0626, Test -0.0661
          RMSE             : Train 9.5543, Val 10.4253, Test 10.2546
          MAE              : Train 7.0365, Val 7.6690, Test 7.6098
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 117: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0626, Test -0.0661
          RMSE             : Train 9.5542, Val 10.4254, Test 10.2547
          MAE              : Train 7.0367, Val 7.6689, Test 7.6098
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 118: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0662
          RMSE             : Train 9.5542, Val 10.4258, Test 10.2550
          MAE              : Train 7.0369, Val 7.6697, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 119: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5542, Val 10.4259, Test 10.2552
          MAE              : Train 7.0372, Val 7.6698, Test 7.6106
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 120: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0661
          RMSE             : Train 9.5542, Val 10.4254, Test 10.2547
          MAE              : Train 7.0366, Val 7.6689, Test 7.6097
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 121: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0661
          RMSE             : Train 9.5542, Val 10.4255, Test 10.2547
          MAE              : Train 7.0367, Val 7.6691, Test 7.6098
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 122: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0661
          RMSE             : Train 9.5542, Val 10.4255, Test 10.2547
          MAE              : Train 7.0366, Val 7.6691, Test 7.6098
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 123: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0662
          RMSE             : Train 9.5542, Val 10.4258, Test 10.2551
          MAE              : Train 7.0370, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 124: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5542, Val 10.4259, Test 10.2551
          MAE              : Train 7.0375, Val 7.6698, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 125: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0662
          RMSE             : Train 9.5542, Val 10.4258, Test 10.2550
          MAE              : Train 7.0371, Val 7.6696, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 126: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0662
          RMSE             : Train 9.5542, Val 10.4257, Test 10.2550
          MAE              : Train 7.0370, Val 7.6695, Test 7.6102
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 127: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0661
          RMSE             : Train 9.5542, Val 10.4255, Test 10.2547
          MAE              : Train 7.0363, Val 7.6688, Test 7.6095
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 128: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0662
          RMSE             : Train 9.5542, Val 10.4258, Test 10.2550
          MAE              : Train 7.0365, Val 7.6695, Test 7.6102
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 129: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5542, Val 10.4259, Test 10.2552
          MAE              : Train 7.0373, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 130: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0661
          RMSE             : Train 9.5542, Val 10.4257, Test 10.2549
          MAE              : Train 7.0367, Val 7.6693, Test 7.6100
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 131: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0661
          RMSE             : Train 9.5542, Val 10.4257, Test 10.2549
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.28it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.35it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.17it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.23it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.45it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.09it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.22it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.57it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.76it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 34.02it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 34.32it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 35.44it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.79it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.03it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.76it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.85it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.70it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.17it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.12it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.84it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.61it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.62it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.21it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.23it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 36.06it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 34.13it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 32.74it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.19it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.75it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.72it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.69it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.88it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.86it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 19.08it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.26it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.98it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.81it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.21it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.76it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.14it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.57it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.09it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.27it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 32.78it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 35.24it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.33it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.01it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 30.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 27.31it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 34.97it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 35.23it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.96it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.99it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.12it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.34it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.68it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.55it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.62it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.18it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 35.08it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.45it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.36it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.25it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 32.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.31it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 32.24it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 36.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.48it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.51it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 18.62it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.52it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.54it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.40it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.12it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 25.89it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.55it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.73it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.13it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.23it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.90it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.50it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 32.61it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.92it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.55it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.38it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 28.49it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.86it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 14.15it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 25.09it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 32.54it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.38it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.29it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.76it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 33.01it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.84it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.49it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.93it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.50it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.85it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.66it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.11it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.69it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.57it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.29it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.29it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.37it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.96it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.89it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 35.77it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.47it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.11it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.81it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.35it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.47it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.61it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.92it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.04it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.85it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 25.51it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.24it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.34it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.11it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.69it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.91it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.78it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 35.19it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 35.72it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 38.24it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.27it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.63it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.75it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.45it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.21it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 34.96it/s]Train:  30%|███       | 18/60 [00:00<00:01, 34.07it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.52it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.10it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.33it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 34.16it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.08it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 35.04it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.67it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.70it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 36.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.67it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.08it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.61it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.03it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.36it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.60it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.47it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 34.16it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 37.64it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 35.94it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 34.54it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.86it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.16it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.75it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 35.65it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.48it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.75it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.16it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.97it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.85it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.35it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.35it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.69it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.61it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.48it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 35.15it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.19it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.59it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.30it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.35it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.41it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.96it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.09it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 35.17it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.18it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.70it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.92it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.55it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.99it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.70it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.65it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 28.12it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.35it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.27it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.45it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.31it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.79it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.35it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.39it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.27it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.32it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.09it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.25it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.81it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.16it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.26it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.31it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.76it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.28it/s]Train:  55%|█████▌    | 33/60 [00:00<00:00, 36.10it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.94it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.45it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.51it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.42it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.91it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 15.52it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.95it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.22it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 32.20it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.54it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.70it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.16it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.42it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.53it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.19it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.60it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.52it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.20it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 35.09it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.84it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 37.74it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 24.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.32it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.45it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.72it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.39it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.13it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.73it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.53it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 33.32it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.40it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.09it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.42it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 33.55it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.10it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.02it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.24it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.06it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.43it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.46it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.61it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.07it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.99it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 35.39it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 36.24it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 38.71it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 36.34it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.58it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.68it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.23it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.53it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.54it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.79it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.75it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.55it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.01it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 34.31it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 32.82it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.26it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.27it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.06it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.39it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.30it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.69it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.46it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.15it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.49it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.79it/s]
          MAE              : Train 7.0368, Val 7.6691, Test 7.6098
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 132: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5542, Val 10.4259, Test 10.2552
          MAE              : Train 7.0368, Val 7.6695, Test 7.6103
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 133: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0662
          RMSE             : Train 9.5542, Val 10.4259, Test 10.2551
          MAE              : Train 7.0365, Val 7.6694, Test 7.6101
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 134: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0661
          RMSE             : Train 9.5541, Val 10.4257, Test 10.2550
          MAE              : Train 7.0367, Val 7.6691, Test 7.6098
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 135: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5541, Val 10.4260, Test 10.2552
          MAE              : Train 7.0365, Val 7.6695, Test 7.6102
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 136: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0662
          RMSE             : Train 9.5541, Val 10.4258, Test 10.2551
          MAE              : Train 7.0362, Val 7.6692, Test 7.6099
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 137: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5541, Val 10.4259, Test 10.2552
          MAE              : Train 7.0368, Val 7.6694, Test 7.6101
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 138: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0661
          RMSE             : Train 9.5541, Val 10.4257, Test 10.2549
          MAE              : Train 7.0366, Val 7.6688, Test 7.6095
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 139: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0662
          RMSE             : Train 9.5541, Val 10.4259, Test 10.2551
          MAE              : Train 7.0364, Val 7.6691, Test 7.6099
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 140: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5541, Val 10.4260, Test 10.2553
          MAE              : Train 7.0369, Val 7.6695, Test 7.6102
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 141: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0627, Test -0.0662
          RMSE             : Train 9.5541, Val 10.4259, Test 10.2551
          MAE              : Train 7.0362, Val 7.6691, Test 7.6099
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 142: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0663
          RMSE             : Train 9.5541, Val 10.4262, Test 10.2555
          MAE              : Train 7.0363, Val 7.6699, Test 7.6107
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 143: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5541, Val 10.4261, Test 10.2554
          MAE              : Train 7.0367, Val 7.6698, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 144: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0367, Val 7.6698, Test 7.6106
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 145: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0367, Val 7.6698, Test 7.6106
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 146: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6698, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 147: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 148: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.81it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.37it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.38it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.17it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.49it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 34.21it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.05it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.55it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.68it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.42it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.44it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 35.47it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.77it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.04it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 19.16it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 19.91it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 20.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 22.19it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 38.74it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.18it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.00it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.77it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.16it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 21.81it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.15it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 21.06it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 19.40it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.95it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 21.71it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 22.95it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 19.69it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 17.62it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 23.09it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.57it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  8.33it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.16it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.14it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.31it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.70it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 17.78it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 18.29it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 21.20it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.74it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.27it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.75it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.85it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 21.56it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.17it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 25.27it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 23.33it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.57it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.79it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 32.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.00it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.51it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.85it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.36it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.60it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.48it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.25it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.23it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.41it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 33.00it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.62it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.16it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.35it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.23it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.86it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.49it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 25.04it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.38it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.42it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.38it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 28.46it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 25.58it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.53it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.04it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.49it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 35.26it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 34.88it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 35.71it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 35.75it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 35.61it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 36.34it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.58it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.01it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.42it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.87it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.33it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.35it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.23it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.85it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.81it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.69it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.59it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.20it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.71it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.33it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 48.91it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.29it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.21it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 36.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.38it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.97it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 33.49it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 33.81it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 35.34it/s]Train:  55%|█████▌    | 33/60 [00:00<00:00, 35.69it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 36.25it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 35.93it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.56it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.43it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00,  9.05it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 24.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.79it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.41it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.08it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.13it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.11it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.30it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.40it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 34.08it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 36.80it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.40it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.27it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 34.96it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.27it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.99it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.56it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.41it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.69it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.38it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.53it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.20it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.35it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.07it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.74it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.52it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.10it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.88it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 35.85it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 36.51it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.78it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.71it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.98it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.41it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.43it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.67it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.72it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.19it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 34.61it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 34.74it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.76it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 36.02it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 36.42it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.90it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 35.35it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.94it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.18it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.34it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.72it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.11it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.53it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.04it/s]Train:  30%|███       | 18/60 [00:00<00:01, 32.65it/s]Train:  40%|████      | 24/60 [00:00<00:01, 35.20it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 35.37it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 36.71it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 36.23it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 36.88it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 37.32it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 35.44it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.43it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.65it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.66it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.46it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.78it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.32it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.75it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.03it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.17it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.67it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.63it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.28it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.03it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.22it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.73it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 37.43it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.83it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 22.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.57it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.29it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 36.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.75it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.05it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.85it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 33.61it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 35.36it/s]Train:  55%|█████▌    | 33/60 [00:00<00:00, 36.23it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 36.59it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 36.24it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 36.61it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 36.52it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.44it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.74it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.61it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 38.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.22it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.14it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.27it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.78it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.54it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.95it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 35.36it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 34.85it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 35.88it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 35.68it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 36.68it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 37.11it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.58it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.84it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.49it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.89it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.71it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 21.94it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.52it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.40it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.64it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 34.97it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 35.64it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.92it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 35.00it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 35.88it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 36.31it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 49.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.61it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.12it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.07it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.26it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.55it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.73it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.56it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 32.17it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.71it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.68it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.08it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.54it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 35.31it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 35.12it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 35.35it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 35.78it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.22it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.77it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.83it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.65it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.71it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.41it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.73it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.42it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.91it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.19it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 34.31it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 37.34it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.69it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.35it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.12it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.98it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 36.72it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.18it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.30it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.62it/s]
          MAE              : Train 7.0366, Val 7.6696, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 149: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 150: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 151: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 152: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6698, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 153: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 154: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 155: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 156: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4262, Test 10.2554
          MAE              : Train 7.0366, Val 7.6698, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 157: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 158: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 159: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4262, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 160: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5540, Val 10.4262, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 161: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 162: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4262, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 163: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 164: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4262, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 165: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4262, Test 10.2554
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.37it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.44it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.40it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.79it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.47it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 34.36it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.56it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.72it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.40it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.26it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.06it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 28.68it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.94it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 21.03it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.02it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.82it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.06it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 31.27it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.64it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.80it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.86it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 32.22it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 33.46it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 34.52it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 35.14it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.71it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.52it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.36it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 46.41it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.36it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.50it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.49it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.85it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.69it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.37it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.47it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.21it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 34.20it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 34.22it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 35.04it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.17it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 35.60it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 35.50it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.77it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.60it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.98it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.07it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.71it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 25.92it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.81it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.52it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.89it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 33.91it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.88it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 35.32it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 36.13it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.79it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.34it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.88it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 26.08it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.66it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.25it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.95it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.81it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.87it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.20it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.57it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 34.29it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 35.36it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 35.51it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 35.70it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 38.23it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 36.68it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.99it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.85it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.70it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.11it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.13it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.26it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.04it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.17it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.16it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.59it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.27it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.75it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.10it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 34.12it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 35.17it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 36.05it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 38.28it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.83it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.63it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.64it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.02it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 20.43it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 34.81it/s]Train:  20%|██        | 12/60 [00:00<00:01, 33.06it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.72it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.15it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.02it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.81it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.86it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.87it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.58it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.80it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.98it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.87it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 19.25it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 21.36it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.51it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.43it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.62it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.27it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.87it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.36it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.28it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.62it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.33it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.74it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.61it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 34.28it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.86it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.53it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 36.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 46.21it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.93it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 36.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.65it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.68it/s]Train:  10%|█         | 6/60 [00:00<00:01, 29.86it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 31.13it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.25it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.78it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.72it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 34.60it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 35.84it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 38.73it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 36.29it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.79it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.26it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.99it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.98it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 30.83it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.86it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.68it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 30.73it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.96it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.72it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.13it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.63it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.76it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.93it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.28it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.20it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.78it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.78it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.90it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.33it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 30.89it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.44it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.38it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.77it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.34it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 34.35it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 35.40it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 35.95it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 35.90it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.36it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.65it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.02it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 21.60it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 23.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.65it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:12,  4.54it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.99it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 18.16it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 17.90it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.60it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 19.22it/s]Train:  40%|████      | 24/60 [00:01<00:01, 19.18it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.20it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.94it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 20.64it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 22.25it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 26.99it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.77it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 22.72it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.36it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.08it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.86it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.24it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 32.82it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.92it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.65it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.03it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.22it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.73it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.90it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.25it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.20it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.63it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.34it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.96it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 30.33it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.15it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.69it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.83it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.06it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.34it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.68it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.65it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.97it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.73it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.22it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.07it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.63it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.22it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.02it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.50it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.90it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.68it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.06it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.76it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.84it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.16it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 36.13it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 35.22it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.66it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 35.40it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 35.22it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 38.64it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 36.51it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 35.08it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.68it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.74it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.90it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.11it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 31.72it/s]Train:  20%|██        | 12/60 [00:00<00:01, 31.94it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.15it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.13it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.97it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 34.90it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.79it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 35.57it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 35.50it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 36.23it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 38.99it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.98it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.36it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.84it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.62it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.18it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.87it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.53it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.77it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.00it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.65it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.55it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.09it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 34.07it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.94it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 36.87it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.53it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.85it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 19.33it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 20.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.53it/s]
          MAE              : Train 7.0366, Val 7.6697, Test 7.6105
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 166: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4262, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 167: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4262, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 168: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4262, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 169: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4262, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 170: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4262, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 171: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6696, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 172: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4262, Test 10.2554
          MAE              : Train 7.0366, Val 7.6698, Test 7.6106
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 173: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0366, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 174: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 175: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 176: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 177: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 178: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 179: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 180: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 181: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 182: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:11,  5.29it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 20.20it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 18.10it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.04it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.03it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.86it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.90it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.74it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 27.21it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 23.96it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.99it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 21.97it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 26.99it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.07it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.55it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 35.47it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.00it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.16it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.27it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.92it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 31.05it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.45it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.05it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.82it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.99it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.08it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.27it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 34.03it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.81it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.18it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.42it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.63it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.57it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.02it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.63it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.95it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.70it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.40it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 33.11it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 34.13it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 35.23it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 35.41it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 35.01it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 34.83it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.35it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.89it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.02it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.49it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.84it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.57it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.57it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 33.81it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.65it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.21it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 33.29it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 34.41it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 35.97it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 36.25it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 35.72it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 35.66it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.58it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.91it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 35.74it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.50it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.10it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 26.72it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.06it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.08it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 34.86it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.83it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.28it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 34.04it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.23it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 38.41it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 36.32it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 34.64it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 33.57it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.17it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.04it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.84it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.13it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.47it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.39it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.85it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.10it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.83it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.72it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.87it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 34.67it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 35.69it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 36.00it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 35.54it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 35.49it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.92it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 31.84it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.87it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.29it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.88it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.91it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.44it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.24it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.00it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 33.79it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 34.89it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 38.20it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 36.50it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 35.10it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 35.17it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.35it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.68it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 22.05it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.40it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 35.90it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 34.85it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.10it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 30.18it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.38it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.77it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.42it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.06it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 33.08it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.99it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.78it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.11it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.96it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.45it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.75it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.96it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.49it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.21it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.15it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.86it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.42it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.15it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.94it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.12it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.79it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.01it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 34.19it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.12it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.93it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.67it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.59it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.32it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 30.42it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.50it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.43it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.66it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.25it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.96it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.18it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.87it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 36.84it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.12it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.61it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.81it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.22it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.29it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.15it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.97it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.05it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 30.48it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 32.41it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 34.55it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 34.76it/s]Train:  55%|█████▌    | 33/60 [00:00<00:00, 35.98it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 36.66it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 36.53it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 35.49it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 36.08it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.02it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 29.05it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.23it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.92it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.84it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.97it/s]Train:  20%|██        | 12/60 [00:00<00:01, 31.17it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.46it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.51it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 35.05it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 35.87it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 38.34it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 36.60it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 35.52it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.88it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 35.96it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.44it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.40it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.87it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.21it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.98it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 30.75it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 31.57it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 32.38it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.64it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.65it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.75it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 36.02it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 35.74it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 35.74it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 36.58it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 37.63it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 49.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.85it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.42it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.28it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.68it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.59it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.49it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.55it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.14it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.23it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 33.87it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 34.57it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 35.02it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.73it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.82it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.42it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.35it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.74it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.97it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.31it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.12it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.97it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.41it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.24it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.43it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 34.05it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 34.58it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.42it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.01it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.37it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.49it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.17it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.92it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.25it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.56it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 25.10it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.62it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.94it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.39it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.78it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 35.77it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 34.53it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.64it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 34.54it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.32it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.78it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.05it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.11it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 37.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.16it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.25it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.24it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.67it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 33.77it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 34.22it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 35.60it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 36.53it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 35.16it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 34.23it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.12it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.92it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.27it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.17it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.32it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.36it/s]
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 183: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 184: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 185: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 186: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 187: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 188: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 189: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 190: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 191: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 192: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 193: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 194: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 195: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 196: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 197: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 198: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 199: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.31it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.69it/s]Train:  20%|██        | 12/60 [00:00<00:01, 31.20it/s]Train:  30%|███       | 18/60 [00:00<00:01, 34.37it/s]Train:  40%|████      | 24/60 [00:00<00:01, 35.77it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.53it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 34.12it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 35.11it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 35.82it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 36.05it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 35.86it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.64it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.76it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.76it/s]

          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
Epoch 200: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1047, Val -0.0628, Test -0.0662
          RMSE             : Train 9.5539, Val 10.4261, Test 10.2554
          MAE              : Train 7.0365, Val 7.6697, Test 7.6104
Best:
          R2_Score         : Train 0.0406, Val -0.0250, Test -0.0271
          RMSE             : Train 9.8902, Val 10.2390, Test 10.0654
          MAE              : Train 7.3314, Val 7.5315, Test 7.4764
