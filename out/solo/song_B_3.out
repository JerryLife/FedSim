  0%|          | 0/244489 [00:00<?, ?it/s]  0%|          | 272/244489 [00:00<01:30, 2703.32it/s]  0%|          | 748/244489 [00:00<01:02, 3907.80it/s]  1%|          | 1291/244489 [00:00<00:52, 4597.81it/s]  1%|          | 1924/244489 [00:00<00:45, 5279.88it/s]  1%|          | 2605/244489 [00:00<00:41, 5828.71it/s]  1%|▏         | 3270/244489 [00:00<00:39, 6087.07it/s]  2%|▏         | 3879/244489 [00:00<00:39, 6084.39it/s]  2%|▏         | 4513/244489 [00:00<00:38, 6159.88it/s]  2%|▏         | 5146/244489 [00:00<00:38, 6211.46it/s]  2%|▏         | 5777/244489 [00:01<00:38, 6238.96it/s]  3%|▎         | 6401/244489 [00:01<00:38, 6214.23it/s]  3%|▎         | 7033/244489 [00:01<00:38, 6244.41it/s]  3%|▎         | 7658/244489 [00:01<00:38, 6195.49it/s]  3%|▎         | 8289/244489 [00:01<00:37, 6227.87it/s]  4%|▎         | 8912/244489 [00:01<00:38, 6176.55it/s]  4%|▍         | 9530/244489 [00:01<00:38, 6162.66it/s]  4%|▍         | 10191/244489 [00:01<00:37, 6293.48it/s]  4%|▍         | 10854/244489 [00:01<00:36, 6393.07it/s]  5%|▍         | 11494/244489 [00:01<00:36, 6348.57it/s]  5%|▍         | 12130/244489 [00:02<00:37, 6242.63it/s]  5%|▌         | 12755/244489 [00:02<00:37, 6197.53it/s]  5%|▌         | 13382/244489 [00:02<00:37, 6216.97it/s]  6%|▌         | 14032/244489 [00:02<00:36, 6300.49it/s]  6%|▌         | 14663/244489 [00:02<00:47, 4834.02it/s]  6%|▌         | 15198/244489 [00:02<00:51, 4417.42it/s]  6%|▋         | 15680/244489 [00:03<01:23, 2728.68it/s]  7%|▋         | 16056/244489 [00:03<01:58, 1926.94it/s]  7%|▋         | 16716/244489 [00:03<01:28, 2576.82it/s]  7%|▋         | 17364/244489 [00:03<01:10, 3223.88it/s]  7%|▋         | 18072/244489 [00:03<00:57, 3957.10it/s]  8%|▊         | 18697/244489 [00:03<00:50, 4448.58it/s]  8%|▊         | 19390/244489 [00:03<00:44, 5029.90it/s]  8%|▊         | 20062/244489 [00:04<00:41, 5453.84it/s]  8%|▊         | 20765/244489 [00:04<00:38, 5868.10it/s]  9%|▉         | 21414/244489 [00:04<00:37, 5956.57it/s]  9%|▉         | 22128/244489 [00:04<00:35, 6251.20it/s]  9%|▉         | 22786/244489 [00:04<00:35, 6312.43it/s] 10%|▉         | 23494/244489 [00:04<00:33, 6529.44it/s] 10%|▉         | 24164/244489 [00:04<00:33, 6501.31it/s] 10%|█         | 24861/244489 [00:04<00:33, 6636.80it/s] 10%|█         | 25550/244489 [00:04<00:32, 6710.73it/s] 11%|█         | 26228/244489 [00:04<00:33, 6572.52it/s] 11%|█         | 26891/244489 [00:05<00:33, 6426.73it/s] 11%|█▏        | 27538/244489 [00:05<00:34, 6373.99it/s] 12%|█▏        | 28193/244489 [00:05<00:33, 6423.05it/s] 12%|█▏        | 28901/244489 [00:05<00:32, 6589.03it/s] 12%|█▏        | 29609/244489 [00:05<00:31, 6719.63it/s] 12%|█▏        | 30347/244489 [00:05<00:30, 6911.03it/s] 13%|█▎        | 31099/244489 [00:05<00:30, 7076.84it/s] 13%|█▎        | 31906/244489 [00:05<00:28, 7360.41it/s] 13%|█▎        | 32666/244489 [00:05<00:28, 7431.47it/s] 14%|█▎        | 33453/244489 [00:05<00:27, 7562.04it/s] 14%|█▍        | 34269/244489 [00:06<00:27, 7739.75it/s] 14%|█▍        | 35090/244489 [00:06<00:26, 7876.16it/s] 15%|█▍        | 35878/244489 [00:06<00:30, 6912.24it/s] 15%|█▍        | 36591/244489 [00:06<00:32, 6453.30it/s] 15%|█▌        | 37401/244489 [00:06<00:30, 6881.06it/s] 16%|█▌        | 38108/244489 [00:06<00:31, 6539.60it/s] 16%|█▌        | 38777/244489 [00:06<00:34, 6041.79it/s] 16%|█▌        | 39396/244489 [00:06<00:34, 5970.69it/s] 16%|█▋        | 40003/244489 [00:07<00:35, 5760.93it/s] 17%|█▋        | 40586/244489 [00:07<00:36, 5547.33it/s] 17%|█▋        | 41146/244489 [00:07<00:37, 5489.44it/s] 17%|█▋        | 41698/244489 [00:07<00:37, 5433.56it/s] 17%|█▋        | 42243/244489 [00:07<00:37, 5410.15it/s] 18%|█▊        | 42789/244489 [00:07<00:37, 5422.76it/s] 18%|█▊        | 43375/244489 [00:07<00:36, 5532.58it/s] 18%|█▊        | 43930/244489 [00:07<00:36, 5477.97it/s] 18%|█▊        | 44491/244489 [00:07<00:36, 5515.86it/s] 18%|█▊        | 45044/244489 [00:07<00:36, 5492.88it/s] 19%|█▊        | 45609/244489 [00:08<00:35, 5538.19it/s] 19%|█▉        | 46164/244489 [00:08<00:36, 5426.63it/s] 19%|█▉        | 46708/244489 [00:08<00:37, 5279.04it/s] 19%|█▉        | 47237/244489 [00:08<00:37, 5195.69it/s] 20%|█▉        | 47758/244489 [00:08<00:38, 5063.75it/s] 20%|█▉        | 48290/244489 [00:08<00:38, 5137.00it/s] 20%|█▉        | 48816/244489 [00:08<00:37, 5171.01it/s] 20%|██        | 49334/244489 [00:08<00:37, 5150.93it/s] 20%|██        | 49850/244489 [00:08<00:43, 4505.14it/s] 21%|██        | 50570/244489 [00:09<00:37, 5228.46it/s] 21%|██        | 51378/244489 [00:09<00:32, 6018.09it/s] 21%|██▏       | 52201/244489 [00:09<00:28, 6643.33it/s] 22%|██▏       | 52883/244489 [00:09<00:59, 3218.56it/s] 22%|██▏       | 53404/244489 [00:10<01:59, 1597.84it/s] 22%|██▏       | 53787/244489 [00:10<01:59, 1591.74it/s] 22%|██▏       | 54102/244489 [00:10<01:56, 1638.66it/s] 22%|██▏       | 54379/244489 [00:11<01:56, 1627.52it/s] 23%|██▎       | 55399/244489 [00:11<01:06, 2832.29it/s] 23%|██▎       | 55997/244489 [00:11<00:56, 3358.42it/s] 23%|██▎       | 56587/244489 [00:11<00:48, 3848.42it/s] 23%|██▎       | 57166/244489 [00:11<00:43, 4266.38it/s] 24%|██▎       | 57762/244489 [00:11<00:40, 4665.24it/s] 24%|██▍       | 58349/244489 [00:11<00:37, 4967.12it/s] 24%|██▍       | 58957/244489 [00:11<00:35, 5261.45it/s] 24%|██▍       | 59571/244489 [00:11<00:33, 5501.75it/s] 25%|██▍       | 60201/244489 [00:12<00:32, 5724.99it/s] 25%|██▍       | 60814/244489 [00:12<00:31, 5840.02it/s] 25%|██▌       | 61420/244489 [00:12<00:31, 5877.82it/s] 25%|██▌       | 62056/244489 [00:12<00:30, 6017.27it/s] 26%|██▌       | 62735/244489 [00:12<00:29, 6220.97it/s] 26%|██▌       | 63406/244489 [00:12<00:28, 6364.98it/s] 26%|██▌       | 64092/244489 [00:12<00:27, 6510.36it/s] 27%|██▋       | 64795/244489 [00:12<00:26, 6661.73it/s] 27%|██▋       | 65569/244489 [00:12<00:25, 6981.28it/s] 27%|██▋       | 66270/244489 [00:12<00:26, 6803.37it/s] 27%|██▋       | 67078/244489 [00:13<00:24, 7176.41it/s] 28%|██▊       | 67880/244489 [00:13<00:23, 7424.43it/s] 28%|██▊       | 68638/244489 [00:13<00:23, 7469.03it/s] 28%|██▊       | 69403/244489 [00:13<00:23, 7520.38it/s] 29%|██▊       | 70180/244489 [00:13<00:22, 7593.90it/s] 29%|██▉       | 71015/244489 [00:13<00:22, 7818.21it/s] 29%|██▉       | 71832/244489 [00:13<00:21, 7922.72it/s] 30%|██▉       | 72625/244489 [00:13<00:22, 7533.03it/s] 30%|███       | 73446/244489 [00:13<00:22, 7725.10it/s] 30%|███       | 74223/244489 [00:14<00:24, 6987.87it/s] 31%|███       | 74937/244489 [00:14<00:24, 6899.44it/s] 31%|███       | 75638/244489 [00:14<00:24, 6911.27it/s] 31%|███       | 76337/244489 [00:14<00:26, 6266.48it/s] 31%|███▏      | 76979/244489 [00:14<00:29, 5763.06it/s] 32%|███▏      | 77571/244489 [00:14<00:30, 5420.78it/s] 32%|███▏      | 78125/244489 [00:14<00:31, 5262.52it/s] 32%|███▏      | 78721/244489 [00:14<00:30, 5442.43it/s] 32%|███▏      | 79273/244489 [00:15<00:37, 4400.45it/s] 33%|███▎      | 79756/244489 [00:15<00:36, 4502.49it/s] 33%|███▎      | 80352/244489 [00:15<00:33, 4871.79it/s] 33%|███▎      | 80865/244489 [00:15<00:33, 4824.16it/s] 33%|███▎      | 81365/244489 [00:15<00:36, 4486.94it/s] 33%|███▎      | 81829/244489 [00:15<00:39, 4167.46it/s] 34%|███▎      | 82377/244489 [00:15<00:36, 4500.08it/s] 34%|███▍      | 82842/244489 [00:15<00:38, 4245.72it/s] 34%|███▍      | 83310/244489 [00:15<00:36, 4359.11it/s] 34%|███▍      | 83756/244489 [00:16<00:36, 4382.37it/s] 34%|███▍      | 84239/244489 [00:16<00:35, 4504.39it/s] 35%|███▍      | 84696/244489 [00:16<00:38, 4117.43it/s] 35%|███▍      | 85118/244489 [00:16<00:43, 3681.30it/s] 35%|███▌      | 85746/244489 [00:16<00:36, 4345.25it/s] 35%|███▌      | 86287/244489 [00:16<00:34, 4630.21it/s] 35%|███▌      | 86768/244489 [00:16<00:35, 4415.13it/s] 36%|███▌      | 87248/244489 [00:16<00:34, 4519.22it/s] 36%|███▌      | 87714/244489 [00:16<00:34, 4557.48it/s] 36%|███▌      | 88178/244489 [00:17<00:34, 4533.57it/s] 36%|███▋      | 88684/244489 [00:17<00:33, 4668.44it/s] 36%|███▋      | 89156/244489 [00:17<00:33, 4616.59it/s] 37%|███▋      | 89642/244489 [00:17<00:33, 4686.78it/s] 37%|███▋      | 90113/244489 [00:17<00:33, 4584.25it/s] 37%|███▋      | 90574/244489 [00:17<00:33, 4538.58it/s] 37%|███▋      | 91076/244489 [00:17<00:32, 4677.04it/s] 37%|███▋      | 91554/244489 [00:17<00:32, 4689.61it/s] 38%|███▊      | 92024/244489 [00:17<00:32, 4682.29it/s] 38%|███▊      | 92572/244489 [00:17<00:31, 4894.36it/s] 38%|███▊      | 93062/244489 [00:18<00:31, 4817.62it/s] 38%|███▊      | 93551/244489 [00:18<00:31, 4831.19it/s] 38%|███▊      | 94082/244489 [00:18<00:30, 4970.88it/s] 39%|███▊      | 94580/244489 [00:18<00:31, 4801.95it/s] 39%|███▉      | 95182/244489 [00:18<00:29, 5131.33it/s] 39%|███▉      | 95863/244489 [00:18<00:26, 5619.88it/s] 39%|███▉      | 96564/244489 [00:18<00:24, 6028.69it/s] 40%|███▉      | 97292/244489 [00:18<00:23, 6398.32it/s] 40%|████      | 97935/244489 [00:18<00:23, 6127.37it/s] 40%|████      | 98666/244489 [00:18<00:22, 6467.81it/s] 41%|████      | 99317/244489 [00:19<00:23, 6289.71it/s] 41%|████      | 99950/244489 [00:19<00:26, 5522.57it/s] 41%|████      | 100521/244489 [00:19<00:42, 3373.99it/s] 41%|████▏     | 100970/244489 [00:19<00:41, 3444.28it/s] 42%|████▏     | 101811/244489 [00:19<00:32, 4456.78it/s] 42%|████▏     | 102444/244489 [00:19<00:29, 4878.24it/s] 42%|████▏     | 103019/244489 [00:20<00:45, 3103.92it/s] 42%|████▏     | 103469/244489 [00:20<00:51, 2732.82it/s] 43%|████▎     | 104035/244489 [00:20<00:43, 3228.92it/s] 43%|████▎     | 104572/244489 [00:20<00:38, 3645.87it/s] 43%|████▎     | 105058/244489 [00:20<00:35, 3909.17it/s] 43%|████▎     | 105528/244489 [00:20<00:34, 4073.70it/s] 43%|████▎     | 105999/244489 [00:21<00:32, 4232.64it/s] 44%|████▎     | 106467/244489 [00:21<00:32, 4305.42it/s] 44%|████▎     | 106958/244489 [00:21<00:30, 4469.67it/s] 44%|████▍     | 107598/244489 [00:21<00:27, 5008.94it/s] 44%|████▍     | 108251/244489 [00:21<00:25, 5441.40it/s] 45%|████▍     | 108882/244489 [00:21<00:23, 5690.82it/s] 45%|████▍     | 109496/244489 [00:21<00:23, 5819.22it/s] 45%|████▌     | 110140/244489 [00:21<00:22, 5999.65it/s] 45%|████▌     | 110802/244489 [00:21<00:21, 6182.76it/s] 46%|████▌     | 111449/244489 [00:21<00:21, 6265.50it/s] 46%|████▌     | 112090/244489 [00:22<00:20, 6307.78it/s] 46%|████▌     | 112757/244489 [00:22<00:20, 6413.91it/s] 46%|████▋     | 113425/244489 [00:22<00:20, 6491.34it/s] 47%|████▋     | 114076/244489 [00:22<00:20, 6398.64it/s] 47%|████▋     | 114718/244489 [00:22<00:20, 6401.11it/s] 47%|████▋     | 115359/244489 [00:22<00:20, 6372.69it/s] 47%|████▋     | 115997/244489 [00:22<00:20, 6217.76it/s] 48%|████▊     | 116684/244489 [00:22<00:19, 6407.77it/s] 48%|████▊     | 117468/244489 [00:22<00:18, 6828.74it/s] 48%|████▊     | 118274/244489 [00:22<00:17, 7191.40it/s] 50%|████▉     | 122069/244489 [00:23<00:07, 16337.24it/s] 51%|█████     | 123712/244489 [00:23<00:09, 12837.56it/s] 51%|█████     | 125119/244489 [00:23<00:11, 10775.18it/s] 52%|█████▏    | 126329/244489 [00:23<00:12, 9760.51it/s]  52%|█████▏    | 127404/244489 [00:23<00:12, 9192.01it/s] 53%|█████▎    | 128389/244489 [00:23<00:13, 8706.16it/s] 53%|█████▎    | 129302/244489 [00:23<00:13, 8346.62it/s] 53%|█████▎    | 130163/244489 [00:24<00:14, 7994.25it/s] 54%|█████▎    | 130978/244489 [00:24<00:14, 7737.58it/s] 54%|█████▍    | 131760/244489 [00:24<00:15, 7153.90it/s] 54%|█████▍    | 132483/244489 [00:24<00:15, 7094.10it/s] 54%|█████▍    | 133197/244489 [00:24<00:17, 6506.45it/s] 55%|█████▍    | 133855/244489 [00:24<00:22, 4851.97it/s] 55%|█████▍    | 134400/244489 [00:24<00:22, 4893.40it/s] 55%|█████▌    | 134932/244489 [00:25<00:24, 4455.91it/s] 55%|█████▌    | 135520/244489 [00:25<00:22, 4777.14it/s] 56%|█████▌    | 136092/244489 [00:25<00:21, 5007.47it/s] 56%|█████▌    | 136636/244489 [00:25<00:21, 5117.49it/s] 56%|█████▌    | 137172/244489 [00:25<00:20, 5180.98it/s] 56%|█████▋    | 137774/244489 [00:25<00:19, 5411.71it/s] 57%|█████▋    | 138378/244489 [00:25<00:18, 5588.84it/s] 57%|█████▋    | 138964/244489 [00:25<00:18, 5666.14it/s] 57%|█████▋    | 139538/244489 [00:25<00:18, 5529.79it/s] 57%|█████▋    | 140097/244489 [00:25<00:19, 5452.74it/s] 58%|█████▊    | 140647/244489 [00:26<00:19, 5391.89it/s] 58%|█████▊    | 141212/244489 [00:26<00:18, 5463.91it/s] 58%|█████▊    | 141764/244489 [00:26<00:18, 5478.20it/s] 58%|█████▊    | 142360/244489 [00:26<00:18, 5612.30it/s] 58%|█████▊    | 142923/244489 [00:26<00:18, 5611.89it/s] 59%|█████▊    | 143486/244489 [00:26<00:18, 5552.58it/s] 59%|█████▉    | 144042/244489 [00:26<00:19, 5167.72it/s] 59%|█████▉    | 144565/244489 [00:26<00:20, 4950.31it/s] 59%|█████▉    | 145065/244489 [00:26<00:20, 4900.98it/s] 60%|█████▉    | 145714/244489 [00:27<00:18, 5346.96it/s] 60%|█████▉    | 146488/244489 [00:27<00:16, 6032.35it/s] 60%|██████    | 147232/244489 [00:27<00:15, 6437.45it/s] 60%|██████    | 147913/244489 [00:27<00:14, 6543.53it/s] 61%|██████    | 148633/244489 [00:27<00:14, 6735.23it/s] 61%|██████    | 149325/244489 [00:27<00:14, 6788.83it/s] 63%|██████▎   | 153584/244489 [00:27<00:05, 17423.14it/s] 65%|██████▍   | 157839/244489 [00:27<00:03, 24909.66it/s] 66%|██████▋   | 162063/244489 [00:27<00:02, 30080.90it/s] 68%|██████▊   | 166317/244489 [00:27<00:02, 33802.31it/s] 70%|██████▉   | 170919/244489 [00:28<00:01, 37456.87it/s] 72%|███████▏  | 175416/244489 [00:28<00:01, 39705.08it/s] 73%|███████▎  | 179466/244489 [00:28<00:01, 39912.71it/s] 75%|███████▌  | 183811/244489 [00:28<00:01, 40942.88it/s] 77%|███████▋  | 187908/244489 [00:28<00:01, 36098.95it/s] 78%|███████▊  | 191625/244489 [00:29<00:03, 17307.01it/s] 80%|███████▉  | 194449/244489 [00:29<00:04, 12426.86it/s] 80%|████████  | 196619/244489 [00:29<00:04, 10414.03it/s] 81%|████████  | 198329/244489 [00:30<00:04, 9278.40it/s]  82%|████████▏ | 199715/244489 [00:30<00:05, 8538.24it/s] 82%|████████▏ | 200872/244489 [00:30<00:05, 8084.44it/s] 83%|████████▎ | 201876/244489 [00:30<00:05, 7712.99it/s] 83%|████████▎ | 202770/244489 [00:30<00:06, 6786.69it/s] 83%|████████▎ | 203529/244489 [00:31<00:06, 5945.44it/s] 84%|████████▎ | 204175/244489 [00:31<00:07, 5369.37it/s] 84%|████████▎ | 204740/244489 [00:31<00:08, 4946.53it/s] 84%|████████▍ | 205246/244489 [00:31<00:08, 4609.95it/s] 84%|████████▍ | 205708/244489 [00:31<00:09, 4252.64it/s] 84%|████████▍ | 206129/244489 [00:31<00:09, 4072.14it/s] 85%|████████▍ | 206611/244489 [00:31<00:08, 4237.42it/s] 85%|████████▍ | 207175/244489 [00:31<00:08, 4574.48it/s] 85%|████████▍ | 207738/244489 [00:32<00:07, 4843.16it/s] 85%|████████▌ | 208297/244489 [00:32<00:07, 5042.75it/s] 85%|████████▌ | 209002/244489 [00:32<00:06, 5597.73it/s] 86%|████████▌ | 210497/244489 [00:32<00:04, 8245.56it/s] 87%|████████▋ | 211504/244489 [00:32<00:03, 8766.39it/s] 87%|████████▋ | 212493/244489 [00:32<00:03, 9091.88it/s] 87%|████████▋ | 213781/244489 [00:32<00:03, 10199.87it/s] 88%|████████▊ | 214813/244489 [00:32<00:03, 9492.46it/s]  88%|████████▊ | 215789/244489 [00:32<00:02, 9567.16it/s] 89%|████████▊ | 216780/244489 [00:32<00:02, 9664.20it/s] 89%|████████▉ | 217805/244489 [00:33<00:02, 9833.09it/s] 90%|████████▉ | 218970/244489 [00:33<00:02, 10362.11it/s] 90%|█████████ | 220110/244489 [00:33<00:02, 10667.88it/s] 91%|█████████ | 221334/244489 [00:33<00:02, 11132.88it/s] 91%|█████████ | 222723/244489 [00:33<00:01, 11951.67it/s] 92%|█████████▏| 224083/244489 [00:33<00:01, 12442.14it/s] 92%|█████████▏| 225631/244489 [00:33<00:01, 13348.13it/s] 93%|█████████▎| 227068/244489 [00:33<00:01, 13652.09it/s] 94%|█████████▎| 228598/244489 [00:33<00:01, 14144.24it/s] 94%|█████████▍| 230141/244489 [00:33<00:00, 14527.82it/s] 95%|█████████▍| 231595/244489 [00:34<00:00, 14326.99it/s] 95%|█████████▌| 233210/244489 [00:34<00:00, 14866.85it/s] 96%|█████████▌| 234699/244489 [00:34<00:00, 14506.89it/s] 97%|█████████▋| 236292/244489 [00:34<00:00, 14923.27it/s] 97%|█████████▋| 237788/244489 [00:34<00:00, 14711.75it/s] 98%|█████████▊| 239344/244489 [00:34<00:00, 14958.78it/s] 99%|█████████▊| 240891/244489 [00:34<00:00, 15109.54it/s] 99%|█████████▉| 242404/244489 [00:34<00:00, 14724.86it/s]100%|█████████▉| 243880/244489 [00:34<00:00, 14570.87it/s]100%|██████████| 244489/244489 [00:34<00:00, 6995.64it/s] 
  0%|          | 0/34927 [00:00<?, ?it/s]  4%|▍         | 1439/34927 [00:00<00:02, 14384.87it/s]  8%|▊         | 2943/34927 [00:00<00:02, 14767.31it/s] 13%|█▎        | 4656/34927 [00:00<00:01, 15845.52it/s] 19%|█▉        | 6626/34927 [00:00<00:01, 17366.73it/s] 24%|██▍       | 8508/34927 [00:00<00:01, 17890.35it/s] 30%|███       | 10507/34927 [00:00<00:01, 18602.49it/s] 36%|███▌      | 12466/34927 [00:00<00:01, 18923.10it/s] 41%|████▏     | 14451/34927 [00:00<00:01, 19215.74it/s] 47%|████▋     | 16373/34927 [00:00<00:00, 19188.35it/s] 53%|█████▎    | 18359/34927 [00:01<00:00, 19393.54it/s] 58%|█████▊    | 20299/34927 [00:01<00:00, 18743.56it/s] 64%|██████▍   | 22371/34927 [00:01<00:00, 19328.17it/s] 70%|██████▉   | 24391/34927 [00:01<00:00, 19586.60it/s] 75%|███████▌  | 26354/34927 [00:01<00:00, 19566.27it/s] 81%|████████  | 28337/34927 [00:01<00:00, 19644.30it/s] 87%|████████▋ | 30304/34927 [00:01<00:00, 19199.30it/s] 92%|█████████▏| 32283/34927 [00:01<00:00, 19367.86it/s] 98%|█████████▊| 34223/34927 [00:01<00:00, 19209.83it/s]100%|██████████| 34927/34927 [00:01<00:00, 18732.67it/s]
  0%|          | 0/69854 [00:00<?, ?it/s]  2%|▏         | 1663/69854 [00:00<00:04, 16621.61it/s]  5%|▍         | 3326/69854 [00:00<00:04, 16501.24it/s]  8%|▊         | 5376/69854 [00:00<00:03, 18317.79it/s] 10%|█         | 7209/69854 [00:00<00:03, 17458.72it/s] 13%|█▎        | 8961/69854 [00:00<00:03, 17019.16it/s] 15%|█▌        | 10668/69854 [00:00<00:03, 16482.60it/s] 18%|█▊        | 12481/69854 [00:00<00:03, 16993.39it/s] 20%|██        | 14266/69854 [00:00<00:03, 17253.87it/s] 24%|██▍       | 16776/69854 [00:00<00:02, 19647.51it/s] 27%|██▋       | 19045/69854 [00:01<00:02, 20568.20it/s] 31%|███       | 21498/69854 [00:01<00:02, 21765.01it/s] 34%|███▍      | 23885/69854 [00:01<00:02, 22397.24it/s] 38%|███▊      | 26220/69854 [00:01<00:01, 22681.14it/s] 41%|████      | 28500/69854 [00:01<00:01, 22713.85it/s] 44%|████▍     | 30775/69854 [00:01<00:01, 22497.14it/s] 47%|████▋     | 33027/69854 [00:01<00:01, 22059.19it/s] 50%|█████     | 35266/69854 [00:01<00:01, 22156.14it/s] 54%|█████▎    | 37485/69854 [00:01<00:01, 21920.95it/s] 57%|█████▋    | 39760/69854 [00:01<00:01, 22161.20it/s] 60%|██████    | 42102/69854 [00:02<00:01, 22533.43it/s] 64%|██████▎   | 44358/69854 [00:02<00:01, 21355.57it/s] 67%|██████▋   | 46509/69854 [00:02<00:01, 21397.74it/s] 70%|██████▉   | 48659/69854 [00:02<00:01, 20712.52it/s] 73%|███████▎  | 50741/69854 [00:02<00:00, 19513.43it/s] 76%|███████▌  | 52792/69854 [00:02<00:00, 19789.27it/s] 78%|███████▊  | 54786/69854 [00:02<00:00, 18981.11it/s] 81%|████████  | 56698/69854 [00:02<00:00, 18914.93it/s] 84%|████████▍ | 58599/69854 [00:02<00:00, 18295.34it/s] 87%|████████▋ | 60437/69854 [00:03<00:00, 17212.79it/s] 89%|████████▉ | 62255/69854 [00:03<00:00, 17438.25it/s] 92%|█████████▏| 64327/69854 [00:03<00:00, 18360.90it/s] 95%|█████████▍| 66178/69854 [00:03<00:00, 18378.22it/s] 98%|█████████▊| 68630/69854 [00:03<00:00, 20159.88it/s]100%|██████████| 69854/69854 [00:03<00:00, 19927.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:102: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  train_dataset = TensorDataset(torch.tensor(train_X).float(), torch.tensor(train_y).float())
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 33.32it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.89it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.39it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.48it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.39it/s]Train:  40%|████      | 24/60 [00:00<00:01, 28.10it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.87it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.41it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.27it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.84it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.17it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.85it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 22.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.14it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.42it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.83it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.82it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.85it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.81it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.93it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.87it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.17it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.06it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.04it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.59it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.51it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 36.25it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.87it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 23.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.22it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.44it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.13it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.16it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.65it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.61it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.28it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.28it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.04it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.29it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.80it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.11it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.78it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.82it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.96it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.62it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.04it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.93it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.39it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.41it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.80it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.14it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.33it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.76it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.59it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.79it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.56it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.94it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 29.37it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 24.42it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.08it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.56it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.29it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.71it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.91it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.91it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.08it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.90it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.37it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.00it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.02it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.69it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.03it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 28.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.58it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 32.16it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.93it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.72it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.05it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 22.24it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.38it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.75it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.94it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.21it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.33it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.93it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.10it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.98it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.14it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 45.82it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.34it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 38.11it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.65it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.67it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.98it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.87it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.34it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.87it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.43it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.36it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.31it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.45it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 35.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.91it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.75it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.96it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.42it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.09it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.05it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.83it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.42it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 28.98it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.43it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.20it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.14it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.99it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.97it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.75it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 28.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 29.68it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.99it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.56it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.76it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 39.74it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.03it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.72it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.00it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.07it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.66it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.63it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.11it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.18it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.14it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.40it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.76it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.88it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.28it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.61it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.52it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.36it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.21it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.31it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.09it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.78it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.34it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.99it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.84it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.54it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.35it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.49it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.25it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.40it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.89it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.97it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.21it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.51it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.10it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.89it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.97it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.44it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.47it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.98it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.77it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.36it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.03it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 29.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 28.48it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.82it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 28.43it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.56it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.89it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.45it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.02it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.22it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.00it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.88it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 32.04it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 32.72it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 32.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 48.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.13it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.90it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.24it/s]Loading MSD from data/song/msd_clean.csv
Loading FMA from data/song/fma_clean.csv
Current MSD columns Index(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
       '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24',
       '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36',
       '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48',
       '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60',
       '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72',
       '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84',
       '85', '86', '87', '88', '89', 'title'],
      dtype='object')
Current FMA columns Index(['title', '0', '1', '2', '3', '4', '5', '6', '7', '8',
       ...
       '508', '509', '510', '511', '512', '513', '514', '515', '516', '517'],
      dtype='object', length=519)
Loading data from cache
Done
Generating top1 dataset
Generating top1 dataset
Generating top1 dataset
Loading data
Prepare for training
Start training
=================================================================
                     Kernel Shape Output Shape  Params  Mult-Adds
Layer                                                            
0_fc_layers.Linear_0   [518, 400]  [4096, 400]  207600     207200
1_fc_layers.Linear_1   [400, 200]  [4096, 200]   80200      80000
2_fc_layers.Linear_2     [200, 1]    [4096, 1]     201        200
-----------------------------------------------------------------
                      Totals
Total params          288001
Trainable params      288001
Non-trainable params       0
Mult-Adds             287400
=================================================================
n_classes=2
task=regression
model_name=song_B_2022-05-21-21-34-52
sche_threshold=0.0001
sche_patience=30
sche_factor=0.1
use_scheduler=True
num_workers=4
device=cuda:3
test_batch_size=4096
train_batch_size=4096
learning_rate=0.001
weight_decay=1e-05
num_epochs=200
model_save_path=ckp/song_B_2022-05-21-21-34-52.pth
test_rate=0.2
val_rate=0.1
multiprocess_context=fork
metrics=['r2_score', 'rmse', 'mae']
metrics_f=[<metric.r2_score.R2Score object at 0x7fcf57b1e2e0>, <metric.rmse.RMSE object at 0x7fcf57b1e310>, <metric.mae.MAE object at 0x7fcf57b1e070>]
hidden_sizes=[400, 200]
model=MLP(
  (fc_layers): ModuleList(
    (0): Linear(in_features=518, out_features=400, bias=True)
    (1): Linear(in_features=400, out_features=200, bias=True)
    (2): Linear(in_features=200, out_features=1, bias=True)
  )
)
writer=<torch.utils.tensorboard.writer.SummaryWriter object at 0x7fcf57b1e280>
Epoch 1: Loss:            : Train 0.0988, Val 0.0902, Test 0.0908
          R2_Score         : Train -6.6787, Val -5.9661, Test -6.2237
          RMSE             : Train 27.9803, Val 26.6927, Test 26.6935
          MAE              : Train 24.5076, Val 22.4942, Test 22.5152
Best:
          R2_Score         : Train -6.6787, Val -5.9661, Test -6.2237
          RMSE             : Train 27.9803, Val 26.6927, Test 26.6935
          MAE              : Train 24.5076, Val 22.4942, Test 22.5152
Epoch 2: Loss:            : Train 0.0857, Val 0.0818, Test 0.0823
          R2_Score         : Train -5.6582, Val -5.3176, Test -5.5467
          RMSE             : Train 26.0548, Val 25.4198, Test 25.4120
          MAE              : Train 22.0779, Val 21.5424, Test 21.5429
Best:
          R2_Score         : Train -5.6582, Val -5.3176, Test -5.5467
          RMSE             : Train 26.0548, Val 25.4198, Test 25.4120
          MAE              : Train 22.0779, Val 21.5424, Test 21.5429
Epoch 3: Loss:            : Train 0.0771, Val 0.0728, Test 0.0733
          R2_Score         : Train -4.9924, Val -4.6240, Test -4.8263
          RMSE             : Train 24.7177, Val 23.9839, Test 23.9729
          MAE              : Train 20.9732, Val 20.3601, Test 20.3627
Best:
          R2_Score         : Train -4.9924, Val -4.6240, Test -4.8263
          RMSE             : Train 24.7177, Val 23.9839, Test 23.9729
          MAE              : Train 20.9732, Val 20.3601, Test 20.3627
Epoch 4: Loss:            : Train 0.0675, Val 0.0626, Test 0.0629
          R2_Score         : Train -4.2462, Val -3.8337, Test -4.0056
          RMSE             : Train 23.1276, Val 22.2350, Test 22.2206
          MAE              : Train 19.6610, Val 18.9365, Test 18.9424
Best:
          R2_Score         : Train -4.2462, Val -3.8337, Test -4.0056
          RMSE             : Train 23.1276, Val 22.2350, Test 22.2206
          MAE              : Train 19.6610, Val 18.9365, Test 18.9424
Epoch 5: Loss:            : Train 0.0567, Val 0.0513, Test 0.0515
          R2_Score         : Train -3.4061, Val -2.9608, Test -3.0988
          RMSE             : Train 21.1951, Val 20.1274, Test 20.1074
          MAE              : Train 18.0680, Val 17.1974, Test 17.1985
Best:
          R2_Score         : Train -3.4061, Val -2.9608, Test -3.0988
          RMSE             : Train 21.1951, Val 20.1274, Test 20.1074
          MAE              : Train 18.0680, Val 17.1974, Test 17.1985
Epoch 6: Loss:            : Train 0.0451, Val 0.0396, Test 0.0397
          R2_Score         : Train -2.5059, Val -2.0610, Test -2.1616
          RMSE             : Train 18.9064, Val 17.6942, Test 17.6596
          MAE              : Train 16.1654, Val 15.1642, Test 15.1534
Best:
          R2_Score         : Train -2.5059, Val -2.0610, Test -2.1616
          RMSE             : Train 18.9064, Val 17.6942, Test 17.6596
          MAE              : Train 16.1654, Val 15.1642, Test 15.1534
Epoch 7: Loss:            : Train 0.0338, Val 0.0289, Test 0.0289
          R2_Score         : Train -1.6244, Val -1.2306, Test -1.2987
          RMSE             : Train 16.3576, Val 15.1047, Test 15.0581
          MAE              : Train 14.0068, Val 12.9577, Test 12.9375
Best:
          R2_Score         : Train -1.6244, Val -1.2306, Test -1.2987
          RMSE             : Train 16.3576, Val 15.1047, Test 15.0581
          MAE              : Train 14.0068, Val 12.9577, Test 12.9375
Epoch 8: Loss:            : Train 0.0240, Val 0.0204, Test 0.0203
          R2_Score         : Train -0.8643, Val -0.5809, Test -0.6205
          RMSE             : Train 13.7869, Val 12.7158, Test 12.6429
          MAE              : Train 11.7252, Val 10.7476, Test 10.7171
Best:
          R2_Score         : Train -0.8643, Val -0.5809, Test -0.6205
          RMSE             : Train 13.7869, Val 12.7158, Test 12.6429
          MAE              : Train 11.7252, Val 10.7476, Test 10.7171
Epoch 9: Loss:            : Train 0.0171, Val 0.0154, Test 0.0151
          R2_Score         : Train -0.3290, Val -0.1905, Test -0.2103
          RMSE             : Train 11.6406, Val 11.0346, Test 10.9264
          MAE              : Train 9.6107, Val 8.8862, Test 8.8465
Best:
          R2_Score         : Train -0.3290, Val -0.1905, Test -0.2103
          RMSE             : Train 11.6406, Val 11.0346, Test 10.9264
          MAE              : Train 9.6107, Val 8.8862, Test 8.8465
Epoch 10: Loss:            : Train 0.0137, Val 0.0135, Test 0.0132
          R2_Score         : Train -0.0630, Val -0.0515, Test -0.0618
          RMSE             : Train 10.4108, Val 10.3703, Test 10.2341
          MAE              : Train 8.0947, Val 7.7363, Test 7.7045
Best:
          R2_Score         : Train -0.0630, Val -0.0515, Test -0.0618
          RMSE             : Train 10.4108, Val 10.3703, Test 10.2341
          MAE              : Train 8.0947, Val 7.7363, Test 7.7045
Epoch 11: Loss:            : Train 0.0129, Val 0.0133, Test 0.0130
          R2_Score         : Train -0.0006, Val -0.0359, Test -0.0416
          RMSE             : Train 10.1001, Val 10.2933, Test 10.1364
          MAE              : Train 7.4929, Val 7.5643, Test 7.5297
Best:
          R2_Score         : Train -0.0006, Val -0.0359, Test -0.0416
          RMSE             : Train 10.1001, Val 10.2933, Test 10.1364
          MAE              : Train 7.4929, Val 7.5643, Test 7.5297
Epoch 12: Loss:            : Train 0.0127, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0105, Val -0.0280, Test -0.0336
          RMSE             : Train 10.0440, Val 10.2540, Test 10.0974
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.64it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 25.73it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.50it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.95it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.27it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.04it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.39it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.96it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.54it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.59it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 30.83it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 24.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.34it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.05it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.66it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 25.58it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.00it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.71it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.69it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.85it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.58it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.99it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.91it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.85it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.54it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.07it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.51it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.03it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.56it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 31.95it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.42it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.17it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.34it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.22it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.94it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.09it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.76it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.87it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 33.38it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.24it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 28.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.64it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.50it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.38it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.29it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.94it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 25.62it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.31it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.26it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.42it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.54it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.60it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.23it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.52it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.24it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.73it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 35.79it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.91it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 31.62it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.50it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.60it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 30.05it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.61it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.68it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.93it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.60it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.50it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.15it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.91it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.14it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.90it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.78it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.85it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.18it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.81it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.48it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.97it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.92it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.26it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.43it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.17it/s]Train:  40%|████      | 24/60 [00:00<00:01, 28.70it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.63it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.97it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.62it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 32.36it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.56it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.01it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 29.43it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 23.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.81it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.25it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.07it/s]Train:  10%|█         | 6/60 [00:00<00:01, 30.18it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.96it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.06it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.92it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.50it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.24it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.80it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.77it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.35it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.22it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 27.28it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.88it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.27it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.56it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.52it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.62it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.64it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.92it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.57it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.22it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.78it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.52it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.19it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.67it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.56it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 32.16it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.49it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.18it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.39it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 29.22it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.97it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.37it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 34.73it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.40it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 28.73it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.79it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 32.69it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.08it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.60it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 28.99it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.67it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.72it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.79it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.31it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.71it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.36it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.57it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.92it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.67it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.36it/s]Train:  10%|█         | 6/60 [00:00<00:01, 32.20it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.09it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.56it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.64it/s]Train:  40%|████      | 24/60 [00:00<00:01, 28.97it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 32.15it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.87it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.12it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.79it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.51it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.79it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.78it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 35.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.30it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 31.51it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.10it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 31.86it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.45it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.50it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.03it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.36it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.30it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.21it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.88it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.71it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.77it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.98it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.27it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.35it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.30it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.85it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.43it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.86it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.91it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.81it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.79it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.96it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.56it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.42it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.89it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.21it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.27it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 28.56it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.24it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.35it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 27.41it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.21it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.05it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 25.81it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.64it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.59it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.16it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.67it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.86it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.29it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 25.44it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.97it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.09it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 27.71it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.81it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.18it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.99it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.80it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.71it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.76it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.74it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.48it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.16it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.89it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.22it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.47it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.95it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.43it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.79it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.14it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.51it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.95it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 27.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.31it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 28.43it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.25it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.48it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.12it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.55it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.03it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.17it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.42it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.67it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.63it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.67it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 26.75it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.74it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 29.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.73it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.39it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.65it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.05it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.52it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.13it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.35it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.78it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.82it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.33it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.06it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.60it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.83it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.59it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 34.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.58it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.78it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.07it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.10it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.36it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.88it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.03it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 33.86it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.26it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.82it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.87it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.32it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.78it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.49it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.88it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.31it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 30.55it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.90it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.13it/s]
          MAE              : Train 7.4386, Val 7.5666, Test 7.5338
Best:
          R2_Score         : Train 0.0105, Val -0.0280, Test -0.0336
          RMSE             : Train 10.0440, Val 10.2540, Test 10.0974
          MAE              : Train 7.4386, Val 7.5666, Test 7.5338
Epoch 13: Loss:            : Train 0.0127, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0165, Val -0.0250, Test -0.0302
          RMSE             : Train 10.0136, Val 10.2390, Test 10.0804
          MAE              : Train 7.4199, Val 7.5727, Test 7.5322
Best:
          R2_Score         : Train 0.0165, Val -0.0250, Test -0.0302
          RMSE             : Train 10.0136, Val 10.2390, Test 10.0804
          MAE              : Train 7.4199, Val 7.5727, Test 7.5322
Epoch 14: Loss:            : Train 0.0126, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0221, Val -0.0265, Test -0.0286
          RMSE             : Train 9.9851, Val 10.2464, Test 10.0728
          MAE              : Train 7.3992, Val 7.5214, Test 7.4766
Best:
          R2_Score         : Train 0.0165, Val -0.0250, Test -0.0302
          RMSE             : Train 10.0136, Val 10.2390, Test 10.0804
          MAE              : Train 7.4199, Val 7.5727, Test 7.5322
Epoch 15: Loss:            : Train 0.0125, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0266, Val -0.0264, Test -0.0304
          RMSE             : Train 9.9624, Val 10.2460, Test 10.0817
          MAE              : Train 7.3798, Val 7.5907, Test 7.5483
Best:
          R2_Score         : Train 0.0165, Val -0.0250, Test -0.0302
          RMSE             : Train 10.0136, Val 10.2390, Test 10.0804
          MAE              : Train 7.4199, Val 7.5727, Test 7.5322
Epoch 16: Loss:            : Train 0.0125, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0304, Val -0.0234, Test -0.0260
          RMSE             : Train 9.9426, Val 10.2309, Test 10.0602
          MAE              : Train 7.3730, Val 7.5369, Test 7.4921
Best:
          R2_Score         : Train 0.0304, Val -0.0234, Test -0.0260
          RMSE             : Train 9.9426, Val 10.2309, Test 10.0602
          MAE              : Train 7.3730, Val 7.5369, Test 7.4921
Epoch 17: Loss:            : Train 0.0124, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0338, Val -0.0241, Test -0.0281
          RMSE             : Train 9.9254, Val 10.2347, Test 10.0705
          MAE              : Train 7.3551, Val 7.5779, Test 7.5299
Best:
          R2_Score         : Train 0.0304, Val -0.0234, Test -0.0260
          RMSE             : Train 9.9426, Val 10.2309, Test 10.0602
          MAE              : Train 7.3730, Val 7.5369, Test 7.4921
Epoch 18: Loss:            : Train 0.0124, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 19: Loss:            : Train 0.0123, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0404, Val -0.0243, Test -0.0274
          RMSE             : Train 9.8911, Val 10.2355, Test 10.0671
          MAE              : Train 7.3336, Val 7.5171, Test 7.4650
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 20: Loss:            : Train 0.0123, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0425, Val -0.0257, Test -0.0300
          RMSE             : Train 9.8802, Val 10.2424, Test 10.0798
          MAE              : Train 7.3273, Val 7.5524, Test 7.5076
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 21: Loss:            : Train 0.0123, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0450, Val -0.0236, Test -0.0297
          RMSE             : Train 9.8676, Val 10.2320, Test 10.0781
          MAE              : Train 7.3145, Val 7.4984, Test 7.4600
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 22: Loss:            : Train 0.0123, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0475, Val -0.0311, Test -0.0351
          RMSE             : Train 9.8544, Val 10.2695, Test 10.1045
          MAE              : Train 7.3014, Val 7.6253, Test 7.5785
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 23: Loss:            : Train 0.0122, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0504, Val -0.0326, Test -0.0388
          RMSE             : Train 9.8395, Val 10.2770, Test 10.1224
          MAE              : Train 7.2950, Val 7.6392, Test 7.5983
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 24: Loss:            : Train 0.0122, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0514, Val -0.0242, Test -0.0291
          RMSE             : Train 9.8342, Val 10.2349, Test 10.0751
          MAE              : Train 7.2854, Val 7.5109, Test 7.4678
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 25: Loss:            : Train 0.0122, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0533, Val -0.0330, Test -0.0402
          RMSE             : Train 9.8248, Val 10.2791, Test 10.1294
          MAE              : Train 7.2804, Val 7.6100, Test 7.5686
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 26: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0560, Val -0.0304, Test -0.0359
          RMSE             : Train 9.8106, Val 10.2661, Test 10.1085
          MAE              : Train 7.2659, Val 7.5828, Test 7.5450
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 27: Loss:            : Train 0.0121, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0574, Val -0.0371, Test -0.0446
          RMSE             : Train 9.8030, Val 10.2994, Test 10.1508
          MAE              : Train 7.2644, Val 7.6624, Test 7.6175
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 28: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0586, Val -0.0315, Test -0.0362
          RMSE             : Train 9.7971, Val 10.2713, Test 10.1097
          MAE              : Train 7.2564, Val 7.5651, Test 7.5195
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 29: Loss:            : Train 0.0121, Val 0.0133, Test 0.0130
          R2_Score         : Train 0.0600, Val -0.0365, Test -0.0433
          RMSE             : Train 9.7895, Val 10.2963, Test 10.1445
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.39it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.44it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.31it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.12it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.70it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.58it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.58it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.97it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.56it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.43it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.32it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.14it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 29.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.11it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.35it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.45it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 32.37it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.24it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.36it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.73it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.63it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.24it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.97it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.81it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.36it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.70it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.18it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 32.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 36.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.72it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.99it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.57it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.20it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 33.01it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.89it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.35it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 28.67it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 33.68it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.58it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.32it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.80it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.76it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.02it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.20it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.45it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 31.06it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.98it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.60it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.16it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.66it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.70it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.92it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.32it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 26.36it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.96it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 27.62it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.36it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.94it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.19it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 28.46it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 29.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.83it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.49it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.60it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.46it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.49it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.25it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.72it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.32it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 34.13it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.04it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.18it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.90it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.28it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.45it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.90it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 33.26it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.65it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.08it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 23.09it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 33.62it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.03it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.27it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.75it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 29.48it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 33.66it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.34it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.91it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.91it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.96it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.31it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.82it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.76it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 30.88it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.55it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.67it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.40it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.64it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.27it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.22it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.71it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.76it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 28.90it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.53it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.69it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.79it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.63it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.52it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.16it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 29.15it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.03it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.60it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 23.45it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.02it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.67it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 28.98it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.27it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.77it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.41it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.65it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.27it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.76it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.78it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.26it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.78it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.56it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.99it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.89it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 31.59it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 34.05it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.76it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 23.16it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.93it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 36.22it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.03it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.51it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 26.91it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.97it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.99it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.18it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.86it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.96it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 27.73it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.25it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 32.99it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.37it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 26.05it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 35.65it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.96it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.29it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.48it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.47it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.27it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.31it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.38it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.97it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.41it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.51it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.71it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.41it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.61it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.50it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.87it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.33it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.64it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.63it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.14it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.81it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.98it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.47it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.34it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.25it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 32.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 24.05it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.74it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.87it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.76it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.51it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.04it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.54it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.26it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.90it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.60it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.98it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.66it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.66it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.61it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.02it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 29.44it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.81it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.07it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.05it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.38it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.16it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.33it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.91it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.69it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.26it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.80it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.41it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.21it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.00it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.27it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.59it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.88it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.65it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 31.03it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.69it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.00it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.95it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.59it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.36it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.51it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.15it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.64it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.51it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.92it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.63it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.56it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.20it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.89it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 28.93it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 34.61it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.84it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 26.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.97it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.66it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.75it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 22.55it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 33.89it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.30it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.63it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.91it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.45it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.52it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.43it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.91it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.51it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.84it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.33it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 49.18it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 39.19it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:  10%|█         | 6/60 [00:00<00:01, 30.63it/s]Train:  20%|██        | 12/60 [00:00<00:01, 31.79it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.34it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.00it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.13it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.97it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.99it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.88it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.87it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.36it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.40it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 33.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.82it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.50it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.80it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.64it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.85it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.81it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.48it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.76it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.17it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.66it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.22it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.51it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.76it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.80it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.62it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 25.87it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.62it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.03it/s]
          MAE              : Train 7.2497, Val 7.6420, Test 7.5986
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 30: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0604, Val -0.0336, Test -0.0365
          RMSE             : Train 9.7877, Val 10.2818, Test 10.1115
          MAE              : Train 7.2501, Val 7.5817, Test 7.5319
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 31: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0619, Val -0.0298, Test -0.0379
          RMSE             : Train 9.7797, Val 10.2631, Test 10.1180
          MAE              : Train 7.2365, Val 7.5361, Test 7.5048
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 32: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0640, Val -0.0345, Test -0.0401
          RMSE             : Train 9.7688, Val 10.2865, Test 10.1290
          MAE              : Train 7.2312, Val 7.5856, Test 7.5400
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 33: Loss:            : Train 0.0120, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0659, Val -0.0334, Test -0.0379
          RMSE             : Train 9.7590, Val 10.2810, Test 10.1181
          MAE              : Train 7.2190, Val 7.5533, Test 7.5083
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 34: Loss:            : Train 0.0120, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0669, Val -0.0365, Test -0.0402
          RMSE             : Train 9.7540, Val 10.2962, Test 10.1293
          MAE              : Train 7.2188, Val 7.5700, Test 7.5198
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 35: Loss:            : Train 0.0120, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0668, Val -0.0389, Test -0.0431
          RMSE             : Train 9.7544, Val 10.3082, Test 10.1438
          MAE              : Train 7.2216, Val 7.5579, Test 7.5116
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 36: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0690, Val -0.0397, Test -0.0453
          RMSE             : Train 9.7426, Val 10.3120, Test 10.1545
          MAE              : Train 7.2047, Val 7.5766, Test 7.5312
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 37: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0699, Val -0.0439, Test -0.0470
          RMSE             : Train 9.7380, Val 10.3332, Test 10.1625
          MAE              : Train 7.2023, Val 7.6341, Test 7.5746
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 38: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0707, Val -0.0396, Test -0.0459
          RMSE             : Train 9.7340, Val 10.3119, Test 10.1574
          MAE              : Train 7.1979, Val 7.6046, Test 7.5657
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 39: Loss:            : Train 0.0119, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0721, Val -0.0464, Test -0.0498
          RMSE             : Train 9.7267, Val 10.3454, Test 10.1762
          MAE              : Train 7.1894, Val 7.6308, Test 7.5779
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 40: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0731, Val -0.0402, Test -0.0460
          RMSE             : Train 9.7215, Val 10.3148, Test 10.1576
          MAE              : Train 7.1845, Val 7.5985, Test 7.5530
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 41: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0734, Val -0.0437, Test -0.0481
          RMSE             : Train 9.7195, Val 10.3322, Test 10.1680
          MAE              : Train 7.1817, Val 7.5824, Test 7.5328
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 42: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0737, Val -0.0428, Test -0.0479
          RMSE             : Train 9.7179, Val 10.3275, Test 10.1668
          MAE              : Train 7.1783, Val 7.6153, Test 7.5687
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 43: Loss:            : Train 0.0119, Val 0.0134, Test 0.0131
          R2_Score         : Train 0.0745, Val -0.0431, Test -0.0511
          RMSE             : Train 9.7139, Val 10.3289, Test 10.1826
          MAE              : Train 7.1764, Val 7.6346, Test 7.5920
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 44: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0766, Val -0.0437, Test -0.0497
          RMSE             : Train 9.7029, Val 10.3322, Test 10.1754
          MAE              : Train 7.1651, Val 7.5842, Test 7.5369
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 45: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0779, Val -0.0436, Test -0.0473
          RMSE             : Train 9.6962, Val 10.3315, Test 10.1640
          MAE              : Train 7.1623, Val 7.5742, Test 7.5226
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 46: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0772, Val -0.0434, Test -0.0463
          RMSE             : Train 9.6998, Val 10.3307, Test 10.1593
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 22.33it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.30it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.57it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.95it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.10it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 28.17it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.15it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.55it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 22.74it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.72it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 22.59it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.50it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 19.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 19.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 28.25it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.27it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.79it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 39.22it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.06it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.82it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.86it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.45it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.98it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.81it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.89it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.63it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 24.80it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 20.57it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 21.49it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 21.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 12.71it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 23.84it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.93it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.02it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.29it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.37it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.79it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.26it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.27it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.28it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.76it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.63it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.72it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.75it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.43it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.68it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.88it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.19it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 26.81it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.64it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.92it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.44it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.39it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.93it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.58it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.42it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.14it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.55it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 37.80it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 33.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.56it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.65it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.88it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.27it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.01it/s]Train:  40%|████      | 24/60 [00:00<00:01, 28.79it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.23it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.33it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.13it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.89it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.54it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 31.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 34.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.25it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 31.27it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.21it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.37it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.28it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.68it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.36it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.29it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 34.11it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.23it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.12it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.12it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.42it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.00it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.31it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.21it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.56it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 26.68it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 35.20it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.70it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.77it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.30it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 32.24it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.41it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.75it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.27it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 32.90it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.59it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.65it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.79it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.71it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.19it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.38it/s]Train:  10%|█         | 6/60 [00:00<00:01, 31.11it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.12it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.62it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.07it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.97it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 27.10it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 26.60it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.96it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.50it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.47it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.52it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 27.94it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.52it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 34.00it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.30it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 25.51it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.15it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.72it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.36it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 32.03it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.54it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.53it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.75it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.08it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.19it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.71it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.97it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.27it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.87it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.59it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.56it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.68it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.33it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 28.02it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.11it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.35it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 23.25it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.15it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.01it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.16it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.03it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.07it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 21.45it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 23.31it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.92it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 25.11it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.43it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.80it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.67it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.55it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.63it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.47it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 25.32it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.50it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.28it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.93it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.48it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.91it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.98it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.90it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.44it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.35it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.54it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.67it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.73it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.23it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.19it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 25.07it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.87it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.29it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.00it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.92it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.80it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.58it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.40it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.95it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.30it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.79it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 34.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.62it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.61it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.76it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.78it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.22it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.74it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.41it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.85it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.18it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.35it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.37it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.08it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.93it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.35it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 25.01it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 29.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 23.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.35it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.90it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.57it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.16it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 26.73it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.89it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.43it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.24it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.67it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 36.18it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 33.57it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.79it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.62it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.77it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.47it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 32.07it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.20it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 31.04it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.88it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.05it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.41it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.69it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.30it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 35.30it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.89it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.73it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.89it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.10it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.74it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 28.78it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 31.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 31.79it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.80it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.11it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.18it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.24it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.93it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.29it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.17it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 35.72it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.61it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.15it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.36it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.67it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.91it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.09it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.48it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.86it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.22it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.61it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.13it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.79it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.80it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.48it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.55it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.38it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.08it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.62it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.44it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.48it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.99it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 32.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.06it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 31.00it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.22it/s]
          MAE              : Train 7.1587, Val 7.5811, Test 7.5288
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 47: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0783, Val -0.0420, Test -0.0473
          RMSE             : Train 9.6939, Val 10.3235, Test 10.1641
          MAE              : Train 7.1553, Val 7.5557, Test 7.5098
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 48: Loss:            : Train 0.0118, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0794, Val -0.0523, Test -0.0557
          RMSE             : Train 9.6881, Val 10.3746, Test 10.2044
          MAE              : Train 7.1519, Val 7.6483, Test 7.5928
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 49: Loss:            : Train 0.0118, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0802, Val -0.0463, Test -0.0522
          RMSE             : Train 9.6838, Val 10.3451, Test 10.1879
          MAE              : Train 7.1434, Val 7.6071, Test 7.5644
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 50: Loss:            : Train 0.0117, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0934, Val -0.0459, Test -0.0506
          RMSE             : Train 9.6142, Val 10.3427, Test 10.1798
          MAE              : Train 7.1017, Val 7.6061, Test 7.5583
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 51: Loss:            : Train 0.0116, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0954, Val -0.0487, Test -0.0545
          RMSE             : Train 9.6037, Val 10.3566, Test 10.1990
          MAE              : Train 7.0912, Val 7.6271, Test 7.5817
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 52: Loss:            : Train 0.0116, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0960, Val -0.0506, Test -0.0556
          RMSE             : Train 9.6004, Val 10.3661, Test 10.2041
          MAE              : Train 7.0857, Val 7.6433, Test 7.5942
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 53: Loss:            : Train 0.0116, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0964, Val -0.0499, Test -0.0551
          RMSE             : Train 9.5982, Val 10.3629, Test 10.2017
          MAE              : Train 7.0844, Val 7.6241, Test 7.5771
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 54: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0967, Val -0.0537, Test -0.0580
          RMSE             : Train 9.5968, Val 10.3813, Test 10.2157
          MAE              : Train 7.0788, Val 7.6573, Test 7.6053
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 55: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0969, Val -0.0559, Test -0.0607
          RMSE             : Train 9.5954, Val 10.3921, Test 10.2287
          MAE              : Train 7.0829, Val 7.6748, Test 7.6239
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 56: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0971, Val -0.0543, Test -0.0596
          RMSE             : Train 9.5949, Val 10.3845, Test 10.2234
          MAE              : Train 7.0796, Val 7.6607, Test 7.6119
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 57: Loss:            : Train 0.0116, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0974, Val -0.0515, Test -0.0561
          RMSE             : Train 9.5932, Val 10.3703, Test 10.2066
          MAE              : Train 7.0773, Val 7.6240, Test 7.5739
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 58: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0974, Val -0.0527, Test -0.0577
          RMSE             : Train 9.5930, Val 10.3764, Test 10.2144
          MAE              : Train 7.0783, Val 7.6380, Test 7.5884
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 59: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0976, Val -0.0526, Test -0.0568
          RMSE             : Train 9.5921, Val 10.3757, Test 10.2099
          MAE              : Train 7.0770, Val 7.6242, Test 7.5720
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 60: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0978, Val -0.0556, Test -0.0605
          RMSE             : Train 9.5910, Val 10.3908, Test 10.2276
          MAE              : Train 7.0736, Val 7.6626, Test 7.6127
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 61: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0979, Val -0.0549, Test -0.0594
          RMSE             : Train 9.5904, Val 10.3871, Test 10.2224
          MAE              : Train 7.0751, Val 7.6554, Test 7.6028
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 62: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0981, Val -0.0562, Test -0.0611
          RMSE             : Train 9.5895, Val 10.3935, Test 10.2309
          MAE              : Train 7.0728, Val 7.6619, Test 7.6116
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 63: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0981, Val -0.0540, Test -0.0586
          RMSE             : Train 9.5894, Val 10.3829, Test 10.2184
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.87it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 33.45it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.77it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.78it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.77it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 28.71it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.15it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.03it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.39it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 21.72it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.25it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 24.70it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.29it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.88it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 34.43it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.24it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.81it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 28.07it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.09it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.49it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.33it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.33it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.04it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 34.07it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.78it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.04it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.26it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 28.40it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.75it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.54it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 26.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.66it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.79it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.86it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.60it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.14it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.03it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.88it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 34.56it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.52it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.93it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.00it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.95it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 33.13it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.35it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.79it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 35.24it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.73it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 30.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.79it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.84it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.27it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.50it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.15it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 28.44it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.27it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.12it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.54it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.07it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 28.78it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.12it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.64it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.36it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.43it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 27.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.32it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.92it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.21it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.87it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.57it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.68it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.18it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.60it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.25it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.63it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.45it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.01it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.86it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.47it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.26it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 31.40it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.05it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 22.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:10,  5.86it/s]Train:   3%|▎         | 2/60 [00:00<00:07,  7.43it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.94it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.76it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.40it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.08it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.26it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.96it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.03it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.85it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.60it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.68it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.28it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 30.26it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 31.60it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 35.04it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.99it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 26.82it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.71it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.59it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 31.20it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.02it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.81it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.90it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.70it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.14it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.49it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.07it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.75it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.60it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 25.88it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.98it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.52it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.39it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 29.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.20it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 24.76it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.41it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.49it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.44it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.46it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.87it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.34it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.76it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.38it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.22it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.50it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.04it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.68it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.54it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 27.46it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.79it/s]Train:   3%|▎         | 2/60 [00:00<00:07,  7.87it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 18.63it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.80it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.82it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.32it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 27.72it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.44it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.04it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.12it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.03it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.26it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.48it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.95it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 12.48it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 18.47it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 21.51it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 27.76it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.62it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.49it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 14.30it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.14it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.80it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.42it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.05it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.24it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.37it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.64it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.46it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.06it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.23it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.00it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.94it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 25.79it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.62it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.73it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.22it/s]Train:  10%|█         | 6/60 [00:00<00:03, 14.31it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.10it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 17.62it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.22it/s]Train:  33%|███▎      | 20/60 [00:01<00:01, 20.52it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.69it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.68it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 19.93it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.09it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.02it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 29.68it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 27.68it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.84it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.83it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.18it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.73it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.05it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.25it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.92it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 33.87it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.39it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.72it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.08it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.34it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.88it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.05it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.98it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.00it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.18it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.33it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.40it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 40.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 48.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.94it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.07it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.99it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 24.17it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 35.91it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.59it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.33it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.06it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 27.65it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.37it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.32it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.10it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.50it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.71it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.11it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.11it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.33it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 30.86it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.09it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.61it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.62it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.20it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 31.80it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 31.19it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.90it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.86it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.61it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.95it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.26it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.07it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.18it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.43it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 33.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 48.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.95it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 31.13it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 36.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.37it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.29it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 32.56it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.34it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.64it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 33.48it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.57it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.23it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.05it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.02it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 36.29it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 28.67it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 31.65it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 34.81it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.99it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.79it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.25it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.58it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 32.25it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 33.17it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 33.84it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.73it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.81it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.07it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 28.87it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 34.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.56it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.15it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.81it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.50it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.14it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.69it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.20it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.71it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 37.43it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.57it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.18it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.48it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.87it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.67it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.07it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.68it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.08it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.56it/s]
          MAE              : Train 7.0741, Val 7.6340, Test 7.5832
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 64: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0983, Val -0.0558, Test -0.0600
          RMSE             : Train 9.5884, Val 10.3917, Test 10.2254
          MAE              : Train 7.0694, Val 7.6513, Test 7.5991
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 65: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0983, Val -0.0551, Test -0.0594
          RMSE             : Train 9.5880, Val 10.3882, Test 10.2226
          MAE              : Train 7.0720, Val 7.6467, Test 7.5950
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 66: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0985, Val -0.0575, Test -0.0622
          RMSE             : Train 9.5870, Val 10.3999, Test 10.2360
          MAE              : Train 7.0688, Val 7.6675, Test 7.6168
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 67: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0988, Val -0.0575, Test -0.0625
          RMSE             : Train 9.5857, Val 10.3999, Test 10.2375
          MAE              : Train 7.0689, Val 7.6685, Test 7.6170
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 68: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0988, Val -0.0565, Test -0.0616
          RMSE             : Train 9.5857, Val 10.3953, Test 10.2331
          MAE              : Train 7.0692, Val 7.6594, Test 7.6100
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 69: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0989, Val -0.0571, Test -0.0616
          RMSE             : Train 9.5848, Val 10.3979, Test 10.2330
          MAE              : Train 7.0665, Val 7.6575, Test 7.6056
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 70: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0990, Val -0.0550, Test -0.0596
          RMSE             : Train 9.5846, Val 10.3878, Test 10.2232
          MAE              : Train 7.0666, Val 7.6381, Test 7.5867
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 71: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0991, Val -0.0577, Test -0.0624
          RMSE             : Train 9.5842, Val 10.4010, Test 10.2371
          MAE              : Train 7.0658, Val 7.6603, Test 7.6096
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 72: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0991, Val -0.0569, Test -0.0612
          RMSE             : Train 9.5838, Val 10.3970, Test 10.2313
          MAE              : Train 7.0672, Val 7.6502, Test 7.5988
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 73: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0993, Val -0.0561, Test -0.0610
          RMSE             : Train 9.5829, Val 10.3931, Test 10.2304
          MAE              : Train 7.0652, Val 7.6397, Test 7.5886
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 74: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0994, Val -0.0574, Test -0.0620
          RMSE             : Train 9.5822, Val 10.3998, Test 10.2351
          MAE              : Train 7.0640, Val 7.6504, Test 7.5984
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 75: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0996, Val -0.0576, Test -0.0619
          RMSE             : Train 9.5815, Val 10.4005, Test 10.2345
          MAE              : Train 7.0636, Val 7.6553, Test 7.6021
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 76: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0997, Val -0.0595, Test -0.0640
          RMSE             : Train 9.5810, Val 10.4098, Test 10.2445
          MAE              : Train 7.0612, Val 7.6752, Test 7.6231
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 77: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0998, Val -0.0597, Test -0.0643
          RMSE             : Train 9.5802, Val 10.4108, Test 10.2461
          MAE              : Train 7.0655, Val 7.6655, Test 7.6121
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 78: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0999, Val -0.0581, Test -0.0627
          RMSE             : Train 9.5796, Val 10.4031, Test 10.2383
          MAE              : Train 7.0616, Val 7.6513, Test 7.6000
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 79: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1000, Val -0.0618, Test -0.0657
          RMSE             : Train 9.5792, Val 10.4211, Test 10.2527
          MAE              : Train 7.0582, Val 7.6810, Test 7.6254
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 80: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1001, Val -0.0594, Test -0.0637
          RMSE             : Train 9.5787, Val 10.4093, Test 10.2432
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.78it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.48it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.01it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.48it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.31it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.40it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.62it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.72it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.24it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 32.90it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.19it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.38it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.36it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.96it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.45it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.69it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.40it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.83it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.92it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.16it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.30it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.94it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.84it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.53it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.84it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.81it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.97it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.65it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.59it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.49it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.82it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 33.04it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.84it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.97it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.17it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.65it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.21it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.50it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.81it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.26it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.99it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.29it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.00it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 33.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 48.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.10it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.07it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.22it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 33.14it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.92it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.03it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.44it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.61it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 26.99it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.65it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.34it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.65it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.91it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.38it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 28.87it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.34it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.29it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 32.70it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.03it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 37.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.83it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 26.05it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 36.40it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 33.20it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.42it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.78it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.86it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 33.54it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 36.80it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.43it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.13it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.80it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.93it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 30.54it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.62it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 24.83it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 18.02it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 23.04it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 30.13it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.26it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.08it/s]Train:  10%|█         | 6/60 [00:00<00:04, 13.41it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 17.38it/s]Train:  20%|██        | 12/60 [00:00<00:02, 16.98it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 21.29it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 18.72it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.43it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.45it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 19.61it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.47it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 20.74it/s]Train:  68%|██████▊   | 41/60 [00:02<00:00, 23.46it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 28.27it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 26.17it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 26.27it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 37.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 48.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.01it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 36.39it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.00it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.57it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.56it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 35.29it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 32.08it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.16it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.85it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.30it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 34.84it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.68it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.03it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.53it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.23it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.12it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 26.85it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 29.04it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.16it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 30.46it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.89it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.21it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 27.99it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 36.53it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 33.49it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.82it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.01it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.63it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 34.49it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.77it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.64it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.77it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.39it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 26.35it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.23it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.47it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 15.19it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.32it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.40it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.62it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.85it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.16it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.09it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.00it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.51it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.06it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.23it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.48it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.14it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.01it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.74it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.14it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.78it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.55it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.54it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.06it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.27it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.47it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.23it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.53it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.38it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.46it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.41it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.76it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.81it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.54it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.36it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.96it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.26it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.34it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 25.75it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 27.24it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.62it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.39it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 24.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.78it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.65it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.59it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.21it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.31it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.69it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.66it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.53it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.25it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.76it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.08it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.46it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.40it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.06it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 26.81it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.57it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 29.67it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 36.91it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 37.52it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 44.41it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.54it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.68it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.02it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.21it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.06it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.74it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.36it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.86it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.86it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.40it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.53it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.00it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 27.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 30.85it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.28it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 34.43it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.37it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.44it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 30.57it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.79it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.91it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.78it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.50it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.39it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.07it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.90it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.17it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.19it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.00it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.87it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.16it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 26.52it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.04it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.98it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.32it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.78it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.64it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.22it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.27it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.08it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 33.86it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.30it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.60it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.50it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.86it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.28it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.77it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.48it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.43it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.27it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 34.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.51it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.73it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.51it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.35it/s]Train:  30%|███       | 18/60 [00:00<00:01, 32.79it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.88it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.31it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.71it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.21it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.92it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.07it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.81it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.35it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.54it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.08it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 30.39it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.02it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.55it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.19it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 33.76it/s]Train:  30%|███       | 18/60 [00:00<00:01, 33.08it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.75it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.84it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 35.41it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.83it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.45it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.97it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.61it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.75it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 26.94it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.00it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.58it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 25.09it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 30.16it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.60it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.79it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 31.23it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.60it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.14it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.07it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.94it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 26.15it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.69it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.47it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.17it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.23it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.54it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.92it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 30.46it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 29.27it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.71it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 27.21it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 34.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.96it/s]
          MAE              : Train 7.0585, Val 7.6581, Test 7.6066
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 81: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1019, Val -0.0592, Test -0.0635
          RMSE             : Train 9.5690, Val 10.4084, Test 10.2420
          MAE              : Train 7.0568, Val 7.6619, Test 7.6095
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 82: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1021, Val -0.0590, Test -0.0633
          RMSE             : Train 9.5679, Val 10.4075, Test 10.2414
          MAE              : Train 7.0543, Val 7.6590, Test 7.6064
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 83: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1022, Val -0.0597, Test -0.0641
          RMSE             : Train 9.5677, Val 10.4110, Test 10.2451
          MAE              : Train 7.0521, Val 7.6658, Test 7.6133
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 84: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1022, Val -0.0592, Test -0.0635
          RMSE             : Train 9.5676, Val 10.4082, Test 10.2423
          MAE              : Train 7.0541, Val 7.6595, Test 7.6069
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 85: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1022, Val -0.0586, Test -0.0629
          RMSE             : Train 9.5674, Val 10.4057, Test 10.2395
          MAE              : Train 7.0541, Val 7.6539, Test 7.6011
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 86: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1022, Val -0.0595, Test -0.0639
          RMSE             : Train 9.5674, Val 10.4100, Test 10.2441
          MAE              : Train 7.0509, Val 7.6625, Test 7.6099
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 87: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1022, Val -0.0588, Test -0.0632
          RMSE             : Train 9.5673, Val 10.4063, Test 10.2407
          MAE              : Train 7.0540, Val 7.6544, Test 7.6021
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 88: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1023, Val -0.0590, Test -0.0634
          RMSE             : Train 9.5672, Val 10.4077, Test 10.2417
          MAE              : Train 7.0518, Val 7.6569, Test 7.6042
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 89: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1023, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5671, Val 10.4132, Test 10.2473
          MAE              : Train 7.0498, Val 7.6669, Test 7.6143
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 90: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1023, Val -0.0593, Test -0.0636
          RMSE             : Train 9.5671, Val 10.4087, Test 10.2427
          MAE              : Train 7.0532, Val 7.6583, Test 7.6056
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 91: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1023, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5671, Val 10.4135, Test 10.2477
          MAE              : Train 7.0490, Val 7.6672, Test 7.6146
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 92: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1023, Val -0.0597, Test -0.0642
          RMSE             : Train 9.5670, Val 10.4111, Test 10.2455
          MAE              : Train 7.0513, Val 7.6621, Test 7.6096
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 93: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1023, Val -0.0599, Test -0.0643
          RMSE             : Train 9.5669, Val 10.4121, Test 10.2461
          MAE              : Train 7.0512, Val 7.6642, Test 7.6113
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 94: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1023, Val -0.0590, Test -0.0633
          RMSE             : Train 9.5668, Val 10.4074, Test 10.2414
          MAE              : Train 7.0539, Val 7.6539, Test 7.6012
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 95: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1023, Val -0.0599, Test -0.0643
          RMSE             : Train 9.5668, Val 10.4119, Test 10.2461
          MAE              : Train 7.0481, Val 7.6628, Test 7.6102
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 96: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1023, Val -0.0592, Test -0.0636
          RMSE             : Train 9.5667, Val 10.4085, Test 10.2427
          MAE              : Train 7.0493, Val 7.6561, Test 7.6038
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 97: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0597, Test -0.0641
          RMSE             : Train 9.5666, Val 10.4111, Test 10.2450
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.85it/s]Train:  10%|█         | 6/60 [00:00<00:01, 29.41it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.62it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.09it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.34it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 33.77it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.67it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.59it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.08it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.15it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.07it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.86it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.42it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.44it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 15.98it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.60it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.82it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 14.17it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.65it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.44it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.42it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.35it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 27.91it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.33it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.51it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.75it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.63it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.33it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.43it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.68it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.09it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.33it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 28.87it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.22it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.37it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.60it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.18it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.56it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.73it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.82it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.14it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.49it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.01it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.40it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.14it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.53it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.30it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.21it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.07it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.55it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.69it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 25.38it/s]Train:  20%|██        | 12/60 [00:00<00:01, 31.21it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.35it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.94it/s]Train:  40%|████      | 24/60 [00:00<00:01, 25.97it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.43it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.08it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.97it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.66it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.75it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.77it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 32.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.49it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.30it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.16it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.13it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.75it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.56it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.40it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.83it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.14it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.93it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.93it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.11it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.76it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.01it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.25it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.49it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.97it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.37it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.18it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.17it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.02it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.37it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.71it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.92it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.54it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.13it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.72it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.76it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.04it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.45it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.72it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.00it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.38it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 32.88it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.75it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.61it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 32.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.57it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.42it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.42it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.92it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.04it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.00it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.02it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 30.81it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.12it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.22it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.05it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.89it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 28.98it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 32.29it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 35.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.59it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.41it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.39it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 31.62it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.79it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.22it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.11it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.18it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 36.04it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.16it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.02it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.11it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.59it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.96it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.74it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 10.62it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.90it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.88it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.44it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 31.61it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.79it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.33it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.59it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 34.62it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.65it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.95it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.34it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.45it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 35.90it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.29it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.08it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.99it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.94it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.54it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.04it/s]Train:  10%|█         | 6/60 [00:00<00:01, 30.22it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.90it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.01it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.36it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.54it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 29.50it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.51it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.96it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.78it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.91it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.53it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.53it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 25.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.56it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 23.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.22it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.98it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.28it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.28it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.92it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.04it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.67it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 31.08it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.40it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.68it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.57it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.05it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.15it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.06it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.34it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.46it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.24it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 27.63it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 28.06it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.24it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.52it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.73it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.03it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 24.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.73it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 18.98it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.35it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.81it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.96it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.97it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 32.48it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.89it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.25it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.90it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.77it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.70it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.79it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.79it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.71it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 34.13it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.08it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.46it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.60it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.77it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.26it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.17it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 31.82it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.93it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.14it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.63it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 36.00it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 33.88it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 33.27it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.03it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.43it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.63it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.12it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.39it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 14.43it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.32it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.18it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.15it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.73it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.48it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.52it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.47it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.28it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 32.42it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.84it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 29.81it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.36it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.84it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.37it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.81it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.02it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.35it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.22it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.36it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.66it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 28.64it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 23.67it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.05it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.19it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.20it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.01it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 21.74it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.59it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.72it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.47it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.97it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.08it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.13it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.57it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.15it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.08it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.23it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.75it/s]Train:  40%|████      | 24/60 [00:00<00:01, 35.56it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.53it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.76it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.69it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.67it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.71it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.93it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 33.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 13.87it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.02it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.31it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.79it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.23it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.43it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.46it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.02it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.92it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 34.19it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.82it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.96it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.18it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.55it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 33.68it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.18it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.40it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 36.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 30.16it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.02it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.08it/s]
          MAE              : Train 7.0514, Val 7.6605, Test 7.6076
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 98: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0591, Test -0.0636
          RMSE             : Train 9.5665, Val 10.4082, Test 10.2425
          MAE              : Train 7.0513, Val 7.6549, Test 7.6023
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 99: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0599, Test -0.0644
          RMSE             : Train 9.5665, Val 10.4120, Test 10.2466
          MAE              : Train 7.0482, Val 7.6626, Test 7.6103
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 100: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0599, Test -0.0643
          RMSE             : Train 9.5665, Val 10.4120, Test 10.2463
          MAE              : Train 7.0526, Val 7.6620, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 101: Loss:            : Train 0.0115, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0591, Test -0.0634
          RMSE             : Train 9.5663, Val 10.4078, Test 10.2419
          MAE              : Train 7.0514, Val 7.6537, Test 7.6011
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 102: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0600, Test -0.0644
          RMSE             : Train 9.5664, Val 10.4125, Test 10.2467
          MAE              : Train 7.0490, Val 7.6625, Test 7.6098
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 103: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1024, Val -0.0601, Test -0.0645
          RMSE             : Train 9.5663, Val 10.4127, Test 10.2471
          MAE              : Train 7.0504, Val 7.6627, Test 7.6101
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 104: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0596, Test -0.0640
          RMSE             : Train 9.5661, Val 10.4104, Test 10.2447
          MAE              : Train 7.0487, Val 7.6585, Test 7.6058
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 105: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0599, Test -0.0642
          RMSE             : Train 9.5661, Val 10.4117, Test 10.2458
          MAE              : Train 7.0506, Val 7.6598, Test 7.6070
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 106: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0595, Test -0.0639
          RMSE             : Train 9.5660, Val 10.4100, Test 10.2439
          MAE              : Train 7.0505, Val 7.6572, Test 7.6044
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 107: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0601, Test -0.0646
          RMSE             : Train 9.5660, Val 10.4131, Test 10.2473
          MAE              : Train 7.0495, Val 7.6620, Test 7.6095
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 108: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0597, Test -0.0641
          RMSE             : Train 9.5659, Val 10.4109, Test 10.2449
          MAE              : Train 7.0499, Val 7.6582, Test 7.6055
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 109: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0604, Test -0.0647
          RMSE             : Train 9.5658, Val 10.4142, Test 10.2482
          MAE              : Train 7.0483, Val 7.6642, Test 7.6113
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 110: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0606, Test -0.0651
          RMSE             : Train 9.5657, Val 10.4155, Test 10.2498
          MAE              : Train 7.0490, Val 7.6666, Test 7.6139
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 111: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1025, Val -0.0600, Test -0.0643
          RMSE             : Train 9.5657, Val 10.4122, Test 10.2462
          MAE              : Train 7.0514, Val 7.6602, Test 7.6074
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 112: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0600, Test -0.0644
          RMSE             : Train 9.5645, Val 10.4126, Test 10.2465
          MAE              : Train 7.0478, Val 7.6609, Test 7.6081
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 113: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0601, Test -0.0645
          RMSE             : Train 9.5645, Val 10.4129, Test 10.2469
          MAE              : Train 7.0486, Val 7.6615, Test 7.6088
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 114: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0601, Test -0.0644
          RMSE             : Train 9.5645, Val 10.4127, Test 10.2467
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 33.20it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.09it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.11it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.25it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.33it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.89it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.96it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.43it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.23it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.65it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.95it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.31it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.65it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.75it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 34.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.22it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.51it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.93it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.41it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.76it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.50it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.24it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.30it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.09it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.37it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.83it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 32.31it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.28it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.93it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 49.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.33it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.67it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.31it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 18.05it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.84it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.61it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 33.28it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.23it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 35.94it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 34.61it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.45it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 34.04it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 36.00it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.52it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.74it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 13.56it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 25.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 35.53it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.81it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 39.99it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 27.24it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.86it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.29it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 33.01it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.52it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.06it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.06it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.46it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.59it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.59it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.57it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.06it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.30it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.22it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.64it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 24.41it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.51it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 18.96it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.80it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.85it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.12it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.35it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.11it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.54it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.35it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.64it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.13it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.29it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.68it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 36.63it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.65it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 25.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.36it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 26.33it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.05it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.93it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 18.89it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 30.96it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.61it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.03it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.19it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.50it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.75it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.66it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.04it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.97it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.99it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.64it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.82it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.00it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.97it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.32it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 29.34it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.08it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.15it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.53it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.25it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.55it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 34.25it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.82it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.37it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.12it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.47it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 36.34it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.07it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 25.96it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 26.53it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.45it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.97it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.99it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.82it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.92it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.62it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.11it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.96it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.69it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.92it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.37it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.49it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 35.47it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 35.61it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 35.99it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 38.41it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 12.93it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 24.37it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.99it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.37it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.38it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 17.88it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.23it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.71it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.93it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 28.03it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.26it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.90it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 36.12it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.81it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.22it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.58it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.35it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 36.18it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.87it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.01it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.38it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.22it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.15it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.06it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 19.73it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.87it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.48it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.76it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 31.15it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 34.34it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.30it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.63it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.21it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.54it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.20it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 29.66it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.92it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 21.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.17it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.77it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.71it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.75it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.97it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.34it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.79it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.23it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.29it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 29.56it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.21it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.88it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.80it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.58it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 32.40it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.62it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.68it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.42it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 25.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.88it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.09it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 26.11it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 26.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.02it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.66it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.55it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.01it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.04it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.98it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.82it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.99it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.28it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.40it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.87it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.75it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 27.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.52it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 39.63it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 34.87it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 35.06it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.64it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.67it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 33.28it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.96it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.08it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.78it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.71it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.09it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.94it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 35.52it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.53it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.23it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.53it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.26it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.17it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.59it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 27.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.14it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.55it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.53it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.31it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.69it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.57it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.72it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.52it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.76it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 32.09it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.02it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.47it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.73it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 28.45it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.79it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.38it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.76it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.77it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.53it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.00it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.05it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.57it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.66it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.75it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.39it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.74it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.13it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.85it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.78it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.87it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.95it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.70it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 49.31it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.77it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 37.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.89it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.60it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.88it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 36.43it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 34.24it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.93it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.36it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.78it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 34.05it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.84it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 36.28it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.20it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 29.85it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 24.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.17it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.42it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 14.77it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.93it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.25it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.53it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.69it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.17it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.87it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 34.07it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 32.81it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.47it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 36.36it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.88it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.16it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.45it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 31.83it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.01it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 28.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.99it/s]
          MAE              : Train 7.0477, Val 7.6610, Test 7.6082
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 115: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0645
          RMSE             : Train 9.5645, Val 10.4132, Test 10.2472
          MAE              : Train 7.0488, Val 7.6619, Test 7.6091
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 116: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0601, Test -0.0645
          RMSE             : Train 9.5645, Val 10.4131, Test 10.2471
          MAE              : Train 7.0483, Val 7.6618, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 117: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5645, Val 10.4136, Test 10.2477
          MAE              : Train 7.0494, Val 7.6628, Test 7.6101
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 118: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5645, Val 10.4133, Test 10.2474
          MAE              : Train 7.0490, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 119: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0601, Test -0.0645
          RMSE             : Train 9.5644, Val 10.4130, Test 10.2470
          MAE              : Train 7.0486, Val 7.6613, Test 7.6086
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 120: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5644, Val 10.4134, Test 10.2474
          MAE              : Train 7.0485, Val 7.6621, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 121: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0645
          RMSE             : Train 9.5644, Val 10.4132, Test 10.2472
          MAE              : Train 7.0490, Val 7.6617, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 122: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0601, Test -0.0645
          RMSE             : Train 9.5644, Val 10.4131, Test 10.2472
          MAE              : Train 7.0491, Val 7.6614, Test 7.6087
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 123: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0601, Test -0.0645
          RMSE             : Train 9.5644, Val 10.4129, Test 10.2470
          MAE              : Train 7.0482, Val 7.6610, Test 7.6083
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 124: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5644, Val 10.4135, Test 10.2475
          MAE              : Train 7.0488, Val 7.6621, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 125: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0601, Test -0.0645
          RMSE             : Train 9.5644, Val 10.4131, Test 10.2472
          MAE              : Train 7.0484, Val 7.6613, Test 7.6086
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 126: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5644, Val 10.4133, Test 10.2474
          MAE              : Train 7.0484, Val 7.6618, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 127: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0601, Test -0.0645
          RMSE             : Train 9.5644, Val 10.4131, Test 10.2471
          MAE              : Train 7.0490, Val 7.6611, Test 7.6084
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 128: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5644, Val 10.4135, Test 10.2476
          MAE              : Train 7.0484, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 129: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5644, Val 10.4135, Test 10.2475
          MAE              : Train 7.0487, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 130: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0645
          RMSE             : Train 9.5644, Val 10.4132, Test 10.2472
          MAE              : Train 7.0487, Val 7.6615, Test 7.6087
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 131: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5644, Val 10.4136, Test 10.2476
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.06it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.37it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.51it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.20it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.43it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.63it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.81it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.41it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.31it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.70it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.39it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.77it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.02it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.83it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 49.18it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 40.96it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 39.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 44.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:10,  5.84it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 20.22it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.99it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.85it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.47it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.26it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.89it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.55it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.12it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.87it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.85it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.52it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.89it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.41it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 30.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.45it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01,  9.28it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 25.67it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.50it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 14.04it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.64it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.94it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.33it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.59it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 36.42it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.99it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.10it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.27it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.22it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.20it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.01it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.85it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.43it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.09it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.95it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.35it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.74it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.73it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.64it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.70it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.05it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.18it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.65it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.60it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.73it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.57it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.21it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.09it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 30.43it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.73it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 31.68it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.33it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:14,  4.17it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.84it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.18it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.61it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.25it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.38it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.53it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 35.34it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.86it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.13it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 27.78it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.15it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.42it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01,  9.99it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.47it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.86it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.16it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.45it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.39it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.67it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.80it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 33.67it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.66it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.61it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.69it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.35it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.08it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.15it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.35it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.76it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  4.73it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 22.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 24.29it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.44it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.13it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.19it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.60it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.54it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.04it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 33.25it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.37it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.17it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.94it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.02it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.27it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.93it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.64it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 28.84it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.18it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 26.23it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.01it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.85it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.48it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.75it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 21.19it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.54it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.62it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 34.27it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.53it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.90it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.78it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.54it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.45it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.51it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.10it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 30.59it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.74it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.25it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.46it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.40it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.09it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.82it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.04it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.14it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.99it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.81it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 30.29it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.79it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.61it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.96it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.06it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.50it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.72it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.45it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.58it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 30.39it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.76it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.76it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.45it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.62it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.20it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.87it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.46it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 31.74it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.41it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.10it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.18it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.03it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.65it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.56it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.05it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.61it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.93it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.79it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.56it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.55it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.59it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.16it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.56it/s]Train:  40%|████      | 24/60 [00:00<00:01, 25.97it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.23it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.92it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.19it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 34.07it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.94it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.15it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.88it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.48it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.93it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 30.25it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.16it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.70it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.85it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.26it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.43it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.92it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 26.54it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.64it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.81it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.52it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.69it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.05it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.10it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.56it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.68it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.30it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.21it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 37.11it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.19it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.40it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.91it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.91it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.74it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.38it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 35.81it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 31.46it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.00it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.27it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.05it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.49it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 33.17it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 30.53it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.79it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.43it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.79it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 33.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.80it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.75it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.51it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.64it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.67it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 36.56it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 34.42it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.79it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.46it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.83it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.06it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.86it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.52it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.39it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.86it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.26it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.01it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 31.37it/s]Train:  20%|██        | 12/60 [00:00<00:01, 32.11it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.33it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.90it/s]Train:  43%|████▎     | 26/60 [00:00<00:00, 34.01it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 34.66it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.20it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.96it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 35.98it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.24it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.54it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 12.81it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.22it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 29.41it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.28it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.69it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.81it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.20it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.99it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.55it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.60it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.99it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.64it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.59it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 30.65it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.07it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 35.47it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.45it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.43it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.99it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 32.60it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 29.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.60it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 31.37it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 34.34it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.33it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.22it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.25it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.62it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.93it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.50it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.52it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.81it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.36it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.09it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.80it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.03it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.38it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.61it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.04it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 48.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.82it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.14it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.91it/s]
          MAE              : Train 7.0484, Val 7.6622, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 132: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5644, Val 10.4134, Test 10.2474
          MAE              : Train 7.0487, Val 7.6619, Test 7.6091
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 133: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0647
          RMSE             : Train 9.5644, Val 10.4138, Test 10.2478
          MAE              : Train 7.0482, Val 7.6626, Test 7.6097
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 134: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0647
          RMSE             : Train 9.5643, Val 10.4139, Test 10.2479
          MAE              : Train 7.0491, Val 7.6627, Test 7.6099
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 135: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5643, Val 10.4137, Test 10.2477
          MAE              : Train 7.0490, Val 7.6624, Test 7.6096
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 136: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5643, Val 10.4134, Test 10.2474
          MAE              : Train 7.0489, Val 7.6618, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 137: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5643, Val 10.4134, Test 10.2474
          MAE              : Train 7.0482, Val 7.6618, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 138: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5643, Val 10.4137, Test 10.2478
          MAE              : Train 7.0490, Val 7.6625, Test 7.6096
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 139: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0647
          RMSE             : Train 9.5643, Val 10.4138, Test 10.2478
          MAE              : Train 7.0492, Val 7.6627, Test 7.6098
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 140: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5643, Val 10.4134, Test 10.2474
          MAE              : Train 7.0488, Val 7.6618, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 141: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5643, Val 10.4136, Test 10.2477
          MAE              : Train 7.0492, Val 7.6622, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 142: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5643, Val 10.4135, Test 10.2475
          MAE              : Train 7.0481, Val 7.6617, Test 7.6089
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 143: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4135, Test 10.2475
          MAE              : Train 7.0483, Val 7.6618, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 144: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4135, Test 10.2475
          MAE              : Train 7.0483, Val 7.6618, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 145: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4135, Test 10.2475
          MAE              : Train 7.0483, Val 7.6617, Test 7.6089
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 146: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4135, Test 10.2475
          MAE              : Train 7.0483, Val 7.6618, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 147: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4135, Test 10.2475
          MAE              : Train 7.0483, Val 7.6618, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 148: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4135, Test 10.2475
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.90it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.96it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.63it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.40it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.90it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.46it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.83it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 27.93it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.14it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 32.31it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.20it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.76it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 28.06it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.34it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.40it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 25.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.88it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.60it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.56it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.04it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.40it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.62it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.07it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.67it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.02it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 34.05it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.04it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 35.75it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 32.41it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.71it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.11it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.00it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.80it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 29.43it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.82it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.87it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 28.77it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.83it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.80it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.87it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.29it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.50it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.18it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.42it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.95it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.69it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.82it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 36.51it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 25.75it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.40it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.90it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 26.75it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.47it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.92it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.59it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.12it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.96it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.93it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.94it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.88it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.64it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.93it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.42it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.33it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.11it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.15it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.69it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.46it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.28it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 34.88it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.15it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.62it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.32it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.21it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.75it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.74it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.68it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.17it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.62it/s]Train:  40%|████      | 24/60 [00:00<00:01, 25.47it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.99it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.32it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.89it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.68it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.13it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.75it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.34it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 31.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.74it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.85it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 34.66it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.87it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:07,  8.25it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.29it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.83it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.19it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.12it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.79it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.03it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.05it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.04it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.74it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.34it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.47it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 29.00it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.91it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 41.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 49.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.48it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 35.37it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 25.30it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 36.61it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 31.00it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.96it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.15it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 24.87it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.08it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.22it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.05it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.50it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.60it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.34it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 29.76it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.09it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.50it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 26.06it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 27.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 47.22it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.95it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.54it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.13it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.84it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 28.11it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.01it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.38it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.26it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.55it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.58it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 32.53it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 22.05it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.57it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.99it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.64it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.92it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.27it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.40it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.43it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.51it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.08it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.08it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.01it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.08it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.11it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.11it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.41it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.62it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.56it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 31.03it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.34it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 29.78it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.27it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.44it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.96it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.87it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.21it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.36it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.02it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.57it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.50it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.94it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.71it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.28it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.21it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.90it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 31.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.23it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.77it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.81it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 29.21it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.94it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.56it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.59it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.53it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 28.77it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.17it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 27.15it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.85it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.62it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.80it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.13it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.75it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.78it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.26it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.30it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.06it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 24.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.38it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.35it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.18it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.88it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.25it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.91it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.47it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 35.11it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.91it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.99it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.34it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.13it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.22it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 24.26it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.27it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.46it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.05it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.71it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.70it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.46it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.61it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.36it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.32it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.94it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.46it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.55it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 34.89it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.52it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.11it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 35.02it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.25it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.29it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 39.74it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.43it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 23.65it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 30.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.82it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.15it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 33.41it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.42it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.57it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.40it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.11it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.91it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.60it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.31it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.80it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 30.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.25it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.54it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.09it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.50it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.56it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.60it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.29it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.47it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 36.81it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.01it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.99it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.99it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.85it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.55it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.70it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 48.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.46it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 34.44it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 33.92it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.20it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.21it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.97it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.22it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.11it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.29it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.42it/s]Train:  43%|████▎     | 26/60 [00:00<00:00, 34.26it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.58it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.20it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.79it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 35.10it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.69it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.72it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.97it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 13.69it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.85it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.53it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.57it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.58it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.68it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.18it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.80it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.35it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.98it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 31.49it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.44it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.70it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.52it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.80it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.72it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.39it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 22.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.72it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.77it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 35.72it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.29it/s]
          MAE              : Train 7.0483, Val 7.6618, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 149: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4135, Test 10.2476
          MAE              : Train 7.0483, Val 7.6618, Test 7.6090
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 150: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4136, Test 10.2476
          MAE              : Train 7.0483, Val 7.6619, Test 7.6091
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 151: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4136, Test 10.2476
          MAE              : Train 7.0484, Val 7.6619, Test 7.6091
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 152: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4136, Test 10.2476
          MAE              : Train 7.0484, Val 7.6619, Test 7.6091
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 153: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4136, Test 10.2476
          MAE              : Train 7.0484, Val 7.6619, Test 7.6091
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 154: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0602, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4136, Test 10.2476
          MAE              : Train 7.0484, Val 7.6619, Test 7.6091
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 155: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4136, Test 10.2477
          MAE              : Train 7.0484, Val 7.6619, Test 7.6092
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 156: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4136, Test 10.2477
          MAE              : Train 7.0484, Val 7.6620, Test 7.6092
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 157: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4136, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 158: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 159: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4136, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 160: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4136, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 161: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4137, Test 10.2477
          MAE              : Train 7.0486, Val 7.6622, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 162: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4136, Test 10.2477
          MAE              : Train 7.0486, Val 7.6622, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 163: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0486, Val 7.6622, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 164: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0486, Val 7.6622, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 165: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4137, Test 10.2478
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.99it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 30.19it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.29it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.03it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.20it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.49it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.11it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.82it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 35.62it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 35.34it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.67it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 39.45it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.82it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.50it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.72it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 26.86it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.57it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.25it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.55it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.78it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.12it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.00it/s]Train:  43%|████▎     | 26/60 [00:00<00:00, 35.39it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 31.33it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.35it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.74it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 32.46it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 33.20it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.86it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.95it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 14.90it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 40.79it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.77it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.66it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 28.20it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.00it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.76it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.05it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 34.34it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 34.39it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.47it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.38it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.52it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.41it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.37it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 32.06it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.11it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 33.37it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 35.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.96it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.22it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.23it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.00it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.44it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.30it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.38it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.64it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.12it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.76it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.42it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.24it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.23it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 29.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.95it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.92it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.16it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 33.82it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.30it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.68it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 25.70it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 31.46it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 36.94it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 34.31it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.29it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.49it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 35.00it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.72it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.41it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.21it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.34it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 23.51it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 22.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.08it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 31.43it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 36.74it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 34.23it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 35.31it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 40.78it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 30.12it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.99it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.96it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.88it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.18it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.72it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.86it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.97it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.48it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.44it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.32it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 27.73it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.74it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 33.94it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.81it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 30.29it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.21it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 32.16it/s]Train:  20%|██        | 12/60 [00:00<00:01, 31.71it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.26it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.23it/s]Train:  42%|████▏     | 25/60 [00:00<00:00, 35.67it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.25it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.44it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.34it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.33it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.82it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.58it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 28.89it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.23it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  6.35it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.68it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 27.13it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.09it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.71it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.40it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.33it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.21it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.38it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.89it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 35.52it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.83it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.24it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 25.85it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.52it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 28.37it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 27.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.75it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 49.04it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 39.33it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 36.20it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.64it/s]Train:  10%|█         | 6/60 [00:00<00:01, 30.51it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.49it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.68it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.15it/s]Train:  40%|████      | 24/60 [00:00<00:01, 28.71it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.01it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.84it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.72it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.09it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.17it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.98it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 27.69it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.15it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.03it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.81it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.05it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.87it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.02it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.71it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.66it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.47it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 34.15it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.16it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 37.25it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 36.01it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 34.95it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.16it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.76it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  6.85it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.96it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 27.56it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.70it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 30.46it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.64it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.27it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.69it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.85it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.44it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 32.68it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.81it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.05it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.38it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 32.87it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.20it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.60it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.47it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.98it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 32.98it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.57it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.82it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.44it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.16it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.61it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.01it/s]Train:  30%|███       | 18/60 [00:00<00:01, 33.17it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.08it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 27.98it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 26.91it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.75it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.81it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.16it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.66it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 28.75it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.66it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.48it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.23it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 30.91it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.43it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.38it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.34it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.98it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.14it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.50it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.05it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.90it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.08it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.38it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.14it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.65it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.33it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.64it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.71it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 33.78it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.08it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.98it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.06it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.18it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.73it/s]Train:  55%|█████▌    | 33/60 [00:00<00:00, 36.51it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.21it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.14it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.16it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 33.57it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.27it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 28.08it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 13.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.91it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.61it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.45it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.23it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.58it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 30.05it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.31it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.82it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.10it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.21it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.49it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.50it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.50it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.89it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 33.45it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.29it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 17.04it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.33it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.57it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.60it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.72it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.95it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 33.00it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.71it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.92it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 37.08it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.87it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.33it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.76it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.20it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.31it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 25.59it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.46it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00,  9.10it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 23.26it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.82it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.44it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.81it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.69it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 18.93it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.97it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.04it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.24it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.83it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.56it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.36it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 35.26it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 32.37it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.90it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.39it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.12it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  8.45it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.14it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 22.10it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 22.57it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 29.87it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.29it/s]
          MAE              : Train 7.0486, Val 7.6623, Test 7.6095
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 166: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0486, Val 7.6622, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 167: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4137, Test 10.2478
          MAE              : Train 7.0486, Val 7.6623, Test 7.6095
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 168: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4137, Test 10.2477
          MAE              : Train 7.0487, Val 7.6623, Test 7.6095
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 169: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4137, Test 10.2478
          MAE              : Train 7.0486, Val 7.6623, Test 7.6095
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 170: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5642, Val 10.4137, Test 10.2477
          MAE              : Train 7.0486, Val 7.6622, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 171: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0486, Val 7.6622, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 172: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2478
          MAE              : Train 7.0486, Val 7.6622, Test 7.6094
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 173: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0486, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 174: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 175: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 176: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 177: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 178: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 179: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 180: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 181: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 182: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.30it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.58it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.63it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.81it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.83it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.30it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.07it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.25it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.81it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.45it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.75it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.51it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.40it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.23it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.81it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 24.35it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.14it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 30.40it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.62it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.06it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.40it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.38it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.37it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.22it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.83it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 35.34it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.67it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.95it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.50it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.08it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 36.22it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.49it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.80it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.15it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.21it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.97it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.38it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.93it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 27.21it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.17it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.87it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.17it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.02it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.69it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.84it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 33.25it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.95it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.16it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.33it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.59it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 35.61it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 32.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.77it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 19.74it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.22it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.72it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:11,  5.10it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 19.25it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.99it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.70it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.78it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.35it/s]Train:  40%|████      | 24/60 [00:01<00:01, 26.88it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 30.93it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.42it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.69it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.46it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.39it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.33it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 32.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 36.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.03it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.57it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.62it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 12.64it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.43it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.50it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.50it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.47it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.91it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.73it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.12it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.87it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.38it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.97it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.80it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.98it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 31.83it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 32.53it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.41it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.35it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 26.28it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.62it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.00it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.14it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.82it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.82it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.47it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.81it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.77it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.52it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.21it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.93it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.37it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.73it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.60it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.39it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.50it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.70it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.47it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.19it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.20it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.33it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.78it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.43it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.27it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.44it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.44it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.16it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.46it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.24it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.23it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.60it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.32it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.71it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 34.23it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.95it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 28.61it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.26it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.19it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.37it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.68it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.59it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.72it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 28.57it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.85it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.39it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.83it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.01it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.00it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 36.35it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 33.80it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.08it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 36.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.45it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.86it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 29.92it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.11it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.98it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.05it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.47it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.89it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.03it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.90it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.11it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.84it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.36it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.87it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.46it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.43it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.07it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.67it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.64it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.27it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.09it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.65it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.41it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.87it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.53it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.94it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 34.00it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 37.32it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 35.65it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.40it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.71it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 35.01it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.26it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 33.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 15.85it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 26.89it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 18.48it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 30.03it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.64it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.76it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.66it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.31it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.40it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.50it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.02it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.59it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 32.07it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.37it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.55it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.94it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.27it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.38it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.04it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 26.67it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.11it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.03it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.94it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.58it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.46it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.84it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.65it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.83it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.16it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.93it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.43it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 28.43it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 29.27it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 23.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.06it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 29.74it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.76it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.33it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.61it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 25.92it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.82it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.40it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.44it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.83it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 34.36it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.59it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.85it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 32.39it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.15it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.85it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.16it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.08it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 20.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.63it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.83it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 36.99it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.95it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.14it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.59it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 33.01it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 34.23it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.05it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.99it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.34it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.51it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.83it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 24.88it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 27.54it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 26.67it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.86it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 20.53it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 17.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 19.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.42it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.83it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.87it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.48it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.88it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.48it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 35.10it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 34.19it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.36it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.88it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.12it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 36.26it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.21it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.79it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.72it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.13it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.36it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 12.77it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.27it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.88it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.62it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.55it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.56it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.83it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.38it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.38it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.63it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.50it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.28it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.55it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 32.26it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.82it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.44it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.93it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.23it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 49.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.61it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.84it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 34.45it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.70it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.37it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.16it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 12.93it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.10it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.86it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.49it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 34.59it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.97it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 32.21it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.99it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.56it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 36.35it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.60it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.72it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.47it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.07it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 31.37it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.90it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 24.11it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.50it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.45it/s]
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 183: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 184: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 185: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 186: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 187: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 188: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 189: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 190: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 191: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 192: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 193: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 194: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 195: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 196: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 197: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 198: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 199: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.54it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 14.56it/s]Train:  10%|█         | 6/60 [00:00<00:03, 13.96it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.06it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.47it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.66it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.59it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 27.18it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.26it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.25it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.21it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.50it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.54it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.02it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.09it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.46it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.51it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 21.73it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.62it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.71it/s]

          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
Epoch 200: Loss:            : Train 0.0115, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1028, Val -0.0603, Test -0.0646
          RMSE             : Train 9.5641, Val 10.4137, Test 10.2477
          MAE              : Train 7.0485, Val 7.6621, Test 7.6093
Best:
          R2_Score         : Train 0.0368, Val -0.0220, Test -0.0265
          RMSE             : Train 9.9096, Val 10.2242, Test 10.0624
          MAE              : Train 7.3423, Val 7.5341, Test 7.4933
