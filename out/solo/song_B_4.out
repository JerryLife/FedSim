  0%|          | 0/244489 [00:00<?, ?it/s]  0%|          | 418/244489 [00:00<00:58, 4175.85it/s]  0%|          | 1189/244489 [00:00<00:38, 6252.22it/s]  1%|          | 1974/244489 [00:00<00:34, 6980.02it/s]  1%|          | 2824/244489 [00:00<00:31, 7579.46it/s]  1%|▏         | 3582/244489 [00:00<00:33, 7130.57it/s]  2%|▏         | 4300/244489 [00:00<00:35, 6695.47it/s]  2%|▏         | 5178/244489 [00:00<00:32, 7326.46it/s]  2%|▏         | 5921/244489 [00:00<00:32, 7356.05it/s]  3%|▎         | 6826/244489 [00:00<00:30, 7865.87it/s]  3%|▎         | 7649/244489 [00:01<00:29, 7972.81it/s]  3%|▎         | 8546/244489 [00:01<00:28, 8271.15it/s]  4%|▍         | 9377/244489 [00:01<00:28, 8119.49it/s]  4%|▍         | 10266/244489 [00:01<00:28, 8346.00it/s]  5%|▍         | 11104/244489 [00:01<00:28, 8086.42it/s]  5%|▍         | 11916/244489 [00:01<00:28, 8062.18it/s]  5%|▌         | 12734/244489 [00:01<00:28, 8094.77it/s]  6%|▌         | 13609/244489 [00:01<00:27, 8285.32it/s]  6%|▌         | 14466/244489 [00:01<00:27, 8368.33it/s]  6%|▋         | 15413/244489 [00:01<00:26, 8695.28it/s]  7%|▋         | 16304/244489 [00:02<00:26, 8757.38it/s]  7%|▋         | 17266/244489 [00:02<00:25, 9014.26it/s]  7%|▋         | 18218/244489 [00:02<00:24, 9163.46it/s]  8%|▊         | 19135/244489 [00:02<00:24, 9054.00it/s]  8%|▊         | 20042/244489 [00:02<00:26, 8518.23it/s]  9%|▊         | 20901/244489 [00:02<00:28, 7880.26it/s]  9%|▉         | 21702/244489 [00:02<00:29, 7607.17it/s]  9%|▉         | 22472/244489 [00:02<00:29, 7410.65it/s] 10%|▉         | 23395/244489 [00:02<00:27, 7908.59it/s] 10%|▉         | 24289/244489 [00:03<00:26, 8198.20it/s] 10%|█         | 25219/244489 [00:03<00:25, 8512.31it/s] 11%|█         | 26078/244489 [00:03<00:27, 7903.63it/s] 11%|█         | 26881/244489 [00:03<00:27, 7789.38it/s] 11%|█▏        | 27669/244489 [00:03<00:29, 7413.10it/s] 12%|█▏        | 28419/244489 [00:03<00:29, 7282.35it/s] 12%|█▏        | 29206/244489 [00:03<00:29, 7409.12it/s] 12%|█▏        | 29952/244489 [00:03<00:29, 7228.32it/s] 13%|█▎        | 30679/244489 [00:03<00:29, 7188.41it/s] 13%|█▎        | 31560/244489 [00:04<00:27, 7650.66it/s] 13%|█▎        | 32518/244489 [00:04<00:25, 8207.56it/s] 14%|█▎        | 33404/244489 [00:04<00:25, 8396.22it/s] 14%|█▍        | 34248/244489 [00:04<00:25, 8118.69it/s] 14%|█▍        | 35065/244489 [00:04<00:26, 7867.05it/s] 15%|█▍        | 35988/244489 [00:04<00:25, 8253.67it/s] 15%|█▌        | 36884/244489 [00:04<00:24, 8457.72it/s] 15%|█▌        | 37761/244489 [00:04<00:24, 8548.95it/s] 16%|█▌        | 38691/244489 [00:04<00:23, 8767.91it/s] 16%|█▌        | 39601/244489 [00:04<00:23, 8864.97it/s] 17%|█▋        | 40591/244489 [00:05<00:22, 9171.10it/s] 17%|█▋        | 41539/244489 [00:05<00:21, 9262.60it/s] 17%|█▋        | 42467/244489 [00:05<00:23, 8749.07it/s] 18%|█▊        | 43349/244489 [00:05<00:23, 8453.91it/s] 18%|█▊        | 44201/244489 [00:05<00:26, 7565.77it/s] 18%|█▊        | 44977/244489 [00:05<00:26, 7433.18it/s] 19%|█▉        | 45860/244489 [00:05<00:25, 7809.25it/s] 19%|█▉        | 46868/244489 [00:05<00:23, 8439.82it/s] 20%|█▉        | 47838/244489 [00:05<00:22, 8796.77it/s] 20%|█▉        | 48730/244489 [00:06<00:22, 8609.72it/s] 20%|██        | 49600/244489 [00:06<00:23, 8299.04it/s] 21%|██        | 50534/244489 [00:06<00:22, 8592.56it/s] 21%|██        | 51401/244489 [00:06<00:28, 6755.06it/s] 21%|██▏       | 52141/244489 [00:06<00:28, 6862.53it/s] 22%|██▏       | 52890/244489 [00:06<00:27, 7022.11it/s] 22%|██▏       | 53672/244489 [00:06<00:26, 7233.96it/s] 22%|██▏       | 54683/244489 [00:06<00:23, 8028.84it/s] 23%|██▎       | 55607/244489 [00:06<00:22, 8370.86it/s] 23%|██▎       | 56585/244489 [00:07<00:21, 8774.98it/s] 24%|██▎       | 57479/244489 [00:07<00:21, 8595.43it/s] 24%|██▍       | 58351/244489 [00:07<00:22, 8242.49it/s] 24%|██▍       | 59225/244489 [00:07<00:22, 8381.49it/s] 25%|██▍       | 60192/244489 [00:07<00:21, 8750.09it/s] 25%|██▌       | 61182/244489 [00:07<00:20, 9082.41it/s] 25%|██▌       | 62186/244489 [00:07<00:19, 9362.22it/s] 26%|██▌       | 63188/244489 [00:07<00:18, 9555.97it/s] 26%|██▌       | 64148/244489 [00:07<00:20, 8803.51it/s] 27%|██▋       | 65043/244489 [00:08<00:21, 8503.72it/s] 27%|██▋       | 65904/244489 [00:08<00:21, 8170.62it/s] 27%|██▋       | 66730/244489 [00:08<00:21, 8120.40it/s] 28%|██▊       | 67730/244489 [00:08<00:20, 8645.73it/s] 28%|██▊       | 68750/244489 [00:08<00:19, 9089.77it/s] 28%|██▊       | 69667/244489 [00:08<00:19, 8921.96it/s] 29%|██▉       | 70565/244489 [00:08<00:19, 8934.46it/s] 29%|██▉       | 71576/244489 [00:08<00:18, 9275.76it/s] 30%|██▉       | 72546/244489 [00:08<00:18, 9399.04it/s] 30%|███       | 73522/244489 [00:08<00:17, 9505.27it/s] 30%|███       | 74489/244489 [00:09<00:17, 9552.12it/s] 31%|███       | 75464/244489 [00:09<00:17, 9609.56it/s] 31%|███▏      | 76471/244489 [00:09<00:17, 9744.15it/s] 32%|███▏      | 77447/244489 [00:09<00:17, 9675.68it/s] 32%|███▏      | 78508/244489 [00:09<00:16, 9952.66it/s] 33%|███▎      | 79521/244489 [00:09<00:16, 10005.16it/s] 33%|███▎      | 80523/244489 [00:09<00:16, 9872.49it/s]  33%|███▎      | 81593/244489 [00:09<00:16, 10116.63it/s] 34%|███▍      | 82619/244489 [00:09<00:15, 10157.27it/s] 34%|███▍      | 83698/244489 [00:09<00:15, 10344.66it/s] 35%|███▍      | 84745/244489 [00:10<00:15, 10381.85it/s] 35%|███▌      | 85784/244489 [00:10<00:15, 10301.80it/s] 36%|███▌      | 86815/244489 [00:10<00:15, 10161.92it/s] 36%|███▌      | 87832/244489 [00:10<00:16, 9660.83it/s]  36%|███▋      | 88804/244489 [00:10<00:17, 9130.43it/s] 37%|███▋      | 89810/244489 [00:10<00:16, 9386.96it/s] 37%|███▋      | 90852/244489 [00:10<00:15, 9679.96it/s] 38%|███▊      | 91898/244489 [00:10<00:15, 9903.95it/s] 38%|███▊      | 92968/244489 [00:10<00:14, 10135.00it/s] 38%|███▊      | 94025/244489 [00:10<00:14, 10261.09it/s] 39%|███▉      | 95110/244489 [00:11<00:14, 10432.99it/s] 39%|███▉      | 96175/244489 [00:11<00:14, 10496.47it/s] 40%|███▉      | 97255/244489 [00:11<00:13, 10584.77it/s] 40%|████      | 98315/244489 [00:11<00:13, 10588.07it/s] 41%|████      | 99399/244489 [00:11<00:13, 10661.66it/s] 41%|████      | 100466/244489 [00:11<00:13, 10638.80it/s] 42%|████▏     | 101561/244489 [00:11<00:13, 10730.50it/s] 42%|████▏     | 102635/244489 [00:11<00:13, 10712.50it/s] 42%|████▏     | 103707/244489 [00:11<00:13, 10674.11it/s] 43%|████▎     | 104806/244489 [00:11<00:12, 10765.73it/s] 43%|████▎     | 105883/244489 [00:12<00:12, 10732.65it/s] 44%|████▍     | 106982/244489 [00:12<00:12, 10806.87it/s] 44%|████▍     | 108063/244489 [00:12<00:13, 10318.77it/s] 45%|████▍     | 109100/244489 [00:12<00:13, 9852.72it/s]  45%|████▌     | 110092/244489 [00:12<00:14, 9585.58it/s] 45%|████▌     | 111056/244489 [00:12<00:14, 9268.67it/s] 46%|████▌     | 111987/244489 [00:12<00:14, 9043.00it/s] 46%|████▌     | 112895/244489 [00:12<00:14, 8970.35it/s] 47%|████▋     | 113794/244489 [00:12<00:14, 8725.47it/s] 47%|████▋     | 114668/244489 [00:13<00:16, 8060.01it/s] 47%|████▋     | 115483/244489 [00:13<00:16, 7656.83it/s] 48%|████▊     | 116377/244489 [00:13<00:16, 7999.61it/s] 48%|████▊     | 117202/244489 [00:13<00:15, 8068.84it/s] 48%|████▊     | 118016/244489 [00:13<00:16, 7563.09it/s] 49%|████▊     | 118782/244489 [00:13<00:16, 7456.54it/s] 49%|████▉     | 119660/244489 [00:13<00:15, 7822.98it/s] 49%|████▉     | 120525/244489 [00:13<00:15, 8056.34it/s] 50%|████▉     | 121381/244489 [00:13<00:15, 8200.69it/s] 50%|█████     | 122265/244489 [00:14<00:14, 8385.45it/s] 50%|█████     | 123108/244489 [00:14<00:14, 8119.91it/s] 51%|█████     | 123925/244489 [00:14<00:15, 7775.90it/s] 51%|█████     | 124749/244489 [00:14<00:15, 7906.87it/s] 51%|█████▏    | 125634/244489 [00:14<00:14, 8176.35it/s] 52%|█████▏    | 126494/244489 [00:14<00:14, 8298.20it/s] 52%|█████▏    | 127380/244489 [00:14<00:13, 8461.03it/s] 52%|█████▏    | 128229/244489 [00:14<00:13, 8447.38it/s] 53%|█████▎    | 129093/244489 [00:14<00:13, 8501.03it/s] 53%|█████▎    | 129980/244489 [00:14<00:13, 8609.98it/s] 54%|█████▎    | 130843/244489 [00:15<00:13, 8613.27it/s] 54%|█████▍    | 131734/244489 [00:15<00:12, 8701.42it/s] 54%|█████▍    | 132605/244489 [00:15<00:12, 8689.35it/s] 55%|█████▍    | 133483/244489 [00:15<00:12, 8715.34it/s] 55%|█████▌    | 134962/244489 [00:15<00:10, 10532.02it/s] 56%|█████▌    | 137094/244489 [00:15<00:07, 13762.15it/s] 57%|█████▋    | 138472/244489 [00:15<00:07, 13701.94it/s] 57%|█████▋    | 140135/244489 [00:15<00:07, 14575.82it/s] 58%|█████▊    | 141908/244489 [00:15<00:06, 15517.99it/s] 59%|█████▊    | 143543/244489 [00:15<00:06, 15764.79it/s] 59%|█████▉    | 145453/244489 [00:16<00:05, 16762.28it/s] 60%|██████    | 147616/244489 [00:16<00:05, 18219.65it/s] 61%|██████    | 149685/244489 [00:16<00:05, 18958.36it/s] 62%|██████▏   | 151749/244489 [00:16<00:04, 19459.66it/s] 63%|██████▎   | 153696/244489 [00:16<00:04, 18497.84it/s] 64%|██████▎   | 155556/244489 [00:16<00:04, 18399.64it/s] 65%|██████▍   | 157701/244489 [00:16<00:04, 19286.87it/s] 65%|██████▌   | 159748/244489 [00:16<00:04, 19633.07it/s] 66%|██████▌   | 161718/244489 [00:16<00:04, 19040.36it/s] 67%|██████▋   | 163630/244489 [00:17<00:04, 18118.18it/s] 68%|██████▊   | 165475/244489 [00:17<00:04, 18209.92it/s] 68%|██████▊   | 167306/244489 [00:17<00:05, 14663.40it/s] 69%|██████▉   | 168885/244489 [00:17<00:05, 14228.07it/s] 70%|██████▉   | 170850/244489 [00:17<00:04, 15595.79it/s] 71%|███████   | 172747/244489 [00:17<00:04, 16488.65it/s] 71%|███████▏  | 174651/244489 [00:17<00:04, 17187.08it/s] 72%|███████▏  | 176629/244489 [00:17<00:03, 17915.03it/s] 73%|███████▎  | 178463/244489 [00:17<00:03, 17469.84it/s] 74%|███████▎  | 180241/244489 [00:18<00:03, 17524.50it/s] 74%|███████▍  | 182016/244489 [00:18<00:03, 17255.84it/s] 75%|███████▌  | 184000/244489 [00:18<00:03, 17997.53it/s] 76%|███████▌  | 185924/244489 [00:18<00:03, 18038.11it/s] 77%|███████▋  | 187738/244489 [00:18<00:03, 16894.83it/s] 78%|███████▊  | 189486/244489 [00:18<00:03, 17056.82it/s] 78%|███████▊  | 191276/244489 [00:18<00:03, 16976.03it/s] 79%|███████▉  | 192984/244489 [00:18<00:03, 14400.34it/s] 80%|███████▉  | 194602/244489 [00:18<00:03, 14855.02it/s] 80%|████████  | 196435/244489 [00:19<00:03, 15787.41it/s] 81%|████████  | 198245/244489 [00:19<00:02, 16427.63it/s] 82%|████████▏ | 200124/244489 [00:19<00:02, 17095.01it/s] 83%|████████▎ | 201866/244489 [00:19<00:02, 17110.99it/s] 83%|████████▎ | 203663/244489 [00:19<00:02, 17360.28it/s] 84%|████████▍ | 205416/244489 [00:19<00:02, 17010.63it/s] 85%|████████▍ | 207150/244489 [00:19<00:02, 17106.24it/s] 86%|████████▌ | 209081/244489 [00:19<00:01, 17752.24it/s] 86%|████████▋ | 210995/244489 [00:19<00:01, 18161.77it/s] 87%|████████▋ | 212818/244489 [00:19<00:01, 17995.82it/s] 88%|████████▊ | 214623/244489 [00:20<00:01, 17394.21it/s] 88%|████████▊ | 216370/244489 [00:20<00:01, 17228.07it/s] 89%|████████▉ | 218098/244489 [00:20<00:01, 17151.42it/s] 90%|████████▉ | 219885/244489 [00:20<00:01, 17360.62it/s] 91%|█████████ | 221966/244489 [00:20<00:01, 18373.89it/s] 92%|█████████▏| 224050/244489 [00:20<00:01, 19102.05it/s] 92%|█████████▏| 226075/244489 [00:20<00:00, 19442.75it/s] 93%|█████████▎| 228023/244489 [00:20<00:00, 18231.11it/s] 94%|█████████▍| 229864/244489 [00:20<00:00, 17927.79it/s] 95%|█████████▍| 231922/244489 [00:21<00:00, 18683.51it/s] 96%|█████████▌| 234110/244489 [00:21<00:00, 19608.56it/s] 97%|█████████▋| 236169/244489 [00:21<00:00, 19894.69it/s] 97%|█████████▋| 238168/244489 [00:21<00:00, 19908.26it/s] 98%|█████████▊| 240166/244489 [00:21<00:00, 19847.31it/s] 99%|█████████▉| 242156/244489 [00:21<00:00, 19701.27it/s]100%|█████████▉| 244130/244489 [00:21<00:00, 19640.31it/s]100%|██████████| 244489/244489 [00:21<00:00, 11293.49it/s]
  0%|          | 0/34927 [00:00<?, ?it/s] 18%|█▊        | 6282/34927 [00:00<00:00, 62816.32it/s] 36%|███▌      | 12564/34927 [00:00<00:00, 53497.46it/s] 52%|█████▏    | 18002/34927 [00:00<00:00, 48628.19it/s] 70%|███████   | 24545/34927 [00:00<00:00, 54502.18it/s] 86%|████████▌ | 30111/34927 [00:00<00:00, 51378.63it/s]100%|██████████| 34927/34927 [00:00<00:00, 51127.31it/s]
  0%|          | 0/69854 [00:00<?, ?it/s]  3%|▎         | 2126/69854 [00:00<00:03, 21255.10it/s]  7%|▋         | 4668/69854 [00:00<00:02, 23703.06it/s] 10%|█         | 7291/69854 [00:00<00:02, 24852.84it/s] 14%|█▍        | 9777/69854 [00:00<00:02, 24293.39it/s] 17%|█▋        | 12209/69854 [00:00<00:02, 22574.98it/s] 21%|██        | 14486/69854 [00:00<00:02, 21928.21it/s] 24%|██▍       | 16692/69854 [00:00<00:02, 20780.65it/s] 27%|██▋       | 18916/69854 [00:00<00:02, 21208.19it/s] 30%|███       | 21051/69854 [00:00<00:02, 20787.17it/s] 33%|███▎      | 23139/69854 [00:01<00:02, 20464.83it/s] 37%|███▋      | 25735/69854 [00:01<00:01, 22061.56it/s] 41%|████      | 28304/69854 [00:01<00:01, 23125.57it/s] 44%|████▍     | 30629/69854 [00:01<00:01, 22565.55it/s] 47%|████▋     | 32897/69854 [00:01<00:01, 20968.08it/s] 50%|█████     | 35249/69854 [00:01<00:01, 21676.54it/s] 54%|█████▎    | 37441/69854 [00:01<00:01, 20969.06it/s] 57%|█████▋    | 39557/69854 [00:01<00:01, 20655.88it/s] 60%|█████▉    | 41636/69854 [00:01<00:01, 20164.28it/s] 63%|██████▎   | 43662/69854 [00:02<00:01, 19266.70it/s] 65%|██████▌   | 45600/69854 [00:02<00:01, 18965.89it/s] 68%|██████▊   | 47703/69854 [00:02<00:01, 19545.61it/s] 71%|███████   | 49667/69854 [00:02<00:01, 19480.20it/s] 74%|███████▍  | 51621/69854 [00:02<00:00, 18461.30it/s] 77%|███████▋  | 53480/69854 [00:02<00:00, 18027.03it/s] 79%|███████▉  | 55292/69854 [00:02<00:00, 17983.60it/s] 82%|████████▏ | 57097/69854 [00:02<00:00, 16716.68it/s] 85%|████████▍ | 59046/69854 [00:02<00:00, 17477.87it/s] 87%|████████▋ | 61106/69854 [00:03<00:00, 18357.28it/s] 90%|█████████ | 62961/69854 [00:03<00:00, 17893.46it/s] 93%|█████████▎| 65066/69854 [00:03<00:00, 18791.85it/s] 96%|█████████▋| 67365/69854 [00:03<00:00, 20005.67it/s]100%|█████████▉| 69802/69854 [00:03<00:00, 21281.22it/s]100%|██████████| 69854/69854 [00:03<00:00, 20376.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:102: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  train_dataset = TensorDataset(torch.tensor(train_X).float(), torch.tensor(train_y).float())
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.09it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 19.30it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.94it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.65it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.31it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.85it/s]Train:  40%|████      | 24/60 [00:00<00:01, 25.95it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.43it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.99it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.18it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 21.07it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.40it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.18it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 21.47it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 22.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.48it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 26.43it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 26.67it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.41it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 31.34it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.05it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.95it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.34it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 23.04it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.21it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.29it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.27it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.10it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.16it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.49it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 27.70it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 33.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 28.51it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 28.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.53it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.19it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.98it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.56it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 29.48it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.78it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.47it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.15it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.71it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.27it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 33.12it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.18it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.23it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.22it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.07it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.62it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.03it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.06it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.28it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.23it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 29.98it/s]Train:  12%|█▏        | 7/60 [00:00<00:03, 14.25it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.85it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.38it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.56it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.00it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.78it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.13it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.99it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.69it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.46it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.94it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 30.08it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.57it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.78it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.83it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.40it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 16.55it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.30it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 18.35it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 20.93it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.48it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.87it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.51it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.59it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.78it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.61it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 30.91it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 30.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.85it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.60it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.70it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.47it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.07it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.30it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.04it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.39it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.22it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.06it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.15it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.98it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.01it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.39it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.82it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.83it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.20it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.22it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 45.90it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.12it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.05it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.66it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.16it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 21.51it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.94it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.80it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.64it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.52it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.61it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.05it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.09it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.68it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.76it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.58it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.99it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.61it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 33.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.14it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.41it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 27.62it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 25.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.20it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.50it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.53it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.91it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.58it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 27.64it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.38it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.82it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.05it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.02it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.61it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 27.46it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.78it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.27it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.72it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.89it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 29.10it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 38.06it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 33.06it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.46it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.09it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.24it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.74it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.67it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.28it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 25.40it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.49it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 27.71it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.81it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.87it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 38.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.51it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.21it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.40it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.96it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.20it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.12it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 23.29it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.73it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.25it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.98it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.15it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.37it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.35it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.31it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.47it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.34it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.55it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.74it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.11it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 32.46it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.16it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.10it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 31.02it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.02it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.53it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.19it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.95it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.97it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.11it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.71it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.72it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.02it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 25.95it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.19it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.95it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.86it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 27.97it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.92it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 38.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 28.27it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 31.82it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.14it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.95it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 36.32it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 32.73it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.29it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.02it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.73it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.65it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 26.30it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 27.92it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 19.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.66it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 31.02it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 38.16it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.60it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.87it/s]Loading MSD from data/song/msd_clean.csv
Loading FMA from data/song/fma_clean.csv
Current MSD columns Index(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
       '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24',
       '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36',
       '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48',
       '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60',
       '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72',
       '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84',
       '85', '86', '87', '88', '89', 'title'],
      dtype='object')
Current FMA columns Index(['title', '0', '1', '2', '3', '4', '5', '6', '7', '8',
       ...
       '508', '509', '510', '511', '512', '513', '514', '515', '516', '517'],
      dtype='object', length=519)
Loading data from cache
Done
Generating top1 dataset
Generating top1 dataset
Generating top1 dataset
Loading data
Prepare for training
Start training
=================================================================
                     Kernel Shape Output Shape  Params  Mult-Adds
Layer                                                            
0_fc_layers.Linear_0   [518, 400]  [4096, 400]  207600     207200
1_fc_layers.Linear_1   [400, 200]  [4096, 200]   80200      80000
2_fc_layers.Linear_2     [200, 1]    [4096, 1]     201        200
-----------------------------------------------------------------
                      Totals
Total params          288001
Trainable params      288001
Non-trainable params       0
Mult-Adds             287400
=================================================================
n_classes=2
task=regression
model_name=song_B_2022-05-21-21-39-15
sche_threshold=0.0001
sche_patience=30
sche_factor=0.1
use_scheduler=True
num_workers=4
device=cuda:3
test_batch_size=4096
train_batch_size=4096
learning_rate=0.001
weight_decay=1e-05
num_epochs=200
model_save_path=ckp/song_B_2022-05-21-21-39-15.pth
test_rate=0.2
val_rate=0.1
multiprocess_context=fork
metrics=['r2_score', 'rmse', 'mae']
metrics_f=[<metric.r2_score.R2Score object at 0x7f49ed0a46a0>, <metric.rmse.RMSE object at 0x7f49ed0a45e0>, <metric.mae.MAE object at 0x7f49ed0a4460>]
hidden_sizes=[400, 200]
model=MLP(
  (fc_layers): ModuleList(
    (0): Linear(in_features=518, out_features=400, bias=True)
    (1): Linear(in_features=400, out_features=200, bias=True)
    (2): Linear(in_features=200, out_features=1, bias=True)
  )
)
writer=<torch.utils.tensorboard.writer.SummaryWriter object at 0x7f49ed0a4670>
Epoch 1: Loss:            : Train 0.1003, Val 0.0904, Test 0.0909
          R2_Score         : Train -6.7994, Val -5.9785, Test -6.2342
          RMSE             : Train 28.1993, Val 26.7164, Test 26.7129
          MAE              : Train 24.8495, Val 22.5313, Test 22.5557
Best:
          R2_Score         : Train -6.7994, Val -5.9785, Test -6.2342
          RMSE             : Train 28.1993, Val 26.7164, Test 26.7129
          MAE              : Train 24.8495, Val 22.5313, Test 22.5557
Epoch 2: Loss:            : Train 0.0860, Val 0.0826, Test 0.0832
          R2_Score         : Train -5.6841, Val -5.3822, Test -5.6129
          RMSE             : Train 26.1054, Val 25.5495, Test 25.5400
          MAE              : Train 22.1355, Val 21.6462, Test 21.6520
Best:
          R2_Score         : Train -5.6841, Val -5.3822, Test -5.6129
          RMSE             : Train 26.1054, Val 25.5495, Test 25.5400
          MAE              : Train 22.1355, Val 21.6462, Test 21.6520
Epoch 3: Loss:            : Train 0.0786, Val 0.0751, Test 0.0755
          R2_Score         : Train -5.1060, Val -4.7965, Test -5.0033
          RMSE             : Train 24.9509, Val 24.3489, Test 24.3344
          MAE              : Train 21.1712, Val 20.6616, Test 20.6652
Best:
          R2_Score         : Train -5.1060, Val -4.7965, Test -5.0033
          RMSE             : Train 24.9509, Val 24.3489, Test 24.3344
          MAE              : Train 21.1712, Val 20.6616, Test 20.6652
Epoch 4: Loss:            : Train 0.0706, Val 0.0665, Test 0.0669
          R2_Score         : Train -4.4819, Val -4.1373, Test -4.3186
          RMSE             : Train 23.6415, Val 22.9227, Test 22.9048
          MAE              : Train 20.0874, Val 19.4895, Test 19.4870
Best:
          R2_Score         : Train -4.4819, Val -4.1373, Test -4.3186
          RMSE             : Train 23.6415, Val 22.9227, Test 22.9048
          MAE              : Train 20.0874, Val 19.4895, Test 19.4870
Epoch 5: Loss:            : Train 0.0613, Val 0.0566, Test 0.0569
          R2_Score         : Train -3.7660, Val -3.3715, Test -3.5238
          RMSE             : Train 22.0438, Val 21.1452, Test 21.1241
          MAE              : Train 18.7640, Val 18.0148, Test 18.0116
Best:
          R2_Score         : Train -3.7660, Val -3.3715, Test -3.5238
          RMSE             : Train 22.0438, Val 21.1452, Test 21.1241
          MAE              : Train 18.7640, Val 18.0148, Test 18.0116
Epoch 6: Loss:            : Train 0.0508, Val 0.0457, Test 0.0459
          R2_Score         : Train -2.9511, Val -2.5297, Test -2.6478
          RMSE             : Train 20.0709, Val 19.0006, Test 18.9689
          MAE              : Train 17.1294, Val 16.2635, Test 16.2520
Best:
          R2_Score         : Train -2.9511, Val -2.5297, Test -2.6478
          RMSE             : Train 20.0709, Val 19.0006, Test 18.9689
          MAE              : Train 17.1294, Val 16.2635, Test 16.2520
Epoch 7: Loss:            : Train 0.0397, Val 0.0346, Test 0.0347
          R2_Score         : Train -2.0879, Val -1.6768, Test -1.7610
          RMSE             : Train 17.7434, Val 16.5464, Test 16.5029
          MAE              : Train 15.1902, Val 14.2111, Test 14.1948
Best:
          R2_Score         : Train -2.0879, Val -1.6768, Test -1.7610
          RMSE             : Train 17.7434, Val 16.5464, Test 16.5029
          MAE              : Train 15.1902, Val 14.2111, Test 14.1948
Epoch 8: Loss:            : Train 0.0291, Val 0.0248, Test 0.0247
          R2_Score         : Train -1.2630, Val -0.9151, Test -0.9670
          RMSE             : Train 15.1898, Val 13.9957, Test 13.9292
          MAE              : Train 12.9971, Val 11.9622, Test 11.9380
Best:
          R2_Score         : Train -1.2630, Val -0.9151, Test -0.9670
          RMSE             : Train 15.1898, Val 13.9957, Test 13.9292
          MAE              : Train 12.9971, Val 11.9622, Test 11.9380
Epoch 9: Loss:            : Train 0.0205, Val 0.0176, Test 0.0174
          R2_Score         : Train -0.5905, Val -0.3622, Test -0.3876
          RMSE             : Train 12.7344, Val 11.8036, Test 11.6993
          MAE              : Train 10.7491, Val 9.8047, Test 9.7661
Best:
          R2_Score         : Train -0.5905, Val -0.3622, Test -0.3876
          RMSE             : Train 12.7344, Val 11.8036, Test 11.6993
          MAE              : Train 10.7491, Val 9.8047, Test 9.7661
Epoch 10: Loss:            : Train 0.0150, Val 0.0139, Test 0.0136
          R2_Score         : Train -0.1637, Val -0.0800, Test -0.0880
          RMSE             : Train 10.8923, Val 10.5103, Test 10.3596
          MAE              : Train 8.8006, Val 8.2176, Test 8.1680
Best:
          R2_Score         : Train -0.1637, Val -0.0800, Test -0.0880
          RMSE             : Train 10.8923, Val 10.5103, Test 10.3596
          MAE              : Train 8.8006, Val 8.2176, Test 8.1680
Epoch 11: Loss:            : Train 0.0129, Val 0.0132, Test 0.0128
          R2_Score         : Train -0.0050, Val -0.0276, Test -0.0313
          RMSE             : Train 10.1228, Val 10.2521, Test 10.0859
          MAE              : Train 7.6316, Val 7.6006, Test 7.5495
Best:
          R2_Score         : Train -0.0050, Val -0.0276, Test -0.0313
          RMSE             : Train 10.1228, Val 10.2521, Test 10.0859
          MAE              : Train 7.6316, Val 7.6006, Test 7.5495
Epoch 12: Loss:            : Train 0.0127, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0139, Val -0.0215, Test -0.0245
          RMSE             : Train 10.0271, Val 10.2217, Test 10.0528
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.86it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 25.78it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.19it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.89it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.20it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 31.52it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.67it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 35.37it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 32.57it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.33it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 24.69it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 27.56it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.85it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.62it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 34.10it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 30.55it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.09it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.08it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.83it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.59it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.24it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.52it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 28.21it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.04it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.56it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.07it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.18it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.49it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 28.88it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 27.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.93it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.34it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 32.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.09it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.06it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.33it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.40it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.75it/s]Train:   8%|▊         | 5/60 [00:00<00:04, 12.85it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 17.76it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 19.69it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.93it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.81it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 26.32it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.45it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.16it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 33.09it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.36it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.85it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.38it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 29.41it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.61it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 14.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.69it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.84it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.14it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.04it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 22.81it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.91it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.38it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.78it/s]Train:  40%|████      | 24/60 [00:00<00:01, 28.86it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 30.62it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.43it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.11it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.92it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.97it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 25.96it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.68it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 32.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.04it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.32it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 36.77it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.22it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 29.67it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 32.29it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.16it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.41it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.21it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 26.61it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.85it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.17it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.88it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.68it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.94it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 25.63it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.26it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.75it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 33.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.91it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.54it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.29it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.25it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.22it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.15it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.34it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.95it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 27.42it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.05it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.01it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.93it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.46it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.78it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.33it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.04it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.35it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 23.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.83it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.02it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.41it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.68it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.15it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.19it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 25.45it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.53it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.36it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.29it/s]Train:  40%|████      | 24/60 [00:00<00:01, 25.93it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.20it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.40it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.65it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.33it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.42it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.19it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 31.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 35.77it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.89it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.18it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.67it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.28it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 12.13it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 17.21it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.74it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.31it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.78it/s]Train:  40%|████      | 24/60 [00:01<00:01, 27.41it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.19it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.37it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.78it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.17it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.26it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.35it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 29.20it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 33.37it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  5.82it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.03it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 33.72it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.10it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 21.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 28.61it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.87it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.25it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.76it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.74it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.95it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.97it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.25it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 34.71it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.61it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.67it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 28.83it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.00it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 22.55it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.07it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 25.16it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.75it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:12,  4.66it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.65it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.72it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.49it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.40it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.23it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.90it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.96it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.77it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.77it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.00it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.80it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 31.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 35.98it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.61it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.93it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 24.76it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 19.50it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 14.30it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.68it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.89it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.00it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.91it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.74it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.73it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.61it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.79it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.67it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.53it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.55it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.52it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.75it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 29.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.22it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 24.32it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 25.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.07it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.29it/s]Train:  10%|█         | 6/60 [00:00<00:03, 13.50it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 18.66it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 18.41it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 21.47it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.83it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.63it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.86it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.71it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.60it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 24.97it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 21.63it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.06it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 17.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.43it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.92it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.35it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:13,  4.32it/s]Train:   5%|▌         | 3/60 [00:00<00:05, 10.26it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.36it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 13.41it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 16.98it/s]Train:  22%|██▏       | 13/60 [00:00<00:03, 13.49it/s]Train:  28%|██▊       | 17/60 [00:01<00:02, 18.51it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 16.05it/s]Train:  40%|████      | 24/60 [00:01<00:02, 16.68it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 21.00it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 19.41it/s]Train:  60%|██████    | 36/60 [00:02<00:01, 19.83it/s]Train:  65%|██████▌   | 39/60 [00:02<00:00, 21.26it/s]Train:  70%|███████   | 42/60 [00:02<00:01, 17.60it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 23.36it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 21.42it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 20.64it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 21.96it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 18.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 26.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.71it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 33.92it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 20.33it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.45it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 32.73it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.25it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.47it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 26.09it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.24it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 27.93it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.28it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.13it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.12it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.12it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 28.91it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 11.11it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.94it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 13.03it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 20.64it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 21.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 21.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.25it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.67it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 13.85it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.69it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.05it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.73it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 20.69it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.50it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.72it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.16it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.25it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 23.23it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 28.07it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.85it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 22.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 17.97it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:03,  4.56it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 18.36it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 24.17it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 20.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 23.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.63it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.97it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.15it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.35it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.06it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.82it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.53it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.85it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.58it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 21.41it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 24.35it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 22.35it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 21.32it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.00it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 32.45it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 11.26it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 18.79it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 22.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.04it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.84it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.41it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.73it/s]Train:  20%|██        | 12/60 [00:00<00:02, 18.26it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 17.06it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.07it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 21.83it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 21.41it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.87it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.35it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 21.61it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 22.36it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 26.89it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.14it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 23.00it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 12.50it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 29.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 19.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.29it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.35it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 25.07it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 21.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.95it/s]
          MAE              : Train 7.4270, Val 7.5557, Test 7.5086
Best:
          R2_Score         : Train 0.0139, Val -0.0215, Test -0.0245
          RMSE             : Train 10.0271, Val 10.2217, Test 10.0528
          MAE              : Train 7.4270, Val 7.5557, Test 7.5086
Epoch 13: Loss:            : Train 0.0126, Val 0.0131, Test 0.0127
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 14: Loss:            : Train 0.0126, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0249, Val -0.0223, Test -0.0258
          RMSE             : Train 9.9711, Val 10.2256, Test 10.0591
          MAE              : Train 7.3940, Val 7.5173, Test 7.4715
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 15: Loss:            : Train 0.0125, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0283, Val -0.0213, Test -0.0225
          RMSE             : Train 9.9536, Val 10.2206, Test 10.0426
          MAE              : Train 7.3789, Val 7.5430, Test 7.4868
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 16: Loss:            : Train 0.0125, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0319, Val -0.0235, Test -0.0243
          RMSE             : Train 9.9352, Val 10.2316, Test 10.0519
          MAE              : Train 7.3655, Val 7.5441, Test 7.4919
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 17: Loss:            : Train 0.0124, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0339, Val -0.0238, Test -0.0230
          RMSE             : Train 9.9245, Val 10.2332, Test 10.0451
          MAE              : Train 7.3566, Val 7.5606, Test 7.4977
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 18: Loss:            : Train 0.0124, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0371, Val -0.0234, Test -0.0253
          RMSE             : Train 9.9082, Val 10.2309, Test 10.0566
          MAE              : Train 7.3433, Val 7.5668, Test 7.5045
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 19: Loss:            : Train 0.0123, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0406, Val -0.0233, Test -0.0255
          RMSE             : Train 9.8904, Val 10.2307, Test 10.0577
          MAE              : Train 7.3298, Val 7.5959, Test 7.5392
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 20: Loss:            : Train 0.0123, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0434, Val -0.0235, Test -0.0230
          RMSE             : Train 9.8757, Val 10.2315, Test 10.0455
          MAE              : Train 7.3265, Val 7.5282, Test 7.4666
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 21: Loss:            : Train 0.0123, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0452, Val -0.0322, Test -0.0341
          RMSE             : Train 9.8664, Val 10.2751, Test 10.0997
          MAE              : Train 7.3065, Val 7.6670, Test 7.6102
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 22: Loss:            : Train 0.0123, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0476, Val -0.0293, Test -0.0306
          RMSE             : Train 9.8544, Val 10.2607, Test 10.0828
          MAE              : Train 7.3110, Val 7.6323, Test 7.5728
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 23: Loss:            : Train 0.0122, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0506, Val -0.0281, Test -0.0279
          RMSE             : Train 9.8387, Val 10.2546, Test 10.0693
          MAE              : Train 7.2882, Val 7.5947, Test 7.5307
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 24: Loss:            : Train 0.0122, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0524, Val -0.0258, Test -0.0273
          RMSE             : Train 9.8290, Val 10.2432, Test 10.0663
          MAE              : Train 7.2892, Val 7.5395, Test 7.4849
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 25: Loss:            : Train 0.0122, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0547, Val -0.0269, Test -0.0281
          RMSE             : Train 9.8176, Val 10.2486, Test 10.0704
          MAE              : Train 7.2755, Val 7.5474, Test 7.4860
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 26: Loss:            : Train 0.0122, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0555, Val -0.0333, Test -0.0352
          RMSE             : Train 9.8131, Val 10.2804, Test 10.1049
          MAE              : Train 7.2679, Val 7.6188, Test 7.5628
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 27: Loss:            : Train 0.0121, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0573, Val -0.0322, Test -0.0321
          RMSE             : Train 9.8037, Val 10.2752, Test 10.0898
          MAE              : Train 7.2615, Val 7.6054, Test 7.5398
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 28: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0591, Val -0.0356, Test -0.0378
          RMSE             : Train 9.7945, Val 10.2916, Test 10.1176
          MAE              : Train 7.2514, Val 7.6553, Test 7.5977
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 29: Loss:            : Train 0.0121, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0598, Val -0.0314, Test -0.0322
          RMSE             : Train 9.7909, Val 10.2712, Test 10.0904
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.00it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.30it/s]Train:  10%|█         | 6/60 [00:00<00:03, 13.66it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.69it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 18.72it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 18.81it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 24.84it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.20it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 20.49it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.21it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.83it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 21.10it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 24.10it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 19.46it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 19.67it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 18.64it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 17.63it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 17.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.44it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.03it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 22.96it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 23.57it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.99it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.00it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.35it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.76it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.22it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.19it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.83it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 21.21it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.67it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.48it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.70it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 23.14it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 23.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.79it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 17.49it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 26.83it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.14it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.26it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.29it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.36it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.47it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 19.52it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.66it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.13it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.27it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.77it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.91it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.02it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.73it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 23.81it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 12.23it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 28.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.74it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 25.08it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.52it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.78it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.78it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.46it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.88it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.54it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 22.96it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.84it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.62it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.71it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.40it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.99it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.46it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.66it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 30.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.01it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.39it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 16.45it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 21.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 23.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.90it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.69it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.07it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 19.14it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.74it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 24.91it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.18it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.94it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.22it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.08it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.47it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.17it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.28it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 18.85it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.27it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 18.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 16.59it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.80it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.72it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.60it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 23.43it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 21.95it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.51it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.01it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.59it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 16.09it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 21.36it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 21.05it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 20.76it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 23.71it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 22.17it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.15it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.65it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 25.16it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.83it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 30.28it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 29.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 47.76it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.61it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.78it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.29it/s]Train:  33%|███▎      | 20/60 [00:00<00:02, 17.69it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.85it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 17.71it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 15.68it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 17.68it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 16.09it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 20.05it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 18.30it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 19.18it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.69it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.87it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 19.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 18.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:02,  5.36it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 14.37it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 13.21it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 15.38it/s]Test: 100%|██████████| 18/18 [00:01<00:00, 17.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:07,  7.65it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.10it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.68it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.80it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.52it/s]Train:  40%|████      | 24/60 [00:01<00:01, 28.57it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.57it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.06it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.95it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.66it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.62it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.78it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.28it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.18it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.19it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  4.66it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 11.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 14.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.39it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.71it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 26.49it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.93it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.63it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.61it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.69it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.80it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.75it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.61it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.98it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.19it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 22.35it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 21.74it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 24.10it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.63it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.84it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 20.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 13.46it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.06it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 27.76it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 30.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.15it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.22it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 18.34it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 22.69it/s]Train:  30%|███       | 18/60 [00:00<00:02, 20.89it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 21.31it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.82it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.46it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.08it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.29it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.34it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 29.86it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.23it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 24.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:03,  4.31it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 15.90it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 23.79it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 22.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 23.19it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.65it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.35it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.52it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.55it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.63it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.26it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.46it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.11it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.29it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.17it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 23.20it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 26.91it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 23.97it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.49it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 14.32it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.05it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 25.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.85it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.91it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 18.74it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 22.31it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.57it/s]Train:  40%|████      | 24/60 [00:00<00:01, 25.21it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 21.44it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.90it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 18.07it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.01it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 20.79it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 20.77it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 20.93it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 21.67it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.91it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.97it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 31.66it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.35it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.83it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 46.47it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 33.70it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.14it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.30it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 22.48it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.65it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 21.66it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.87it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.52it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 22.65it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 21.19it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 22.89it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 29.40it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.98it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.65it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 36.75it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.06it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.13it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.49it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 19.72it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 18.92it/s]Train:  33%|███▎      | 20/60 [00:01<00:01, 20.26it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.80it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.96it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.14it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.28it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.25it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.18it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 29.87it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 28.87it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.63it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.48it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.54it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.90it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.43it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.50it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.54it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.30it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.54it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.88it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.78it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.50it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.37it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.82it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.15it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.87it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.62it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 28.93it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 26.21it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 27.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.68it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.18it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 31.90it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.90it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.74it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.25it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 27.49it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.17it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.43it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.10it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.06it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.59it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 24.42it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 21.34it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 21.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.98it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 17.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.12it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 23.88it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 24.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.22it/s]Train:   3%|▎         | 2/60 [00:00<00:07,  7.84it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.74it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.50it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.24it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.70it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.06it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.24it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.43it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.47it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.50it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.19it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.84it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.99it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.78it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.84it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.16it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.56it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.88it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.44it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.27it/s]
          MAE              : Train 7.2484, Val 7.5561, Test 7.4933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 30: Loss:            : Train 0.0121, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0620, Val -0.0375, Test -0.0384
          RMSE             : Train 9.7793, Val 10.3011, Test 10.1206
          MAE              : Train 7.2407, Val 7.6215, Test 7.5605
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 31: Loss:            : Train 0.0121, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0633, Val -0.0343, Test -0.0337
          RMSE             : Train 9.7724, Val 10.2854, Test 10.0975
          MAE              : Train 7.2324, Val 7.5534, Test 7.4850
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 32: Loss:            : Train 0.0120, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0643, Val -0.0356, Test -0.0359
          RMSE             : Train 9.7671, Val 10.2918, Test 10.1085
          MAE              : Train 7.2265, Val 7.5361, Test 7.4790
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 33: Loss:            : Train 0.0120, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0654, Val -0.0374, Test -0.0377
          RMSE             : Train 9.7614, Val 10.3008, Test 10.1173
          MAE              : Train 7.2237, Val 7.5732, Test 7.5133
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 34: Loss:            : Train 0.0120, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0681, Val -0.0365, Test -0.0371
          RMSE             : Train 9.7473, Val 10.2963, Test 10.1144
          MAE              : Train 7.2102, Val 7.5751, Test 7.5145
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 35: Loss:            : Train 0.0120, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0691, Val -0.0400, Test -0.0404
          RMSE             : Train 9.7423, Val 10.3136, Test 10.1303
          MAE              : Train 7.2056, Val 7.6191, Test 7.5563
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 36: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0699, Val -0.0403, Test -0.0430
          RMSE             : Train 9.7380, Val 10.3153, Test 10.1432
          MAE              : Train 7.2037, Val 7.6365, Test 7.5814
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 37: Loss:            : Train 0.0120, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0712, Val -0.0487, Test -0.0524
          RMSE             : Train 9.7312, Val 10.3567, Test 10.1884
          MAE              : Train 7.1914, Val 7.7122, Test 7.6556
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 38: Loss:            : Train 0.0119, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0721, Val -0.0417, Test -0.0403
          RMSE             : Train 9.7263, Val 10.3219, Test 10.1298
          MAE              : Train 7.1927, Val 7.5784, Test 7.5158
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 39: Loss:            : Train 0.0119, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0721, Val -0.0422, Test -0.0427
          RMSE             : Train 9.7266, Val 10.3247, Test 10.1415
          MAE              : Train 7.1871, Val 7.5783, Test 7.5182
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 40: Loss:            : Train 0.0119, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0734, Val -0.0369, Test -0.0381
          RMSE             : Train 9.7197, Val 10.2985, Test 10.1192
          MAE              : Train 7.1819, Val 7.5448, Test 7.4863
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 41: Loss:            : Train 0.0119, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0748, Val -0.0455, Test -0.0472
          RMSE             : Train 9.7124, Val 10.3408, Test 10.1634
          MAE              : Train 7.1746, Val 7.6429, Test 7.5848
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 42: Loss:            : Train 0.0119, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0759, Val -0.0416, Test -0.0431
          RMSE             : Train 9.7067, Val 10.3216, Test 10.1433
          MAE              : Train 7.1717, Val 7.5595, Test 7.5044
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 43: Loss:            : Train 0.0119, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0764, Val -0.0421, Test -0.0430
          RMSE             : Train 9.7038, Val 10.3242, Test 10.1431
          MAE              : Train 7.1646, Val 7.5691, Test 7.5078
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 44: Loss:            : Train 0.0119, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0776, Val -0.0522, Test -0.0545
          RMSE             : Train 9.6976, Val 10.3741, Test 10.1990
          MAE              : Train 7.1636, Val 7.7008, Test 7.6380
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 45: Loss:            : Train 0.0117, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0904, Val -0.0450, Test -0.0466
          RMSE             : Train 9.6301, Val 10.3387, Test 10.1604
          MAE              : Train 7.1245, Val 7.6173, Test 7.5584
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 46: Loss:            : Train 0.0117, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0924, Val -0.0475, Test -0.0487
          RMSE             : Train 9.6197, Val 10.3509, Test 10.1705
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 22.01it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 33.62it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.50it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.55it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.16it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.01it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.78it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.92it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.51it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.55it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.31it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.07it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 26.06it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 27.34it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.35it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 33.22it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 34.20it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.97it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 42.54it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 31.17it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.15it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.37it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.00it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.01it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.37it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.04it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.23it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 20.62it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.40it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 26.39it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 33.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.73it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.96it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 35.63it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.25it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 26.36it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.94it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.64it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.25it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.52it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.94it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 26.61it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.76it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.34it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.50it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.51it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 26.11it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.80it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.81it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 26.00it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.19it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.81it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.57it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.27it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.07it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.86it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.65it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 26.64it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.98it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.63it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.02it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.13it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.11it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.35it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.84it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.90it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.25it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.33it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.96it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.62it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.41it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.17it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.14it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.85it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.80it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.49it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.87it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.78it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.01it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.18it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.99it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 32.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.17it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.58it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 34.82it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 30.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.98it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.02it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.16it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.64it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.12it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.09it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.30it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.78it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.40it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.83it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.71it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.14it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.59it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.33it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.75it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.85it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 30.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 27.52it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 26.32it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 27.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.75it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.96it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.20it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.32it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.65it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 21.66it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 20.89it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.30it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 20.37it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.73it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.73it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.91it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.09it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.28it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.20it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 29.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.14it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:03,  4.80it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 15.78it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 20.82it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 24.50it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 22.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.86it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 22.36it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.37it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.55it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.71it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.70it/s]Train:  40%|████      | 24/60 [00:01<00:01, 22.94it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.48it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.34it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.14it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.56it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.67it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 23.94it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 25.16it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 19.81it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 20.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 12.04it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 23.22it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 24.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.57it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.35it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.96it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.78it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.69it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 21.08it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 19.24it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.38it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 18.48it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 20.22it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.57it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 22.77it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 21.51it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.66it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.41it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.35it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.55it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 26.45it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.41it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.71it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.16it/s]Train:   8%|▊         | 5/60 [00:00<00:04, 13.38it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.52it/s]Train:  20%|██        | 12/60 [00:00<00:02, 18.36it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.08it/s]Train:  32%|███▏      | 19/60 [00:00<00:02, 19.33it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.48it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.71it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 20.71it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 20.29it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.92it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 24.94it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 29.28it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.98it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 24.86it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.26it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.90it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 20.50it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 24.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.64it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.57it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.49it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.87it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.88it/s]Train:  40%|████      | 24/60 [00:01<00:01, 22.24it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.42it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.66it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.39it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.87it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 22.41it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 21.45it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.69it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.86it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.03it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 25.28it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.93it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.38it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.62it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.86it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.00it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.33it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.83it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 25.24it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.92it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.35it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.69it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.05it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 23.70it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 28.14it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 24.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.96it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 33.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 31.40it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.57it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.78it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 15.38it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.19it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.41it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 21.48it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 24.95it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.18it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.35it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.45it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.35it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.15it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.30it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 28.78it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.69it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 31.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.86it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 31.85it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.87it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 23.17it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:16,  3.55it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 15.42it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 14.50it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.46it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 18.03it/s]Train:  30%|███       | 18/60 [00:01<00:02, 19.20it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 19.06it/s]Train:  40%|████      | 24/60 [00:01<00:01, 18.42it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.08it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 21.49it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.88it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.71it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 24.21it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 24.50it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 29.83it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 29.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.82it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 19.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.51it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.45it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.96it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.93it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.56it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.86it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 31.49it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.61it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.61it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 26.91it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.53it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.43it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.05it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.96it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.26it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.39it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.93it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 28.68it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 30.02it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.88it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 38.96it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.22it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.05it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.37it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.63it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.84it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.18it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.78it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.16it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.83it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.91it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 27.82it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 25.59it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.52it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.88it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.83it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.64it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:05,  9.83it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.93it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 21.34it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.15it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.38it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.86it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.45it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 23.92it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.21it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.56it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 21.79it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 20.69it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.87it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 23.74it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.68it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.97it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.02it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.54it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.16it/s]
          MAE              : Train 7.1097, Val 7.6271, Test 7.5662
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 47: Loss:            : Train 0.0117, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0931, Val -0.0496, Test -0.0502
          RMSE             : Train 9.6157, Val 10.3610, Test 10.1782
          MAE              : Train 7.0997, Val 7.6404, Test 7.5777
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 48: Loss:            : Train 0.0117, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0935, Val -0.0506, Test -0.0512
          RMSE             : Train 9.6137, Val 10.3662, Test 10.1828
          MAE              : Train 7.1005, Val 7.6489, Test 7.5843
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 49: Loss:            : Train 0.0117, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0937, Val -0.0479, Test -0.0486
          RMSE             : Train 9.6125, Val 10.3526, Test 10.1702
          MAE              : Train 7.0997, Val 7.6118, Test 7.5495
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 50: Loss:            : Train 0.0117, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0940, Val -0.0499, Test -0.0504
          RMSE             : Train 9.6110, Val 10.3629, Test 10.1792
          MAE              : Train 7.0989, Val 7.6229, Test 7.5604
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 51: Loss:            : Train 0.0117, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0942, Val -0.0534, Test -0.0538
          RMSE             : Train 9.6098, Val 10.3800, Test 10.1955
          MAE              : Train 7.0940, Val 7.6591, Test 7.5945
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 52: Loss:            : Train 0.0117, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0943, Val -0.0505, Test -0.0512
          RMSE             : Train 9.6093, Val 10.3655, Test 10.1829
          MAE              : Train 7.0950, Val 7.6251, Test 7.5631
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 53: Loss:            : Train 0.0117, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0946, Val -0.0498, Test -0.0503
          RMSE             : Train 9.6081, Val 10.3620, Test 10.1785
          MAE              : Train 7.0916, Val 7.6185, Test 7.5558
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 54: Loss:            : Train 0.0116, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0948, Val -0.0510, Test -0.0513
          RMSE             : Train 9.6069, Val 10.3683, Test 10.1832
          MAE              : Train 7.0933, Val 7.6276, Test 7.5647
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 55: Loss:            : Train 0.0116, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0950, Val -0.0524, Test -0.0528
          RMSE             : Train 9.6057, Val 10.3751, Test 10.1906
          MAE              : Train 7.0917, Val 7.6359, Test 7.5728
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 56: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0951, Val -0.0544, Test -0.0550
          RMSE             : Train 9.6050, Val 10.3850, Test 10.2010
          MAE              : Train 7.0883, Val 7.6617, Test 7.5964
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 57: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0952, Val -0.0564, Test -0.0567
          RMSE             : Train 9.6046, Val 10.3948, Test 10.2094
          MAE              : Train 7.0873, Val 7.6788, Test 7.6135
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 58: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0954, Val -0.0533, Test -0.0534
          RMSE             : Train 9.6039, Val 10.3792, Test 10.1935
          MAE              : Train 7.0898, Val 7.6413, Test 7.5770
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 59: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0957, Val -0.0556, Test -0.0559
          RMSE             : Train 9.6022, Val 10.3909, Test 10.2055
          MAE              : Train 7.0852, Val 7.6622, Test 7.5970
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 60: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0957, Val -0.0532, Test -0.0532
          RMSE             : Train 9.6019, Val 10.3789, Test 10.1925
          MAE              : Train 7.0887, Val 7.6311, Test 7.5675
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 61: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0959, Val -0.0554, Test -0.0554
          RMSE             : Train 9.6012, Val 10.3896, Test 10.2032
          MAE              : Train 7.0851, Val 7.6545, Test 7.5890
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 62: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0960, Val -0.0561, Test -0.0558
          RMSE             : Train 9.6003, Val 10.3933, Test 10.2053
          MAE              : Train 7.0836, Val 7.6581, Test 7.5925
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 63: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0962, Val -0.0539, Test -0.0543
          RMSE             : Train 9.5995, Val 10.3825, Test 10.1978
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.87it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.27it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.78it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.48it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 34.09it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.89it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.10it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.17it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 22.50it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 20.10it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 21.26it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 19.38it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.91it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.35it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 11.64it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 20.97it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.30it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 26.25it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 28.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.47it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.66it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 18.66it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 18.53it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 20.80it/s]Train:  37%|███▋      | 22/60 [00:01<00:02, 17.74it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.02it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 19.80it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.76it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.59it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 21.01it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 23.71it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 26.06it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.93it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.22it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.96it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 27.19it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 22.85it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 20.46it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.68it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.34it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.19it/s]Train:  12%|█▏        | 7/60 [00:00<00:03, 15.60it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.14it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 18.62it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.26it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 25.63it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.72it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.43it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.04it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.29it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.72it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 24.33it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.25it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.25it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 33.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 16.41it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.77it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 26.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.81it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.92it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 21.91it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.27it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.76it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.51it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.23it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.45it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.70it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.11it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.44it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 25.05it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.83it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.24it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 24.47it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.35it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 33.06it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.62it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.23it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.69it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.70it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.40it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.19it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 22.99it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.80it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.90it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 22.50it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.47it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.31it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.79it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 28.09it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 31.36it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 30.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.12it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.23it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.37it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.42it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.59it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.27it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.37it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.20it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.14it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.18it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.27it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.30it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.71it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.26it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.51it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 33.79it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.17it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.75it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.26it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.62it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.65it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.59it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.50it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.26it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.79it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.19it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.83it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.49it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.73it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.60it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 24.67it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.41it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.95it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 32.50it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.84it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.50it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.89it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.41it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.03it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.43it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 25.19it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.72it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.48it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.91it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.30it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.95it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 27.91it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.65it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.64it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.18it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.89it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.23it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.28it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.82it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.02it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.60it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.83it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.68it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.96it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.64it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.62it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 26.77it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 31.36it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 37.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.53it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.15it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.23it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.92it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.67it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.01it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.93it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.85it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.00it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.03it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.58it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.70it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.34it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.89it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.51it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.69it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.32it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 29.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.89it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.16it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 34.09it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.15it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.25it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:11,  5.15it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.50it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.41it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.14it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.44it/s]Train:  33%|███▎      | 20/60 [00:01<00:01, 21.10it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.52it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.24it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.91it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.26it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.89it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.10it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 27.50it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 31.65it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.12it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 29.22it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.15it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 26.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.06it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 19.64it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.44it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.96it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.64it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.50it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 26.81it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.39it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.84it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.86it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.42it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.65it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.15it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 28.60it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.21it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.07it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 28.88it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.97it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.25it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.54it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.13it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.90it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 18.14it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.09it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 34.01it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.25it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.00it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 27.96it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.30it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.89it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.14it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.65it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.05it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 23.03it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.48it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 24.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.73it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.74it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 16.13it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 26.86it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 24.05it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 24.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.67it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.65it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.33it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.24it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.98it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.03it/s]Train:  40%|████      | 24/60 [00:00<00:01, 25.84it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.43it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.39it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.17it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.84it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.63it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.37it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 21.42it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 21.07it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.43it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.82it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 17.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.46it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.23it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.66it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.15it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 30.14it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.59it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.75it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.50it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.65it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.17it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.63it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.73it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.00it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.48it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.84it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.77it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 31.95it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.37it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 23.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.49it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.66it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 37.11it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 24.10it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.78it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.94it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.79it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.53it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.43it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 26.64it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.99it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.62it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.91it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.02it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.55it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.18it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 31.71it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 30.18it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.81it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 15.36it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.95it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.94it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.91it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.57it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 24.01it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.95it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.43it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.59it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.29it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.02it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 23.85it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.19it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.47it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.58it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 26.84it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 20.34it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 20.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.79it/s]
          MAE              : Train 7.0816, Val 7.6407, Test 7.5781
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 64: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0963, Val -0.0538, Test -0.0540
          RMSE             : Train 9.5990, Val 10.3819, Test 10.1962
          MAE              : Train 7.0848, Val 7.6331, Test 7.5697
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 65: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0964, Val -0.0578, Test -0.0580
          RMSE             : Train 9.5985, Val 10.4017, Test 10.2155
          MAE              : Train 7.0817, Val 7.6727, Test 7.6075
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 66: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0964, Val -0.0562, Test -0.0566
          RMSE             : Train 9.5982, Val 10.3939, Test 10.2090
          MAE              : Train 7.0794, Val 7.6598, Test 7.5957
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 67: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0967, Val -0.0551, Test -0.0552
          RMSE             : Train 9.5966, Val 10.3884, Test 10.2024
          MAE              : Train 7.0824, Val 7.6433, Test 7.5795
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 68: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0968, Val -0.0557, Test -0.0564
          RMSE             : Train 9.5961, Val 10.3911, Test 10.2079
          MAE              : Train 7.0762, Val 7.6451, Test 7.5829
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 69: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0970, Val -0.0594, Test -0.0599
          RMSE             : Train 9.5953, Val 10.4095, Test 10.2250
          MAE              : Train 7.0762, Val 7.6797, Test 7.6161
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 70: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0971, Val -0.0557, Test -0.0561
          RMSE             : Train 9.5945, Val 10.3914, Test 10.2063
          MAE              : Train 7.0798, Val 7.6415, Test 7.5779
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 71: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0973, Val -0.0591, Test -0.0589
          RMSE             : Train 9.5936, Val 10.4082, Test 10.2202
          MAE              : Train 7.0742, Val 7.6703, Test 7.6050
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 72: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0974, Val -0.0569, Test -0.0564
          RMSE             : Train 9.5932, Val 10.3969, Test 10.2079
          MAE              : Train 7.0777, Val 7.6500, Test 7.5827
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 73: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.0975, Val -0.0607, Test -0.0605
          RMSE             : Train 9.5923, Val 10.4157, Test 10.2277
          MAE              : Train 7.0726, Val 7.6834, Test 7.6172
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 74: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0975, Val -0.0575, Test -0.0577
          RMSE             : Train 9.5923, Val 10.4001, Test 10.2144
          MAE              : Train 7.0789, Val 7.6512, Test 7.5878
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 75: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.0978, Val -0.0616, Test -0.0613
          RMSE             : Train 9.5911, Val 10.4205, Test 10.2317
          MAE              : Train 7.0704, Val 7.6900, Test 7.6221
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 76: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0994, Val -0.0580, Test -0.0577
          RMSE             : Train 9.5822, Val 10.4024, Test 10.2144
          MAE              : Train 7.0741, Val 7.6549, Test 7.5894
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 77: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0997, Val -0.0576, Test -0.0574
          RMSE             : Train 9.5808, Val 10.4004, Test 10.2128
          MAE              : Train 7.0666, Val 7.6507, Test 7.5856
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 78: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0997, Val -0.0577, Test -0.0576
          RMSE             : Train 9.5806, Val 10.4012, Test 10.2136
          MAE              : Train 7.0658, Val 7.6508, Test 7.5858
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 79: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0998, Val -0.0588, Test -0.0587
          RMSE             : Train 9.5804, Val 10.4063, Test 10.2189
          MAE              : Train 7.0639, Val 7.6627, Test 7.5972
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 80: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0998, Val -0.0580, Test -0.0579
          RMSE             : Train 9.5803, Val 10.4026, Test 10.2154
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.25it/s]Train:  12%|█▏        | 7/60 [00:00<00:03, 15.51it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.63it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.38it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.70it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 28.82it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.80it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.05it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.02it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.93it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.00it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 28.28it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 32.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.65it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.55it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.43it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.98it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 28.30it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.71it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.46it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.10it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.44it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.17it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.60it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.76it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.04it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.57it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.91it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.64it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 23.08it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 26.33it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.33it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.09it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.63it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.23it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 48.47it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 36.16it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 33.47it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.58it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.19it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.62it/s]Train:  57%|█████▋    | 34/60 [00:00<00:00, 35.34it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.52it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.10it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.06it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.20it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.47it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 28.61it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 29.61it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 34.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.66it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.15it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.69it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.32it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.43it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.14it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.62it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.24it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.43it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.33it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.94it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.45it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.31it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.49it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.76it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 26.77it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.34it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.63it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 23.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.43it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 29.38it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.11it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 25.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.59it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 31.37it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.09it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.78it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.39it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.18it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.13it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.02it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.61it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.12it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.69it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.29it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.34it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.16it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 35.13it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.17it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.50it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 43.60it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 30.24it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.35it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.77it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.85it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 28.98it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.96it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.79it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.43it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.57it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.01it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 35.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.65it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 34.67it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 30.19it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.47it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 25.15it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.83it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.33it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.33it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.62it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.78it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.07it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.73it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.60it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.16it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.08it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.72it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 27.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.87it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 30.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.58it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.55it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.39it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 14.23it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.73it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 18.33it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.35it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 21.45it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.85it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.42it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.68it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.69it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.97it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 29.97it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 30.75it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 26.00it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.13it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 39.48it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.70it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.96it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.77it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.40it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 23.97it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 30.16it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.28it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.40it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.42it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.97it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.27it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.74it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 10.14it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 22.38it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 22.92it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 24.67it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.96it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.65it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.22it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.60it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.40it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.45it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.17it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.99it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.21it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.21it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.91it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.09it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 32.07it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.35it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 30.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 29.10it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.82it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 37.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.23it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.12it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.68it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.96it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.29it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.07it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.86it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.27it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.84it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.10it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.13it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 30.11it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 32.09it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.98it/s]Train:  10%|█         | 6/60 [00:00<00:01, 29.06it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.30it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.48it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.15it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.02it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.34it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 31.53it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.18it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.10it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.32it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.08it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.11it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.50it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.85it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.07it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.33it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.39it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 19.20it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 27.10it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 24.61it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.33it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.51it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 13.97it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.80it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.36it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.15it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.87it/s]Train:  40%|████      | 24/60 [00:01<00:01, 25.05it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.53it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.70it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.73it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.65it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.15it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.03it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 25.82it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.95it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.71it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 27.41it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.30it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.69it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.14it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.88it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.78it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 23.83it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.66it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.91it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.14it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.87it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.86it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.12it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.22it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.48it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 29.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.11it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.39it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 33.57it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.56it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.73it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.83it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.65it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.36it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.97it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.77it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.92it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 30.07it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.34it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.06it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.87it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.93it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 28.67it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 32.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.47it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 31.92it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.60it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 13.87it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.34it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.53it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.57it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.42it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.70it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.30it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.18it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.69it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.05it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 25.53it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.51it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 29.16it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.94it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 30.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.91it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 25.38it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.11it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.83it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.37it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 34.58it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.23it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.92it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.86it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.67it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.90it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.73it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.56it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.45it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.54it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.48it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 16.51it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 14.63it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 23.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.67it/s]
          MAE              : Train 7.0661, Val 7.6541, Test 7.5892
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 81: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0998, Val -0.0577, Test -0.0576
          RMSE             : Train 9.5802, Val 10.4010, Test 10.2139
          MAE              : Train 7.0657, Val 7.6501, Test 7.5853
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 82: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0998, Val -0.0586, Test -0.0585
          RMSE             : Train 9.5802, Val 10.4055, Test 10.2183
          MAE              : Train 7.0630, Val 7.6602, Test 7.5948
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 83: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0998, Val -0.0578, Test -0.0577
          RMSE             : Train 9.5800, Val 10.4013, Test 10.2145
          MAE              : Train 7.0674, Val 7.6503, Test 7.5857
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 84: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0998, Val -0.0580, Test -0.0580
          RMSE             : Train 9.5800, Val 10.4023, Test 10.2155
          MAE              : Train 7.0638, Val 7.6524, Test 7.5878
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 85: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0999, Val -0.0581, Test -0.0581
          RMSE             : Train 9.5799, Val 10.4031, Test 10.2160
          MAE              : Train 7.0651, Val 7.6535, Test 7.5886
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 86: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0999, Val -0.0587, Test -0.0586
          RMSE             : Train 9.5798, Val 10.4058, Test 10.2187
          MAE              : Train 7.0635, Val 7.6588, Test 7.5936
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 87: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0999, Val -0.0588, Test -0.0587
          RMSE             : Train 9.5798, Val 10.4063, Test 10.2192
          MAE              : Train 7.0654, Val 7.6589, Test 7.5938
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 88: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0999, Val -0.0585, Test -0.0584
          RMSE             : Train 9.5797, Val 10.4050, Test 10.2178
          MAE              : Train 7.0645, Val 7.6559, Test 7.5908
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 89: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0999, Val -0.0590, Test -0.0589
          RMSE             : Train 9.5797, Val 10.4073, Test 10.2201
          MAE              : Train 7.0645, Val 7.6610, Test 7.5959
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 90: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0999, Val -0.0579, Test -0.0579
          RMSE             : Train 9.5795, Val 10.4021, Test 10.2150
          MAE              : Train 7.0644, Val 7.6505, Test 7.5858
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 91: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1000, Val -0.0584, Test -0.0584
          RMSE             : Train 9.5794, Val 10.4045, Test 10.2176
          MAE              : Train 7.0641, Val 7.6554, Test 7.5905
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 92: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1000, Val -0.0581, Test -0.0581
          RMSE             : Train 9.5794, Val 10.4030, Test 10.2160
          MAE              : Train 7.0664, Val 7.6509, Test 7.5862
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 93: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1000, Val -0.0583, Test -0.0583
          RMSE             : Train 9.5793, Val 10.4042, Test 10.2171
          MAE              : Train 7.0631, Val 7.6533, Test 7.5886
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 94: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1000, Val -0.0591, Test -0.0591
          RMSE             : Train 9.5792, Val 10.4082, Test 10.2209
          MAE              : Train 7.0632, Val 7.6618, Test 7.5964
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 95: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1000, Val -0.0589, Test -0.0589
          RMSE             : Train 9.5792, Val 10.4070, Test 10.2202
          MAE              : Train 7.0635, Val 7.6598, Test 7.5948
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 96: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1000, Val -0.0588, Test -0.0587
          RMSE             : Train 9.5791, Val 10.4064, Test 10.2192
          MAE              : Train 7.0631, Val 7.6581, Test 7.5929
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 97: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1000, Val -0.0584, Test -0.0583
          RMSE             : Train 9.5790, Val 10.4045, Test 10.2173
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.94it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 22.80it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.09it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.46it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.09it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.68it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 34.37it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.09it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.14it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.28it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.06it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.14it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 25.02it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.71it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 13.62it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 22.31it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 20.87it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 23.67it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 19.00it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 14.36it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.22it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.87it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.99it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.91it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.82it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.54it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.90it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.31it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.47it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.74it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.66it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.25it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 23.36it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 21.71it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:01,  6.16it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 18.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 17.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.29it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.36it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.81it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.99it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.89it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.24it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.43it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.52it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.60it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.40it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.50it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.88it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 32.13it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.07it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 27.24it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 28.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.33it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:03,  5.64it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.33it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 24.09it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 25.48it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  5.93it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.97it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.72it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.57it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.32it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.28it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.15it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.65it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.54it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.36it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.32it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.50it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.07it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 34.69it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 36.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.02it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.34it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.16it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.97it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.93it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.24it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.71it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 34.79it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 32.71it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.27it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.08it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.98it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.62it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.76it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.12it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.93it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 22.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.33it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 35.63it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.99it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.02it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.01it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 30.43it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.06it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.07it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.35it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.91it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.64it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.43it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.99it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.77it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.92it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.89it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.55it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 36.56it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.94it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 27.07it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 32.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.43it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.44it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.78it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.65it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.91it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.16it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.12it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.27it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.25it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.55it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.39it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.93it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.44it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 26.46it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.75it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 29.70it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 15.25it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 21.80it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 25.17it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.71it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 13.20it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 16.09it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 17.27it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.33it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 18.52it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.68it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.16it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.52it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.85it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.68it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 25.41it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 26.94it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.43it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 32.34it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.45it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.18it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.93it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.54it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.95it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.36it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.55it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.69it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.58it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.43it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.02it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.17it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 32.00it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 33.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.64it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 31.99it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 26.23it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 23.48it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.37it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.94it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.88it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.14it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.04it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 18.51it/s]Train:  40%|████      | 24/60 [00:01<00:01, 19.21it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.09it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.75it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.77it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.25it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 24.17it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 28.40it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.32it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.57it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.96it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.76it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.49it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.33it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.78it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.91it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.37it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 26.60it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.98it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.07it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.73it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.50it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 29.06it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.51it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.11it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.54it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.33it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 19.27it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.70it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.70it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.48it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.94it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.23it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 36.49it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.60it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.27it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.02it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.86it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.98it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.33it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 20.34it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 27.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.13it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.10it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 31.72it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.12it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.21it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.25it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.79it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.08it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.67it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.53it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.18it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 35.82it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 33.86it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 39.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 24.81it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.20it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 22.28it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.23it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.03it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.18it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.96it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.14it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 33.12it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.52it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.80it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.63it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 30.77it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.32it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 33.44it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.88it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.07it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.93it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.63it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.92it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.34it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.91it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.41it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 29.82it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.33it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.04it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.31it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.38it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.29it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 32.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.52it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.55it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 36.30it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.44it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.38it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.94it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.39it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.39it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.21it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.09it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.91it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.50it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.27it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.29it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 33.20it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 31.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.68it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 33.97it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 39.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.97it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 22.80it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.94it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.00it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.00it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.47it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.50it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 34.20it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.23it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.43it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.93it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 27.26it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.91it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.29it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.95it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.52it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.46it/s]
          MAE              : Train 7.0659, Val 7.6534, Test 7.5886
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 98: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1001, Val -0.0593, Test -0.0593
          RMSE             : Train 9.5789, Val 10.4091, Test 10.2220
          MAE              : Train 7.0624, Val 7.6626, Test 7.5975
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 99: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1001, Val -0.0588, Test -0.0587
          RMSE             : Train 9.5788, Val 10.4064, Test 10.2190
          MAE              : Train 7.0626, Val 7.6559, Test 7.5910
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 100: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1001, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5787, Val 10.4085, Test 10.2212
          MAE              : Train 7.0650, Val 7.6602, Test 7.5952
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 101: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1001, Val -0.0583, Test -0.0583
          RMSE             : Train 9.5786, Val 10.4042, Test 10.2173
          MAE              : Train 7.0634, Val 7.6524, Test 7.5876
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 102: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1001, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5787, Val 10.4085, Test 10.2211
          MAE              : Train 7.0631, Val 7.6598, Test 7.5945
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 103: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1001, Val -0.0593, Test -0.0592
          RMSE             : Train 9.5786, Val 10.4090, Test 10.2216
          MAE              : Train 7.0627, Val 7.6603, Test 7.5951
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 104: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1001, Val -0.0590, Test -0.0590
          RMSE             : Train 9.5785, Val 10.4075, Test 10.2205
          MAE              : Train 7.0634, Val 7.6584, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 105: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1001, Val -0.0585, Test -0.0584
          RMSE             : Train 9.5784, Val 10.4051, Test 10.2177
          MAE              : Train 7.0641, Val 7.6518, Test 7.5869
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 106: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1002, Val -0.0591, Test -0.0591
          RMSE             : Train 9.5784, Val 10.4081, Test 10.2209
          MAE              : Train 7.0619, Val 7.6583, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 107: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5771, Val 10.4083, Test 10.2211
          MAE              : Train 7.0627, Val 7.6588, Test 7.5938
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 108: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5771, Val 10.4085, Test 10.2213
          MAE              : Train 7.0627, Val 7.6591, Test 7.5941
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 109: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0591, Test -0.0591
          RMSE             : Train 9.5771, Val 10.4080, Test 10.2208
          MAE              : Train 7.0623, Val 7.6582, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 110: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5771, Val 10.4084, Test 10.2211
          MAE              : Train 7.0622, Val 7.6588, Test 7.5938
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 111: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0591, Test -0.0591
          RMSE             : Train 9.5771, Val 10.4081, Test 10.2209
          MAE              : Train 7.0623, Val 7.6582, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 112: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0591, Test -0.0590
          RMSE             : Train 9.5771, Val 10.4079, Test 10.2207
          MAE              : Train 7.0619, Val 7.6579, Test 7.5930
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 113: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5771, Val 10.4082, Test 10.2211
          MAE              : Train 7.0619, Val 7.6586, Test 7.5936
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 114: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5771, Val 10.4082, Test 10.2210
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.98it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.71it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.85it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.59it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 23.77it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.16it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.38it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.55it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.73it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.92it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 27.87it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 31.03it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 33.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.22it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 29.10it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.42it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.59it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.02it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 28.58it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.79it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.75it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.93it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.68it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.71it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 24.90it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.77it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.43it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.71it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.62it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 27.55it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 30.19it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 31.91it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 24.97it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 33.00it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.20it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 23.39it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.91it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.56it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.35it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.12it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 27.52it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.59it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.54it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.39it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.03it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.53it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.99it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 28.23it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 33.07it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 34.65it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.59it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 49.07it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 30.96it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.21it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.97it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.03it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.81it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.52it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.08it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.37it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.26it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.73it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.47it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 32.97it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.26it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.37it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 35.41it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.41it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.16it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.11it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.24it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.20it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.57it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.70it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.37it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.32it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.45it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.45it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.75it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.41it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 36.96it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.55it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 29.78it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 33.26it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.71it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 22.52it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.49it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.98it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.62it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.60it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 36.49it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 35.16it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.56it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.15it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.02it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.81it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 30.35it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 28.54it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 33.45it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 35.52it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.96it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 30.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.03it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.16it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.36it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.35it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.26it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.04it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 34.69it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.35it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.81it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.07it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.63it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 28.02it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 27.19it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.78it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 29.89it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.72it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.63it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.03it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.09it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.11it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.48it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.08it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.48it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.06it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.82it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.53it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.98it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.47it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.04it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 34.29it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 38.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.99it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.81it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.03it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 30.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.77it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.97it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 18.16it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.28it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.11it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.07it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 28.36it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.79it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.69it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.79it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.73it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.45it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.56it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 29.15it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.89it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.24it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.43it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.15it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 47.54it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 35.42it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 32.69it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.57it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.25it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.92it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.35it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.45it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.11it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.67it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 35.20it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.35it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01,  9.38it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 18.62it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 27.54it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 26.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.08it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.10it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.76it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.32it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.85it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.98it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.07it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.20it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.21it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.77it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.10it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.93it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.38it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 27.81it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 31.55it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.47it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 19.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.63it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.43it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.41it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 23.55it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 33.73it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 31.96it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.98it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.48it/s]Train:  43%|████▎     | 26/60 [00:00<00:00, 34.28it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.75it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.27it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.67it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.27it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.06it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 28.71it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 27.12it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.24it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 36.98it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.73it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 39.62it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 32.87it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.00it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.50it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.69it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.50it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.08it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.96it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.14it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.79it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.55it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 34.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.53it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.82it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.19it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.02it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.24it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.69it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.44it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.97it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.89it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.70it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.38it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.90it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.37it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.20it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.91it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.14it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.91it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 29.89it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.71it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.70it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 19.06it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.39it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.53it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.78it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.41it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.59it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 28.72it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 26.79it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.07it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.61it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.71it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.45it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.64it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 29.76it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 46.58it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.79it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.64it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.93it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.15it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.86it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.70it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.90it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.25it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.74it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.02it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.61it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.50it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.87it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.01it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.34it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 37.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.83it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.64it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.48it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.58it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 32.61it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.34it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.14it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.11it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 27.53it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.05it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.14it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.15it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.94it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.54it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.26it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.06it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.81it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 29.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 30.10it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.52it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 38.69it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.36it/s]
          MAE              : Train 7.0624, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 115: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0591, Test -0.0591
          RMSE             : Train 9.5771, Val 10.4081, Test 10.2209
          MAE              : Train 7.0621, Val 7.6582, Test 7.5932
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 116: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0591, Test -0.0591
          RMSE             : Train 9.5771, Val 10.4081, Test 10.2209
          MAE              : Train 7.0623, Val 7.6582, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 117: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5771, Val 10.4083, Test 10.2211
          MAE              : Train 7.0625, Val 7.6586, Test 7.5936
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 118: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0591, Test -0.0590
          RMSE             : Train 9.5771, Val 10.4078, Test 10.2206
          MAE              : Train 7.0619, Val 7.6575, Test 7.5926
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 119: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4084, Test 10.2212
          MAE              : Train 7.0623, Val 7.6586, Test 7.5936
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 120: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4083, Test 10.2211
          MAE              : Train 7.0623, Val 7.6584, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 121: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4084, Test 10.2211
          MAE              : Train 7.0619, Val 7.6585, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 122: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4084, Test 10.2211
          MAE              : Train 7.0624, Val 7.6585, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 123: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0591, Test -0.0590
          RMSE             : Train 9.5770, Val 10.4080, Test 10.2208
          MAE              : Train 7.0617, Val 7.6577, Test 7.5927
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 124: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4083, Test 10.2211
          MAE              : Train 7.0623, Val 7.6583, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 125: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4085, Test 10.2212
          MAE              : Train 7.0622, Val 7.6586, Test 7.5936
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 126: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4083, Test 10.2211
          MAE              : Train 7.0617, Val 7.6583, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 127: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4084, Test 10.2211
          MAE              : Train 7.0618, Val 7.6584, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 128: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5770, Val 10.4085, Test 10.2213
          MAE              : Train 7.0624, Val 7.6587, Test 7.5937
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 129: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4083, Test 10.2210
          MAE              : Train 7.0622, Val 7.6581, Test 7.5931
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 130: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4083, Test 10.2211
          MAE              : Train 7.0622, Val 7.6583, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 131: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4084, Test 10.2212
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.55it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.76it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.87it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.70it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.86it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.52it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.90it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.27it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.29it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.76it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 27.86it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 35.91it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 35.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.82it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.25it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 26.13it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.85it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.58it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 36.21it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.82it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 32.23it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.81it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.58it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.59it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.32it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.97it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 36.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.95it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 33.10it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 39.77it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.33it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 31.89it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.83it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.16it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.86it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 34.23it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.41it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.52it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.83it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.53it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.85it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.71it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.15it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 29.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 32.51it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.35it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 36.56it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.33it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.23it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 11.57it/s]Train:   8%|▊         | 5/60 [00:00<00:04, 12.15it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.86it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.46it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.74it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.16it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 20.87it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.80it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.76it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.66it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.86it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.29it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 30.89it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 32.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 31.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.14it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.35it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.34it/s]Train:  10%|█         | 6/60 [00:00<00:01, 31.45it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.60it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.59it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.70it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.63it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 33.35it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 34.11it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.91it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 35.47it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.78it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 35.29it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 31.06it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.37it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 31.88it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 30.61it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.82it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.77it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.01it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.00it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.91it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.77it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.69it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 34.23it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.24it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.68it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.94it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 34.12it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.03it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.49it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.65it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.73it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.35it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.13it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.19it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 28.31it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.27it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.68it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.44it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 36.21it/s]Train:  43%|████▎     | 26/60 [00:00<00:00, 34.56it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 33.04it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.54it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.72it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.74it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.65it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.99it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.82it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 35.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.88it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 23.79it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.49it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.64it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.71it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.39it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.23it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.97it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.82it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 34.44it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 34.25it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.57it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 37.53it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 35.51it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.37it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.42it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.30it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.72it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.02it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.94it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.17it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.68it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 33.79it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 34.96it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.78it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 34.52it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.07it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 36.92it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.94it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.05it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 30.19it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.71it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.83it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.85it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.58it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.33it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.92it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.98it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.74it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.70it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.13it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 34.53it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.46it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 28.17it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 27.70it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.68it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 33.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:05,  3.34it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 17.43it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 23.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:16,  3.57it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 18.47it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.25it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.84it/s]Train:  40%|████      | 24/60 [00:00<00:01, 28.84it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.01it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.81it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.96it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.20it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.90it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.92it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 32.20it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 31.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.69it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 31.48it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.60it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.01it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.54it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.30it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.68it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.04it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.46it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.31it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.87it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.34it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.26it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.63it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.84it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.68it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.75it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 30.63it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.30it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.44it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.72it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.46it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.76it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.45it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 29.52it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.79it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.94it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.07it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 34.30it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.37it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.62it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.73it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.82it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.82it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.69it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 27.59it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.09it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.04it/s]Train:  10%|█         | 6/60 [00:00<00:01, 30.93it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 31.49it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.41it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.55it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.54it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 35.18it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 33.19it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.51it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.48it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.90it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.73it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.82it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 36.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.28it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.39it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.02it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.36it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 29.16it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.53it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 35.20it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.33it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 32.13it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 33.98it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.19it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.09it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.28it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.68it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.97it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.28it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 30.83it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 35.72it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.08it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 40.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.77it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.66it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.55it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.15it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.22it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.05it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.63it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.47it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.45it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.22it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.31it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.27it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.71it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 32.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.79it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.74it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 24.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.87it/s]Train:  10%|█         | 6/60 [00:00<00:01, 29.34it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.16it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.00it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.23it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.75it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.12it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.22it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.53it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 34.93it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 32.82it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.94it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.53it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.58it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 40.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 48.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.31it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 34.33it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.57it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.30it/s]
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 132: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5770, Val 10.4084, Test 10.2212
          MAE              : Train 7.0618, Val 7.6584, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 133: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5769, Val 10.4084, Test 10.2212
          MAE              : Train 7.0618, Val 7.6584, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 134: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5769, Val 10.4085, Test 10.2213
          MAE              : Train 7.0625, Val 7.6586, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 135: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5769, Val 10.4085, Test 10.2213
          MAE              : Train 7.0621, Val 7.6586, Test 7.5936
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 136: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5769, Val 10.4083, Test 10.2210
          MAE              : Train 7.0622, Val 7.6582, Test 7.5931
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 137: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1004, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5769, Val 10.4082, Test 10.2210
          MAE              : Train 7.0613, Val 7.6580, Test 7.5930
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 138: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4083, Test 10.2210
          MAE              : Train 7.0617, Val 7.6581, Test 7.5931
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 139: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4083, Test 10.2210
          MAE              : Train 7.0618, Val 7.6581, Test 7.5931
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 140: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4083, Test 10.2210
          MAE              : Train 7.0617, Val 7.6581, Test 7.5931
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 141: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4083, Test 10.2211
          MAE              : Train 7.0617, Val 7.6582, Test 7.5931
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 142: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4083, Test 10.2211
          MAE              : Train 7.0618, Val 7.6582, Test 7.5931
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 143: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4083, Test 10.2211
          MAE              : Train 7.0618, Val 7.6582, Test 7.5932
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 144: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4084, Test 10.2211
          MAE              : Train 7.0619, Val 7.6583, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 145: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4084, Test 10.2211
          MAE              : Train 7.0618, Val 7.6582, Test 7.5932
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 146: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4084, Test 10.2212
          MAE              : Train 7.0618, Val 7.6583, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 147: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4084, Test 10.2212
          MAE              : Train 7.0619, Val 7.6584, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 148: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4084, Test 10.2212
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.25it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 30.17it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 32.06it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.17it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.67it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.28it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.01it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.07it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.55it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.31it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.02it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.59it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 34.65it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.41it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.86it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 27.63it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 35.83it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 32.76it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.24it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.35it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 36.47it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 31.48it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.93it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.50it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.40it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.24it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 33.95it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.04it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 33.70it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.29it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.97it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.92it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.43it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 31.71it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.51it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.22it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.46it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.61it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 33.65it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.29it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.21it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.30it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.18it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.40it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 41.85it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.51it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 35.75it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 39.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.15it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 25.30it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 31.11it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.14it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.96it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.34it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.44it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 34.54it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.45it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.75it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.51it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.40it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 33.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 36.27it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.29it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 44.33it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 35.60it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 33.52it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.19it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.56it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 35.48it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 34.20it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.86it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.05it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.41it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.21it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.07it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 33.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  8.24it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 29.35it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.29it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.59it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.69it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 32.01it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.50it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.34it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.70it/s]Train:  40%|████      | 24/60 [00:00<00:01, 34.43it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.13it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.46it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.86it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 32.36it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.72it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.92it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 36.35it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 32.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.87it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 31.66it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.23it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 29.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.96it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.39it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.37it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.17it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.25it/s]Train:  43%|████▎     | 26/60 [00:00<00:00, 35.06it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.78it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.83it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.55it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 35.05it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.70it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.31it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.30it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.26it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 33.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.19it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.11it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 37.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.46it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.04it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.75it/s]Train:  30%|███       | 18/60 [00:00<00:01, 32.05it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.07it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.75it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.59it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 34.09it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.22it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.62it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.91it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.99it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 31.07it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.54it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.69it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.76it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.56it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.07it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 21.64it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.63it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.52it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.14it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.49it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.95it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.97it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 35.37it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.55it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.51it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.48it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 30.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 45.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.28it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.83it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.41it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.77it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.90it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.95it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 33.56it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.29it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 29.70it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.81it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.94it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.31it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.68it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.64it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.82it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.62it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 33.35it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.69it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.71it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.93it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.14it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.62it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.48it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.47it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.66it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.70it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.25it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.82it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 35.23it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.81it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.84it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.31it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.77it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 31.07it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.99it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.13it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 28.83it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.46it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.59it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.93it/s]Train:  40%|████      | 24/60 [00:00<00:01, 35.31it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.20it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.11it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.93it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.20it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.02it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.93it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 28.46it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.04it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.50it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.85it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.32it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.39it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.33it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 34.75it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 33.14it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.31it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.82it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.45it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 33.42it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.67it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.24it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 36.58it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.61it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.88it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 35.45it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.41it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.82it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 28.70it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 31.69it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 33.15it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.96it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.06it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.51it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 33.73it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.73it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 34.97it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 33.48it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.12it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 33.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.85it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.95it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 35.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.51it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 26.69it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.85it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.88it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.69it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 33.97it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 36.68it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.41it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.51it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.20it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.44it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.21it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 37.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.67it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 35.24it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 38.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.99it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 25.11it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.13it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.96it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.59it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.14it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 35.41it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.89it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.46it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.22it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.55it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.99it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.40it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.04it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 34.50it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.87it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.43it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 41.52it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 35.47it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 32.45it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.66it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.70it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.38it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.91it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 34.91it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.21it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.30it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.42it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 34.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.75it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 31.39it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 36.41it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.53it/s]
          MAE              : Train 7.0618, Val 7.6583, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 149: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4084, Test 10.2212
          MAE              : Train 7.0619, Val 7.6584, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 150: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4084, Test 10.2212
          MAE              : Train 7.0619, Val 7.6584, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 151: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4084, Test 10.2212
          MAE              : Train 7.0619, Val 7.6584, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 152: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2212
          MAE              : Train 7.0619, Val 7.6584, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 153: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2212
          MAE              : Train 7.0619, Val 7.6584, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 154: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2212
          MAE              : Train 7.0619, Val 7.6584, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 155: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2212
          MAE              : Train 7.0619, Val 7.6584, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 156: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4084, Test 10.2212
          MAE              : Train 7.0618, Val 7.6583, Test 7.5932
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 157: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4084, Test 10.2212
          MAE              : Train 7.0617, Val 7.6582, Test 7.5932
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 158: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4084, Test 10.2212
          MAE              : Train 7.0618, Val 7.6583, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 159: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2212
          MAE              : Train 7.0618, Val 7.6584, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 160: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2212
          MAE              : Train 7.0618, Val 7.6584, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 161: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2212
          MAE              : Train 7.0619, Val 7.6584, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 162: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2212
          MAE              : Train 7.0618, Val 7.6584, Test 7.5933
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 163: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0618, Val 7.6584, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 164: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2212
          MAE              : Train 7.0619, Val 7.6584, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 165: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2212
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.49it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.22it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.91it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.91it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.85it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.04it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 33.03it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 34.03it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.23it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.46it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.91it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.28it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 30.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.30it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.01it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.41it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.67it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.98it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.16it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.14it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.82it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.75it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.73it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.31it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.70it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.53it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 36.41it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.11it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.70it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.06it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.67it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.16it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 31.53it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.26it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.96it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 30.49it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.84it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.62it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.97it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 34.00it/s]Train:  57%|█████▋    | 34/60 [00:00<00:00, 37.46it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 34.93it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.08it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.84it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.65it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.01it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 37.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 48.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.37it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 33.99it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 35.38it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.16it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 30.56it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.31it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.08it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 32.24it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 36.31it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 35.18it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.88it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.06it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 35.69it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.77it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.53it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.46it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 30.39it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.45it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 34.34it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.14it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 26.85it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.76it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.69it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.74it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.66it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.42it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 21.53it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.70it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.24it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.52it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.25it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 25.92it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.39it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 23.99it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 15.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.76it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 20.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 44.93it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.17it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.25it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 24.20it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.80it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.19it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.79it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.61it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.43it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.19it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.07it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.56it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.99it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.42it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.03it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.99it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 21.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 10.62it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 20.83it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 25.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.56it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.72it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.44it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.55it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.69it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.75it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.97it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.62it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 24.11it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.82it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  6.80it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 19.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 17.40it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 22.87it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 23.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.52it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.17it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.10it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.74it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.27it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.24it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.63it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.05it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.82it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.94it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.33it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.43it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.96it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 46.44it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.88it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.53it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.27it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 28.06it/s]Train:  20%|██        | 12/60 [00:00<00:01, 36.22it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 33.78it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.24it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.68it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 33.23it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.93it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.91it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.54it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.63it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.28it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.88it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01,  9.32it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 23.54it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.56it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 34.44it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.85it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.37it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.50it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.78it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 33.44it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.95it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.13it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.22it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.19it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.29it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.71it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.94it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 21.16it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 32.85it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.88it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 27.79it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 32.46it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 33.32it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 32.61it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.99it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 34.36it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 34.07it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.30it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.89it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 28.86it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.37it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 32.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.98it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.90it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 34.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.38it/s]Train:  10%|█         | 6/60 [00:00<00:01, 30.63it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 30.03it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.46it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.29it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.83it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 31.97it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.69it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 35.81it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.85it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 32.73it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.67it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.27it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 36.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.32it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.89it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.99it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 31.97it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.02it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.30it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.36it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.58it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.49it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.36it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.85it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.12it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.93it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.33it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 30.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 31.95it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.59it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 26.88it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.95it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.43it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 35.50it/s]Train:  43%|████▎     | 26/60 [00:00<00:00, 34.37it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.73it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.70it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.92it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.74it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.15it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 32.81it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.65it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 28.00it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 33.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.42it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.51it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.06it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.08it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.00it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.65it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.43it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.85it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.18it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.50it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.39it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 36.67it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.26it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.57it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.91it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 29.43it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 34.83it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 37.35it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.29it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.67it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 33.40it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.67it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.07it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 28.74it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.86it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.76it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.21it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.85it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.72it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.88it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.72it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.44it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 32.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 35.88it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.95it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.67it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.79it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.91it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.52it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.30it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.72it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.80it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.52it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 35.25it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.20it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.87it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.82it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 33.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.14it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.01it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.57it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.09it/s]
          MAE              : Train 7.0619, Val 7.6585, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 166: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2212
          MAE              : Train 7.0619, Val 7.6585, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 167: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0620, Val 7.6585, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 168: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 169: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 170: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 171: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0591
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 172: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 173: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 174: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 175: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 176: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 177: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 178: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 179: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 180: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 181: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 182: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.24it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.39it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 31.43it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.84it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.20it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.89it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.15it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.59it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.29it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 32.71it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.11it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 33.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.77it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 33.56it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.15it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.82it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 20.41it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.32it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.48it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 34.97it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.76it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.11it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.57it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.54it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 35.45it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.68it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 32.29it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.29it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.23it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.46it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 31.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 31.92it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.01it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 38.11it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.28it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.96it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.52it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.77it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.24it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.28it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.69it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.70it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.17it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.55it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.25it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 26.54it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.46it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 26.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  5.77it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 18.19it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 25.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.91it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.19it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.49it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.99it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.58it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.61it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.99it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.56it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.98it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.14it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.84it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.64it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.07it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.40it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.82it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.56it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.49it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 30.00it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.02it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.43it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.37it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.58it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.97it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.28it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 36.42it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.84it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.74it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 28.40it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 31.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 37.75it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.58it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.67it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 38.34it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.30it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.00it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.89it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.75it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.08it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 31.91it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.15it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.06it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.88it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.36it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.63it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 32.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.43it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 31.57it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.95it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.62it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.06it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.69it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.68it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 34.49it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 32.66it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.58it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.63it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.47it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.27it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.94it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.43it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 40.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.69it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 35.37it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.76it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.96it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 28.87it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 34.33it/s]Train:  30%|███       | 18/60 [00:00<00:01, 32.33it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.08it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.41it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.41it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.70it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.43it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.70it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.85it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.95it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.35it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.90it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 34.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 37.49it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.90it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.00it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 18.74it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.39it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.76it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.42it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.75it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.07it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.54it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.50it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.51it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.21it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.69it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.73it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.22it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.14it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.34it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.67it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 16.15it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 17.91it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.28it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 22.14it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.71it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 26.70it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.32it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.87it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.31it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.23it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.93it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.38it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 32.04it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 30.29it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.77it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.74it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.33it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 25.58it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 30.16it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.86it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 30.74it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 32.14it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 32.46it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.33it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.72it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 35.42it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.18it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.49it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 12.15it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 22.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 34.79it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.74it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 44.57it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 30.54it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.17it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.55it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.45it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 33.60it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.78it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.64it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.91it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.88it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.54it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.09it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 30.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.74it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 31.16it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.31it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.20it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 34.06it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.35it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.29it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.64it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 32.01it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.58it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.31it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.94it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.47it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.13it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 40.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 47.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.11it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 36.02it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.69it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.98it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 24.15it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 30.91it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 36.47it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 33.46it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.91it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.16it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 35.73it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.50it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.16it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.86it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.07it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.87it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.59it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 33.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 31.72it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.50it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 39.34it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 30.31it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.78it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.77it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.18it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.56it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.20it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.89it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 35.59it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.65it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.32it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.22it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.69it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.35it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.84it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 37.92it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.66it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.55it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.00it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.20it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.97it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.16it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.85it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 26.95it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.38it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.09it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.53it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.03it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.35it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.46it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.47it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 30.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 37.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.67it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.47it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.15it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.81it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 18.60it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 30.51it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.05it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.82it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.51it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 31.07it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 35.33it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.53it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.58it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.59it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 35.43it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.31it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.89it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.84it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 28.91it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.67it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 23.49it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 24.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.73it/s]
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 183: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 184: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 185: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 186: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 187: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 188: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 189: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 190: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 191: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 192: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5934
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 193: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 194: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 195: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 196: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 197: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 198: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 199: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 46.57it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.58it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.95it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.88it/s]Train:  40%|████      | 24/60 [00:00<00:01, 23.01it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.68it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.37it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.44it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.42it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.79it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 23.62it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 22.56it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 23.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.47it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 21.94it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.11it/s]

          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
Epoch 200: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.1005, Val -0.0592, Test -0.0592
          RMSE             : Train 9.5768, Val 10.4085, Test 10.2213
          MAE              : Train 7.0619, Val 7.6585, Test 7.5935
Best:
          R2_Score         : Train 0.0199, Val -0.0202, Test -0.0237
          RMSE             : Train 9.9963, Val 10.2149, Test 10.0489
          MAE              : Train 7.4105, Val 7.4996, Test 7.4590
