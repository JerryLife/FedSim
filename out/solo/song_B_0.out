  0%|          | 0/244489 [00:00<?, ?it/s]  0%|          | 524/244489 [00:00<00:46, 5239.28it/s]  1%|          | 1264/244489 [00:00<00:37, 6504.97it/s]  1%|          | 2091/244489 [00:00<00:33, 7310.09it/s]  1%|          | 2824/244489 [00:00<00:33, 7317.10it/s]  1%|▏         | 3556/244489 [00:00<00:33, 7224.63it/s]  2%|▏         | 4279/244489 [00:00<00:33, 7092.65it/s]  2%|▏         | 5034/244489 [00:00<00:33, 7237.45it/s]  2%|▏         | 5762/244489 [00:00<00:32, 7249.40it/s]  3%|▎         | 6593/244489 [00:00<00:31, 7576.37it/s]  3%|▎         | 7409/244489 [00:01<00:30, 7754.66it/s]  3%|▎         | 8185/244489 [00:01<00:31, 7538.92it/s]  4%|▎         | 8941/244489 [00:01<00:34, 6748.28it/s]  4%|▍         | 9632/244489 [00:01<00:40, 5851.08it/s]  4%|▍         | 10338/244489 [00:01<00:38, 6156.14it/s]  4%|▍         | 10980/244489 [00:01<00:41, 5628.85it/s]  5%|▍         | 11568/244489 [00:01<00:40, 5691.69it/s]  5%|▍         | 12155/244489 [00:01<00:40, 5710.07it/s]  5%|▌         | 12907/244489 [00:01<00:37, 6206.97it/s]  6%|▌         | 13834/244489 [00:02<00:32, 7070.37it/s]  6%|▌         | 14711/244489 [00:02<00:30, 7557.37it/s]  6%|▋         | 15536/244489 [00:02<00:29, 7758.58it/s]  7%|▋         | 16322/244489 [00:02<00:31, 7323.31it/s]  7%|▋         | 17066/244489 [00:02<00:40, 5637.20it/s]  7%|▋         | 17694/244489 [00:02<00:40, 5624.46it/s]  7%|▋         | 18302/244489 [00:02<00:43, 5175.13it/s]  8%|▊         | 19021/244489 [00:02<00:39, 5659.98it/s]  8%|▊         | 19816/244489 [00:03<00:35, 6246.76it/s]  8%|▊         | 20648/244489 [00:03<00:32, 6800.99it/s]  9%|▊         | 21360/244489 [00:03<00:33, 6590.74it/s]  9%|▉         | 22112/244489 [00:03<00:32, 6843.90it/s]  9%|▉         | 22934/244489 [00:03<00:30, 7205.27it/s] 10%|▉         | 23670/244489 [00:03<00:36, 6110.54it/s] 10%|▉         | 24319/244489 [00:03<00:38, 5786.65it/s] 10%|█         | 25046/244489 [00:03<00:35, 6162.25it/s] 11%|█         | 25689/244489 [00:03<00:35, 6232.84it/s] 11%|█         | 26429/244489 [00:04<00:33, 6554.10it/s] 11%|█         | 27241/244489 [00:04<00:31, 6995.09it/s] 11%|█▏        | 27955/244489 [00:04<00:39, 5508.68it/s] 12%|█▏        | 28564/244489 [00:04<00:39, 5477.49it/s] 12%|█▏        | 29291/244489 [00:04<00:36, 5928.53it/s] 12%|█▏        | 29946/244489 [00:04<00:35, 6092.26it/s] 13%|█▎        | 30774/244489 [00:04<00:31, 6691.48it/s] 13%|█▎        | 31633/244489 [00:04<00:29, 7225.33it/s] 13%|█▎        | 32413/244489 [00:04<00:28, 7389.55it/s] 14%|█▎        | 33168/244489 [00:05<00:28, 7353.91it/s] 14%|█▍        | 33915/244489 [00:05<00:28, 7319.63it/s] 14%|█▍        | 34675/244489 [00:05<00:28, 7400.38it/s] 15%|█▍        | 35476/244489 [00:05<00:27, 7578.53it/s] 15%|█▍        | 36239/244489 [00:05<00:28, 7403.61it/s] 15%|█▌        | 36984/244489 [00:05<00:28, 7263.10it/s] 15%|█▌        | 37714/244489 [00:05<00:28, 7225.58it/s] 16%|█▌        | 38439/244489 [00:05<00:29, 6880.88it/s] 16%|█▌        | 39132/244489 [00:05<00:31, 6527.15it/s] 16%|█▋        | 39857/244489 [00:06<00:30, 6726.84it/s] 17%|█▋        | 40739/244489 [00:06<00:27, 7319.80it/s] 17%|█▋        | 41479/244489 [00:06<00:28, 7158.82it/s] 17%|█▋        | 42201/244489 [00:06<00:34, 5839.52it/s] 18%|█▊        | 42827/244489 [00:06<00:34, 5921.45it/s] 18%|█▊        | 43450/244489 [00:06<00:36, 5475.89it/s] 18%|█▊        | 44023/244489 [00:06<00:42, 4716.30it/s] 18%|█▊        | 44705/244489 [00:06<00:38, 5212.74it/s] 19%|█▊        | 45472/244489 [00:07<00:34, 5833.13it/s] 19%|█▉        | 46317/244489 [00:07<00:30, 6526.75it/s] 19%|█▉        | 47239/244489 [00:07<00:27, 7265.34it/s] 20%|█▉        | 48135/244489 [00:07<00:25, 7742.64it/s] 20%|██        | 48934/244489 [00:07<00:25, 7627.43it/s] 20%|██        | 49715/244489 [00:07<00:26, 7491.17it/s] 21%|██        | 50477/244489 [00:07<00:25, 7509.51it/s] 21%|██        | 51237/244489 [00:07<00:32, 6001.34it/s] 21%|██        | 51890/244489 [00:07<00:32, 5886.06it/s] 21%|██▏       | 52515/244489 [00:08<00:38, 4952.60it/s] 22%|██▏       | 53090/244489 [00:08<00:37, 5135.76it/s] 22%|██▏       | 53856/244489 [00:08<00:33, 5760.88it/s] 22%|██▏       | 54602/244489 [00:08<00:30, 6203.69it/s] 23%|██▎       | 55347/244489 [00:08<00:28, 6541.68it/s] 23%|██▎       | 56184/244489 [00:08<00:26, 7051.07it/s] 23%|██▎       | 56952/244489 [00:08<00:25, 7227.97it/s] 24%|██▎       | 57711/244489 [00:08<00:25, 7332.25it/s] 24%|██▍       | 58457/244489 [00:08<00:27, 6877.78it/s] 24%|██▍       | 59159/244489 [00:09<00:31, 5969.69it/s] 25%|██▍       | 59934/244489 [00:09<00:28, 6425.72it/s] 25%|██▍       | 60789/244489 [00:09<00:26, 6993.72it/s] 25%|██▌       | 61515/244489 [00:09<00:31, 5734.26it/s] 25%|██▌       | 62282/244489 [00:09<00:29, 6204.74it/s] 26%|██▌       | 63040/244489 [00:09<00:27, 6557.97it/s] 26%|██▌       | 63736/244489 [00:09<00:27, 6582.20it/s] 26%|██▋       | 64474/244489 [00:09<00:26, 6801.28it/s] 27%|██▋       | 65221/244489 [00:10<00:25, 6988.14it/s] 27%|██▋       | 65936/244489 [00:10<00:25, 6910.98it/s] 27%|██▋       | 66688/244489 [00:10<00:25, 7083.66it/s] 28%|██▊       | 67471/244489 [00:10<00:24, 7299.43it/s] 28%|██▊       | 68292/244489 [00:10<00:23, 7565.83it/s] 28%|██▊       | 69054/244489 [00:10<00:30, 5806.29it/s] 29%|██▊       | 69700/244489 [00:10<00:33, 5274.51it/s] 29%|██▊       | 70279/244489 [00:10<00:35, 4945.15it/s] 29%|██▉       | 71036/244489 [00:11<00:31, 5564.04it/s] 29%|██▉       | 71806/244489 [00:11<00:28, 6100.64it/s] 30%|██▉       | 72568/244489 [00:11<00:26, 6500.93it/s] 30%|██▉       | 73345/244489 [00:11<00:24, 6848.54it/s] 30%|███       | 74184/244489 [00:11<00:23, 7280.35it/s] 31%|███       | 74957/244489 [00:11<00:22, 7409.17it/s] 31%|███       | 75778/244489 [00:11<00:22, 7641.43it/s] 32%|███▏      | 77539/244489 [00:11<00:15, 10564.41it/s] 32%|███▏      | 78772/244489 [00:11<00:14, 11084.89it/s] 33%|███▎      | 79892/244489 [00:11<00:16, 10032.30it/s] 33%|███▎      | 80922/244489 [00:12<00:16, 9666.55it/s]  34%|███▍      | 82753/244489 [00:12<00:13, 12036.84it/s] 34%|███▍      | 83993/244489 [00:12<00:13, 11806.46it/s] 35%|███▍      | 85199/244489 [00:12<00:14, 10667.51it/s] 35%|███▌      | 86719/244489 [00:12<00:13, 11868.38it/s] 36%|███▌      | 88241/244489 [00:12<00:12, 12787.86it/s] 37%|███▋      | 90278/244489 [00:12<00:10, 14924.29it/s] 38%|███▊      | 92065/244489 [00:12<00:09, 15768.20it/s] 38%|███▊      | 93736/244489 [00:12<00:09, 16040.12it/s] 39%|███▉      | 95363/244489 [00:13<00:09, 15803.91it/s] 40%|███▉      | 97160/244489 [00:13<00:08, 16434.30it/s] 41%|████      | 99043/244489 [00:13<00:08, 17136.87it/s] 41%|████▏     | 100995/244489 [00:13<00:08, 17840.59it/s] 42%|████▏     | 102788/244489 [00:13<00:08, 16931.15it/s] 43%|████▎     | 104497/244489 [00:13<00:09, 15373.54it/s] 43%|████▎     | 106128/244489 [00:13<00:08, 15625.73it/s] 44%|████▍     | 107833/244489 [00:13<00:08, 16020.18it/s] 45%|████▍     | 109464/244489 [00:13<00:08, 16100.38it/s] 45%|████▌     | 111179/244489 [00:13<00:08, 16401.81it/s] 46%|████▌     | 112832/244489 [00:14<00:08, 16085.58it/s] 47%|████▋     | 114450/244489 [00:14<00:08, 15767.41it/s] 48%|████▊     | 116249/244489 [00:14<00:07, 16405.71it/s] 48%|████▊     | 117897/244489 [00:14<00:08, 15511.50it/s] 49%|████▉     | 119462/244489 [00:14<00:08, 13924.45it/s] 50%|████▉     | 121095/244489 [00:14<00:08, 14562.25it/s] 50%|█████     | 122908/244489 [00:14<00:07, 15542.63it/s] 51%|█████     | 124649/244489 [00:14<00:07, 15905.53it/s] 52%|█████▏    | 126264/244489 [00:14<00:07, 15656.13it/s] 52%|█████▏    | 128269/244489 [00:15<00:06, 16909.09it/s] 53%|█████▎    | 130274/244489 [00:15<00:06, 17816.51it/s] 54%|█████▍    | 132072/244489 [00:15<00:06, 16608.26it/s] 55%|█████▍    | 133856/244489 [00:15<00:06, 16950.69it/s] 55%|█████▌    | 135572/244489 [00:15<00:06, 16253.48it/s] 56%|█████▌    | 137216/244489 [00:15<00:08, 12992.91it/s] 57%|█████▋    | 138695/244489 [00:15<00:07, 13384.17it/s] 57%|█████▋    | 140120/244489 [00:16<00:10, 10431.03it/s] 58%|█████▊    | 141380/244489 [00:16<00:09, 10905.38it/s] 58%|█████▊    | 142593/244489 [00:16<00:09, 10478.95it/s] 59%|█████▉    | 143725/244489 [00:16<00:09, 10659.30it/s] 59%|█████▉    | 145117/244489 [00:16<00:08, 11440.52it/s] 60%|█████▉    | 146317/244489 [00:16<00:08, 11124.40it/s] 61%|██████▏   | 149901/244489 [00:16<00:05, 17747.73it/s] 62%|██████▏   | 151985/244489 [00:16<00:04, 18602.55it/s] 64%|██████▎   | 155268/244489 [00:16<00:03, 22632.83it/s] 64%|██████▍   | 157612/244489 [00:17<00:04, 18719.35it/s] 65%|██████▌   | 159651/244489 [00:17<00:04, 17270.03it/s] 66%|██████▌   | 161506/244489 [00:17<00:04, 17400.74it/s] 67%|██████▋   | 163338/244489 [00:17<00:06, 12056.73it/s] 67%|██████▋   | 164817/244489 [00:17<00:08, 9361.81it/s]  68%|██████▊   | 166581/244489 [00:17<00:07, 10816.06it/s] 69%|██████▉   | 168101/244489 [00:18<00:06, 11694.34it/s] 69%|██████▉   | 169870/244489 [00:18<00:05, 13028.27it/s] 70%|███████   | 171497/244489 [00:18<00:05, 13809.35it/s] 71%|███████   | 173282/244489 [00:18<00:04, 14842.98it/s] 73%|███████▎  | 177312/244489 [00:18<00:03, 21666.20it/s] 75%|███████▍  | 182499/244489 [00:18<00:02, 30028.60it/s] 77%|███████▋  | 187038/244489 [00:18<00:01, 34381.51it/s] 78%|███████▊  | 190638/244489 [00:18<00:01, 31205.03it/s] 79%|███████▉  | 193927/244489 [00:19<00:02, 23259.30it/s] 80%|████████  | 196651/244489 [00:19<00:03, 13975.43it/s] 81%|████████▏ | 198748/244489 [00:19<00:03, 12425.96it/s] 82%|████████▏ | 200481/244489 [00:19<00:03, 11096.01it/s] 83%|████████▎ | 201928/244489 [00:20<00:04, 9486.62it/s]  83%|████████▎ | 203119/244489 [00:20<00:04, 9173.42it/s] 84%|████████▎ | 204193/244489 [00:20<00:04, 9438.82it/s] 84%|████████▍ | 205267/244489 [00:20<00:04, 9621.53it/s] 84%|████████▍ | 206330/244489 [00:20<00:03, 9811.62it/s] 85%|████████▍ | 207389/244489 [00:20<00:04, 9182.12it/s] 85%|████████▌ | 208361/244489 [00:20<00:04, 8325.52it/s] 86%|████████▌ | 209236/244489 [00:20<00:04, 8188.70it/s] 86%|████████▌ | 210082/244489 [00:21<00:04, 7283.14it/s] 86%|████████▋ | 210908/244489 [00:21<00:04, 7512.56it/s] 87%|████████▋ | 211686/244489 [00:21<00:04, 7491.52it/s] 87%|████████▋ | 212551/244489 [00:21<00:04, 7793.30it/s] 87%|████████▋ | 213539/244489 [00:21<00:03, 8361.16it/s] 88%|████████▊ | 214588/244489 [00:21<00:03, 8955.18it/s] 88%|████████▊ | 215878/244489 [00:21<00:02, 10081.19it/s] 89%|████████▉ | 217745/244489 [00:21<00:02, 12568.34it/s] 90%|████████▉ | 219046/244489 [00:21<00:02, 12694.75it/s] 90%|█████████ | 220521/244489 [00:22<00:01, 13300.24it/s] 91%|█████████ | 222118/244489 [00:22<00:01, 14090.89it/s] 92%|█████████▏| 223729/244489 [00:22<00:01, 14690.60it/s] 92%|█████████▏| 225205/244489 [00:22<00:01, 12915.04it/s] 93%|█████████▎| 226541/244489 [00:22<00:01, 10847.34it/s] 93%|█████████▎| 227706/244489 [00:22<00:01, 9643.57it/s]  94%|█████████▎| 228741/244489 [00:22<00:01, 8143.10it/s] 96%|█████████▌| 234314/244489 [00:23<00:00, 18469.17it/s] 97%|█████████▋| 236609/244489 [00:23<00:00, 9494.48it/s]  97%|█████████▋| 238342/244489 [00:23<00:00, 7334.41it/s] 98%|█████████▊| 239680/244489 [00:24<00:00, 6936.56it/s] 98%|█████████▊| 240788/244489 [00:24<00:00, 6940.41it/s] 99%|█████████▉| 241773/244489 [00:24<00:00, 7290.20it/s] 99%|█████████▉| 242738/244489 [00:24<00:00, 7492.86it/s]100%|█████████▉| 243663/244489 [00:24<00:00, 7292.58it/s]100%|██████████| 244489/244489 [00:24<00:00, 9839.60it/s]
  0%|          | 0/34927 [00:00<?, ?it/s]  2%|▏         | 729/34927 [00:00<00:04, 7281.43it/s]  4%|▍         | 1458/34927 [00:00<00:04, 7005.69it/s]  6%|▌         | 2160/34927 [00:00<00:05, 5633.07it/s]  8%|▊         | 2870/34927 [00:00<00:05, 6127.99it/s] 10%|█         | 3590/34927 [00:00<00:04, 6475.46it/s] 12%|█▏        | 4256/34927 [00:00<00:05, 6115.96it/s] 15%|█▍        | 5106/34927 [00:00<00:04, 6825.05it/s] 17%|█▋        | 5808/34927 [00:00<00:04, 6881.25it/s] 19%|█▊        | 6508/34927 [00:00<00:04, 6912.86it/s] 21%|██▏       | 7464/34927 [00:01<00:03, 7702.74it/s] 24%|██▎       | 8243/34927 [00:01<00:03, 7727.10it/s] 26%|██▌       | 9022/34927 [00:01<00:03, 7543.56it/s] 28%|██▊       | 9782/34927 [00:01<00:03, 7400.61it/s] 30%|███       | 10526/34927 [00:01<00:03, 7325.92it/s] 32%|███▏      | 11272/34927 [00:01<00:03, 7363.12it/s] 34%|███▍      | 12011/34927 [00:01<00:03, 7244.42it/s] 37%|███▋      | 12863/34927 [00:01<00:02, 7615.96it/s] 39%|███▉      | 13747/34927 [00:01<00:02, 7973.48it/s] 42%|████▏     | 14547/34927 [00:02<00:02, 7531.18it/s] 44%|████▍     | 15307/34927 [00:02<00:02, 6949.32it/s] 46%|████▌     | 16014/34927 [00:02<00:02, 6682.00it/s] 48%|████▊     | 16935/34927 [00:02<00:02, 7367.22it/s] 51%|█████     | 17685/34927 [00:02<00:03, 5344.65it/s] 53%|█████▎    | 18407/34927 [00:02<00:02, 5763.78it/s] 58%|█████▊    | 20359/34927 [00:02<00:01, 9094.82it/s] 62%|██████▏   | 21630/34927 [00:02<00:01, 10020.89it/s] 65%|██████▌   | 22740/34927 [00:03<00:01, 7254.80it/s]  68%|██████▊   | 23647/34927 [00:03<00:01, 6664.96it/s] 70%|██████▉   | 24443/34927 [00:03<00:01, 6868.42it/s] 72%|███████▏  | 25228/34927 [00:03<00:01, 6321.05it/s] 75%|███████▍  | 26052/34927 [00:03<00:01, 6752.77it/s] 77%|███████▋  | 26792/34927 [00:03<00:01, 6849.01it/s] 79%|███████▉  | 27524/34927 [00:03<00:01, 6306.39it/s] 81%|████████  | 28192/34927 [00:04<00:01, 4500.86it/s] 82%|████████▏ | 28734/34927 [00:04<00:01, 4370.53it/s] 84%|████████▍ | 29417/34927 [00:04<00:01, 4887.91it/s] 86%|████████▌ | 30022/34927 [00:04<00:00, 5154.55it/s] 88%|████████▊ | 30637/34927 [00:04<00:00, 5401.16it/s] 89%|████████▉ | 31220/34927 [00:04<00:00, 5331.49it/s] 92%|█████████▏| 32057/34927 [00:04<00:00, 6137.13it/s] 94%|█████████▍| 32862/34927 [00:04<00:00, 6660.82it/s] 96%|█████████▌| 33575/34927 [00:05<00:00, 6792.83it/s] 98%|█████████▊| 34274/34927 [00:05<00:00, 5634.46it/s]100%|██████████| 34927/34927 [00:05<00:00, 6587.98it/s]
  0%|          | 0/69854 [00:00<?, ?it/s]  3%|▎         | 2221/69854 [00:00<00:03, 22200.55it/s]  6%|▋         | 4442/69854 [00:00<00:03, 18159.83it/s]  9%|▉         | 6304/69854 [00:00<00:03, 16227.33it/s] 12%|█▏        | 8071/69854 [00:00<00:03, 16713.55it/s] 15%|█▌        | 10593/69854 [00:00<00:03, 19490.72it/s] 18%|█▊        | 12630/69854 [00:00<00:02, 19766.92it/s] 21%|██        | 14717/69854 [00:00<00:02, 20108.26it/s] 24%|██▍       | 16799/69854 [00:00<00:02, 20326.98it/s] 27%|██▋       | 18849/69854 [00:00<00:02, 18931.49it/s] 30%|██▉       | 20896/69854 [00:01<00:02, 19374.84it/s] 33%|███▎      | 22942/69854 [00:01<00:02, 19688.90it/s] 36%|███▌      | 24929/69854 [00:01<00:02, 19601.33it/s] 39%|███▊      | 26901/69854 [00:01<00:02, 15234.83it/s] 41%|████      | 28578/69854 [00:01<00:03, 13224.19it/s] 43%|████▎     | 30041/69854 [00:01<00:03, 13227.83it/s] 45%|████▌     | 31462/69854 [00:01<00:03, 12067.97it/s] 47%|████▋     | 32745/69854 [00:02<00:03, 11643.34it/s] 50%|█████     | 35183/69854 [00:02<00:02, 14742.42it/s] 54%|█████▍    | 37787/69854 [00:02<00:01, 17655.63it/s] 57%|█████▋    | 40001/69854 [00:02<00:01, 18862.16it/s] 60%|██████    | 41987/69854 [00:02<00:01, 17936.89it/s] 63%|██████▎   | 43857/69854 [00:02<00:01, 14521.18it/s] 65%|██████▌   | 45512/69854 [00:02<00:01, 15000.21it/s] 67%|██████▋   | 47130/69854 [00:02<00:01, 13220.42it/s] 70%|██████▉   | 48562/69854 [00:03<00:01, 12752.51it/s] 71%|███████▏  | 49938/69854 [00:03<00:01, 12901.27it/s] 73%|███████▎  | 51316/69854 [00:03<00:01, 13015.34it/s] 76%|███████▌  | 53035/69854 [00:03<00:01, 14127.15it/s] 79%|███████▊  | 54998/69854 [00:03<00:00, 15642.79it/s] 82%|████████▏ | 57019/69854 [00:03<00:00, 16932.96it/s] 84%|████████▍ | 58870/69854 [00:03<00:00, 17385.22it/s] 87%|████████▋ | 60894/69854 [00:03<00:00, 18215.14it/s] 90%|████████▉ | 62738/69854 [00:03<00:00, 16349.34it/s] 92%|█████████▏| 64424/69854 [00:04<00:00, 16341.12it/s] 95%|█████████▌| 66524/69854 [00:04<00:00, 17638.28it/s] 98%|█████████▊| 68624/69854 [00:04<00:00, 18595.14it/s]100%|██████████| 69854/69854 [00:04<00:00, 16377.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:102: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  train_dataset = TensorDataset(torch.tensor(train_X).float(), torch.tensor(train_y).float())
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.87it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 14.86it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.23it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.31it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.61it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 16.07it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 20.32it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 18.85it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 17.33it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 21.07it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.93it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 20.02it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 18.21it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.24it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 18.14it/s]Train:  97%|█████████▋| 58/60 [00:03<00:00, 15.91it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 18.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.48it/s]Val:  44%|████▍     | 4/9 [00:00<00:00,  9.81it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 17.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 17.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.98it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 21.97it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 19.31it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 20.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.09it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.57it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 13.96it/s]Train:  20%|██        | 12/60 [00:00<00:02, 17.21it/s]Train:  25%|██▌       | 15/60 [00:01<00:04, 10.92it/s]Train:  32%|███▏      | 19/60 [00:01<00:03, 12.70it/s]Train:  38%|███▊      | 23/60 [00:01<00:02, 16.56it/s]Train:  43%|████▎     | 26/60 [00:01<00:02, 16.34it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 20.34it/s]Train:  55%|█████▌    | 33/60 [00:02<00:01, 14.41it/s]Train:  60%|██████    | 36/60 [00:02<00:01, 15.64it/s]Train:  65%|██████▌   | 39/60 [00:02<00:01, 13.09it/s]Train:  72%|███████▏  | 43/60 [00:02<00:01, 14.39it/s]Train:  78%|███████▊  | 47/60 [00:03<00:00, 17.90it/s]Train:  83%|████████▎ | 50/60 [00:03<00:00, 18.23it/s]Train:  90%|█████████ | 54/60 [00:03<00:00, 19.87it/s]Train:  95%|█████████▌| 57/60 [00:03<00:00, 21.77it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 17.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  4.73it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 13.93it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 12.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 15.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 25.41it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 19.38it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 20.07it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 22.14it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 21.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.06it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 21.43it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 18.24it/s]Train:  20%|██        | 12/60 [00:00<00:02, 17.03it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 18.18it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.22it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 22.05it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 24.08it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 17.55it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 18.41it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 19.33it/s]Train:  65%|██████▌   | 39/60 [00:02<00:01, 17.81it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 23.39it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 22.69it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.70it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 20.44it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 18.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.73it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 19.27it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.48it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.43it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.72it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 22.06it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 20.49it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.49it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.16it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.88it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.30it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 18.22it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 22.98it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 18.30it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 17.42it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.18it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 18.85it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 18.89it/s]Train:  70%|███████   | 42/60 [00:02<00:01, 14.88it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 17.32it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 16.31it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 19.53it/s]Train:  92%|█████████▏| 55/60 [00:03<00:00, 14.68it/s]Train:  95%|█████████▌| 57/60 [00:03<00:00, 15.11it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 13.09it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 17.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.48it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 19.75it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01,  9.80it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.42it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 23.35it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 21.16it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.19it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.23it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.92it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.20it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.19it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 25.18it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.82it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.77it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.98it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.38it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.70it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.39it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 25.22it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.77it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.63it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.37it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.24it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 28.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.25it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.26it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 26.87it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 23.01it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.47it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 14.39it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.27it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.58it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.87it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.23it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.55it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.69it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.41it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 23.65it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.47it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.97it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.00it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 25.35it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 23.84it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 19.37it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.79it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.49it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.88it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 40.83it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 26.92it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 19.53it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 20.79it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 23.53it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  5.93it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.30it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.40it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.70it/s]Train:  20%|██        | 12/60 [00:00<00:03, 15.20it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 19.74it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 19.67it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.48it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 20.77it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 19.01it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.98it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 19.42it/s]Train:  67%|██████▋   | 40/60 [00:02<00:00, 20.11it/s]Train:  72%|███████▏  | 43/60 [00:02<00:01, 16.19it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 18.33it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 15.86it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 18.41it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.90it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 19.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 34.05it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 15.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 19.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.64it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.81it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 22.20it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 16.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 21.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 14.46it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.83it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.56it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.04it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 21.85it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 16.54it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.18it/s]Train:  43%|████▎     | 26/60 [00:01<00:02, 15.86it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 19.84it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 19.72it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.32it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.91it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 22.71it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 26.66it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.52it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 19.30it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.69it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  5.00it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 22.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.26it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 19.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.99it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.52it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 14.92it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 14.76it/s]Test: 100%|██████████| 18/18 [00:01<00:00, 17.65it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.58it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.80it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 17.84it/s]Train:  27%|██▋       | 16/60 [00:01<00:03, 13.65it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 17.65it/s]Train:  38%|███▊      | 23/60 [00:01<00:02, 13.34it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 17.25it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 17.48it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 19.04it/s]Train:  63%|██████▎   | 38/60 [00:02<00:01, 21.19it/s]Train:  68%|██████▊   | 41/60 [00:02<00:01, 13.92it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 16.23it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 14.02it/s]Train:  85%|████████▌ | 51/60 [00:03<00:00, 16.50it/s]Train:  93%|█████████▎| 56/60 [00:03<00:00, 21.76it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 20.37it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 17.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.28it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 10.76it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 24.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 19.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.95it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.30it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 18.15it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 20.74it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 27.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.41it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.52it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.77it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.05it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.85it/s]Train:  30%|███       | 18/60 [00:00<00:01, 28.59it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.59it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.82it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 20.82it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 18.38it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 19.16it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 19.93it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.23it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 24.34it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.25it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 23.55it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 20.94it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 19.74it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.92it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 18.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.27it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.20it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.07it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 25.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 19.19it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 12.39it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 18.75it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.79it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.45it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.68it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 20.98it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.48it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 26.24it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.39it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.82it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 18.44it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 22.34it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 21.47it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 20.94it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.80it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.53it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.47it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  6.72it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 20.62it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 15.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 16.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 11.73it/s]Test:  22%|██▏       | 4/18 [00:00<00:01, 13.40it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.33it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 23.70it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 23.96it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 23.61it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.67it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.79it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.46it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.87it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.08it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.56it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 21.77it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.62it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.28it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.20it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.17it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 21.28it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.01it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 19.63it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 18.91it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 17.50it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 19.33it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 18.34it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 16.53it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 18.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 15.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 16.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:03,  4.70it/s]Test:  22%|██▏       | 4/18 [00:00<00:01, 13.97it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 16.52it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 25.41it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 25.96it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.30it/s]Loading MSD from data/song/msd_clean.csv
Loading FMA from data/song/fma_clean.csv
Current MSD columns Index(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
       '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24',
       '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36',
       '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48',
       '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60',
       '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72',
       '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84',
       '85', '86', '87', '88', '89', 'title'],
      dtype='object')
Current FMA columns Index(['title', '0', '1', '2', '3', '4', '5', '6', '7', '8',
       ...
       '508', '509', '510', '511', '512', '513', '514', '515', '516', '517'],
      dtype='object', length=519)
Loading data from cache
Done
Generating top1 dataset
Generating top1 dataset
Generating top1 dataset
Loading data
Prepare for training
Start training
=================================================================
                     Kernel Shape Output Shape  Params  Mult-Adds
Layer                                                            
0_fc_layers.Linear_0   [518, 400]  [4096, 400]  207600     207200
1_fc_layers.Linear_1   [400, 200]  [4096, 200]   80200      80000
2_fc_layers.Linear_2     [200, 1]    [4096, 1]     201        200
-----------------------------------------------------------------
                      Totals
Total params          288001
Trainable params      288001
Non-trainable params       0
Mult-Adds             287400
=================================================================
n_classes=2
task=regression
model_name=song_B_2022-05-21-21-20-43
sche_threshold=0.0001
sche_patience=30
sche_factor=0.1
use_scheduler=True
num_workers=4
device=cuda:0
test_batch_size=4096
train_batch_size=4096
learning_rate=0.001
weight_decay=1e-05
num_epochs=200
model_save_path=ckp/song_B_2022-05-21-21-20-43.pth
test_rate=0.2
val_rate=0.1
multiprocess_context=fork
metrics=['r2_score', 'rmse', 'mae']
metrics_f=[<metric.r2_score.R2Score object at 0x7f361bc12640>, <metric.rmse.RMSE object at 0x7f361bc12580>, <metric.mae.MAE object at 0x7f361bc123a0>]
hidden_sizes=[400, 200]
model=MLP(
  (fc_layers): ModuleList(
    (0): Linear(in_features=518, out_features=400, bias=True)
    (1): Linear(in_features=400, out_features=200, bias=True)
    (2): Linear(in_features=200, out_features=1, bias=True)
  )
)
writer=<torch.utils.tensorboard.writer.SummaryWriter object at 0x7f361bc125b0>
Epoch 1: Loss:            : Train 0.1018, Val 0.0925, Test 0.0930
          R2_Score         : Train -6.9145, Val -6.1432, Test -6.4033
          RMSE             : Train 28.4066, Val 27.0298, Test 27.0234
          MAE              : Train 24.9684, Val 22.7883, Test 22.7992
Best:
          R2_Score         : Train -6.9145, Val -6.1432, Test -6.4033
          RMSE             : Train 28.4066, Val 27.0298, Test 27.0234
          MAE              : Train 24.9684, Val 22.7883, Test 22.7992
Epoch 2: Loss:            : Train 0.0880, Val 0.0844, Test 0.0849
          R2_Score         : Train -5.8415, Val -5.5186, Test -5.7518
          RMSE             : Train 26.4109, Val 25.8211, Test 25.8069
          MAE              : Train 22.3818, Val 21.8776, Test 21.8715
Best:
          R2_Score         : Train -5.8415, Val -5.5186, Test -5.7518
          RMSE             : Train 26.4109, Val 25.8211, Test 25.8069
          MAE              : Train 22.3818, Val 21.8776, Test 21.8715
Epoch 3: Loss:            : Train 0.0799, Val 0.0759, Test 0.0763
          R2_Score         : Train -5.2073, Val -4.8581, Test -5.0665
          RMSE             : Train 25.1570, Val 24.4780, Test 24.4623
          MAE              : Train 21.3371, Val 20.7703, Test 20.7666
Best:
          R2_Score         : Train -5.2073, Val -4.8581, Test -5.0665
          RMSE             : Train 25.1570, Val 24.4780, Test 24.4623
          MAE              : Train 21.3371, Val 20.7703, Test 20.7666
Epoch 4: Loss:            : Train 0.0707, Val 0.0661, Test 0.0664
          R2_Score         : Train -4.4956, Val -4.1035, Test -4.2832
          RMSE             : Train 23.6710, Val 22.8471, Test 22.8283
          MAE              : Train 20.1076, Val 19.4417, Test 19.4376
Best:
          R2_Score         : Train -4.4956, Val -4.1035, Test -4.2832
          RMSE             : Train 23.6710, Val 22.8471, Test 22.8283
          MAE              : Train 20.1076, Val 19.4417, Test 19.4376
Epoch 5: Loss:            : Train 0.0602, Val 0.0549, Test 0.0551
          R2_Score         : Train -3.6787, Val -3.2402, Test -3.3847
          RMSE             : Train 21.8408, Val 20.8252, Test 20.7969
          MAE              : Train 18.5979, Val 17.7769, Test 17.7612
Best:
          R2_Score         : Train -3.6787, Val -3.2402, Test -3.3847
          RMSE             : Train 21.8408, Val 20.8252, Test 20.7969
          MAE              : Train 18.5979, Val 17.7769, Test 17.7612
Epoch 6: Loss:            : Train 0.0485, Val 0.0430, Test 0.0431
          R2_Score         : Train -2.7743, Val -2.3217, Test -2.4303
          RMSE             : Train 19.6167, Val 18.4321, Test 18.3947
          MAE              : Train 16.7544, Val 15.8210, Test 15.7994
Best:
          R2_Score         : Train -2.7743, Val -2.3217, Test -2.4303
          RMSE             : Train 19.6167, Val 18.4321, Test 18.3947
          MAE              : Train 16.7544, Val 15.8210, Test 15.7994
Epoch 7: Loss:            : Train 0.0368, Val 0.0316, Test 0.0316
          R2_Score         : Train -1.8589, Val -1.4446, Test -1.5163
          RMSE             : Train 17.0729, Val 15.8124, Test 15.7544
          MAE              : Train 14.6205, Val 13.5811, Test 13.5468
Best:
          R2_Score         : Train -1.8589, Val -1.4446, Test -1.5163
          RMSE             : Train 17.0729, Val 15.8124, Test 15.7544
          MAE              : Train 14.6205, Val 13.5811, Test 13.5468
Epoch 8: Loss:            : Train 0.0262, Val 0.0222, Test 0.0220
          R2_Score         : Train -1.0372, Val -0.7150, Test -0.7537
          RMSE             : Train 14.4121, Val 13.2442, Test 13.1524
          MAE              : Train 12.2995, Val 11.2453, Test 11.1975
Best:
          R2_Score         : Train -1.0372, Val -0.7150, Test -0.7537
          RMSE             : Train 14.4121, Val 13.2442, Test 13.1524
          MAE              : Train 12.2995, Val 11.2453, Test 11.1975
Epoch 9: Loss:            : Train 0.0183, Val 0.0161, Test 0.0158
          R2_Score         : Train -0.4214, Val -0.2475, Test -0.2631
          RMSE             : Train 12.0383, Val 11.2958, Test 11.1623
          MAE              : Train 10.0400, Val 9.2017, Test 9.1359
Best:
          R2_Score         : Train -0.4214, Val -0.2475, Test -0.2631
          RMSE             : Train 12.0383, Val 11.2958, Test 11.1623
          MAE              : Train 10.0400, Val 9.2017, Test 9.1359
Epoch 10: Loss:            : Train 0.0140, Val 0.0137, Test 0.0133
          R2_Score         : Train -0.0900, Val -0.0669, Test -0.0694
          RMSE             : Train 10.5421, Val 10.4463, Test 10.2704
          MAE              : Train 8.3050, Val 7.9370, Test 7.8706
Best:
          R2_Score         : Train -0.0900, Val -0.0669, Test -0.0694
          RMSE             : Train 10.5421, Val 10.4463, Test 10.2704
          MAE              : Train 8.3050, Val 7.9370, Test 7.8706
Epoch 11: Loss:            : Train 0.0129, Val 0.0133, Test 0.0129
          R2_Score         : Train -0.0023, Val -0.0350, Test -0.0366
          RMSE             : Train 10.1092, Val 10.2891, Test 10.1120
          MAE              : Train 7.5145, Val 7.6202, Test 7.5605
Best:
          R2_Score         : Train -0.0023, Val -0.0350, Test -0.0366
          RMSE             : Train 10.1092, Val 10.2891, Test 10.1120
          MAE              : Train 7.5145, Val 7.6202, Test 7.5605
Epoch 12: Loss:            : Train 0.0127, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0107, Val -0.0322, Test -0.0333
          RMSE             : Train 10.0432, Val 10.2751, Test 10.0957
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:17,  3.35it/s]Train:   7%|▋         | 4/60 [00:00<00:05, 11.10it/s]Train:  12%|█▏        | 7/60 [00:00<00:04, 12.34it/s]Train:  17%|█▋        | 10/60 [00:00<00:03, 15.32it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 15.68it/s]Train:  25%|██▌       | 15/60 [00:01<00:02, 16.57it/s]Train:  30%|███       | 18/60 [00:01<00:02, 19.12it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 20.29it/s]Train:  40%|████      | 24/60 [00:01<00:01, 19.70it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 20.84it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 20.63it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.22it/s]Train:  63%|██████▎   | 38/60 [00:02<00:01, 21.49it/s]Train:  68%|██████▊   | 41/60 [00:02<00:00, 20.34it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 20.48it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 21.61it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 21.28it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 17.28it/s]Train:  93%|█████████▎| 56/60 [00:03<00:00, 18.82it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 11.95it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 17.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.25it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 16.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:02,  8.00it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 17.73it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 17.45it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 20.79it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 19.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 20.31it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:12,  4.71it/s]Train:   5%|▌         | 3/60 [00:00<00:06,  8.21it/s]Train:  10%|█         | 6/60 [00:00<00:03, 14.09it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 14.34it/s]Train:  18%|█▊        | 11/60 [00:00<00:03, 12.49it/s]Train:  22%|██▏       | 13/60 [00:01<00:03, 13.10it/s]Train:  25%|██▌       | 15/60 [00:01<00:04, 10.79it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 15.44it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 15.36it/s]Train:  40%|████      | 24/60 [00:01<00:02, 17.61it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 17.12it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 21.02it/s]Train:  55%|█████▌    | 33/60 [00:02<00:01, 15.00it/s]Train:  60%|██████    | 36/60 [00:02<00:01, 17.29it/s]Train:  65%|██████▌   | 39/60 [00:02<00:01, 12.06it/s]Train:  70%|███████   | 42/60 [00:02<00:01, 14.03it/s]Train:  73%|███████▎  | 44/60 [00:03<00:01, 11.04it/s]Train:  80%|████████  | 48/60 [00:03<00:00, 15.09it/s]Train:  85%|████████▌ | 51/60 [00:03<00:00, 14.52it/s]Train:  92%|█████████▏| 55/60 [00:03<00:00, 15.98it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 19.87it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 15.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:02,  3.85it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 13.05it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 12.42it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 13.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.21it/s]Test:  28%|██▊       | 5/18 [00:00<00:01, 12.32it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 15.09it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 18.82it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 19.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.39it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 11.70it/s]Train:  10%|█         | 6/60 [00:00<00:06,  8.95it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 13.39it/s]Train:  18%|█▊        | 11/60 [00:00<00:03, 14.38it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.64it/s]Train:  30%|███       | 18/60 [00:01<00:01, 21.27it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 24.77it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.44it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.93it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 18.02it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 21.46it/s]Train:  68%|██████▊   | 41/60 [00:02<00:01, 18.31it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 18.68it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 13.50it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 15.74it/s]Train:  88%|████████▊ | 53/60 [00:03<00:00, 13.11it/s]Train:  95%|█████████▌| 57/60 [00:03<00:00, 14.81it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 17.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.06it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 23.04it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:04,  3.68it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 15.94it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 16.37it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 18.28it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 21.65it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:16,  3.64it/s]Train:   5%|▌         | 3/60 [00:00<00:06,  8.27it/s]Train:   8%|▊         | 5/60 [00:00<00:05,  9.64it/s]Train:  12%|█▏        | 7/60 [00:00<00:05,  9.15it/s]Train:  17%|█▋        | 10/60 [00:00<00:03, 13.27it/s]Train:  22%|██▏       | 13/60 [00:01<00:03, 13.80it/s]Train:  28%|██▊       | 17/60 [00:01<00:02, 18.90it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 14.67it/s]Train:  40%|████      | 24/60 [00:01<00:02, 15.01it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 20.07it/s]Train:  53%|█████▎    | 32/60 [00:02<00:01, 16.00it/s]Train:  60%|██████    | 36/60 [00:02<00:01, 16.79it/s]Train:  68%|██████▊   | 41/60 [00:02<00:01, 18.51it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 23.02it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 20.37it/s]Train:  88%|████████▊ | 53/60 [00:03<00:00, 19.14it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 21.69it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 17.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.78it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 16.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 17.20it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 24.37it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.21it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 29.77it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.58it/s]Train:   5%|▌         | 3/60 [00:00<00:05,  9.55it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.45it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.52it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 22.82it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.11it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 30.62it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 29.00it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.72it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.77it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.49it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.94it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.95it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 28.54it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.49it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.42it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.52it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.11it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.75it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 17.39it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.02it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 29.52it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.36it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.77it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.17it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 36.06it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.68it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.11it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.46it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.49it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.26it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.40it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.72it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.59it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.61it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.54it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.65it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.49it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.18it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.88it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.91it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.17it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.59it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.72it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 34.29it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 37.11it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 35.31it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.59it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.99it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 35.99it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.13it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.70it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.34it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.10it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.09it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.81it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.55it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.76it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 31.82it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.66it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.78it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.87it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.10it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.37it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.23it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.65it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.67it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.52it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.86it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.41it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.79it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.61it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.48it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.07it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.99it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.89it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.68it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.90it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.75it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.77it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.33it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.06it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.44it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.76it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.01it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.65it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.38it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.49it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:12,  4.61it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 18.13it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.98it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.01it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.43it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.23it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.20it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.78it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.58it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.25it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.33it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.64it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 32.63it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.33it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.92it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.21it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.00it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.85it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.96it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.67it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.73it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.71it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.59it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 32.54it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.13it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.60it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.20it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.76it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.19it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.89it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 36.26it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.52it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 37.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.12it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.02it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.41it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.15it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.30it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.39it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.78it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.19it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 34.58it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.35it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.09it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.14it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.97it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.25it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.48it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.50it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 29.46it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.08it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.50it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.24it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.12it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.08it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.75it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.34it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.10it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 45.36it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.34it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.91it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 14.69it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 25.74it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 33.28it/s]Train:  30%|███       | 18/60 [00:00<00:01, 31.33it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.90it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.79it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 34.82it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.52it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.14it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.56it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.70it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 36.45it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 33.78it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.51it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.47it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.50it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.55it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 16.92it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.62it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.78it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.98it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.43it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.90it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 33.76it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.13it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.86it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.70it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.07it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.50it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 30.80it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.90it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.02it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.59it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.64it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.47it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.09it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.25it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.39it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.70it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 34.88it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.12it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.60it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.10it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.98it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 35.74it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 45.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.44it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.10it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.06it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.10it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 22.93it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.10it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.40it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.08it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 34.60it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.83it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.68it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.20it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.68it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.90it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.96it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.10it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.08it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.10it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.76it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.38it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.13it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.52it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.81it/s]
          MAE              : Train 7.4432, Val 7.5753, Test 7.5122
Best:
          R2_Score         : Train 0.0107, Val -0.0322, Test -0.0333
          RMSE             : Train 10.0432, Val 10.2751, Test 10.0957
          MAE              : Train 7.4432, Val 7.5753, Test 7.5122
Epoch 13: Loss:            : Train 0.0126, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0181, Val -0.0235, Test -0.0254
          RMSE             : Train 10.0057, Val 10.2317, Test 10.0572
          MAE              : Train 7.4121, Val 7.5159, Test 7.4601
Best:
          R2_Score         : Train 0.0181, Val -0.0235, Test -0.0254
          RMSE             : Train 10.0057, Val 10.2317, Test 10.0572
          MAE              : Train 7.4121, Val 7.5159, Test 7.4601
Epoch 14: Loss:            : Train 0.0126, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0226, Val -0.0367, Test -0.0407
          RMSE             : Train 9.9825, Val 10.2974, Test 10.1317
          MAE              : Train 7.3992, Val 7.7328, Test 7.6768
Best:
          R2_Score         : Train 0.0181, Val -0.0235, Test -0.0254
          RMSE             : Train 10.0057, Val 10.2317, Test 10.0572
          MAE              : Train 7.4121, Val 7.5159, Test 7.4601
Epoch 15: Loss:            : Train 0.0125, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0276, Val -0.0233, Test -0.0277
          RMSE             : Train 9.9569, Val 10.2307, Test 10.0682
          MAE              : Train 7.3786, Val 7.5549, Test 7.5079
Best:
          R2_Score         : Train 0.0276, Val -0.0233, Test -0.0277
          RMSE             : Train 9.9569, Val 10.2307, Test 10.0682
          MAE              : Train 7.3786, Val 7.5549, Test 7.5079
Epoch 16: Loss:            : Train 0.0125, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 17: Loss:            : Train 0.0124, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0348, Val -0.0261, Test -0.0271
          RMSE             : Train 9.9203, Val 10.2443, Test 10.0652
          MAE              : Train 7.3515, Val 7.5329, Test 7.4725
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 18: Loss:            : Train 0.0124, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0384, Val -0.0248, Test -0.0267
          RMSE             : Train 9.9017, Val 10.2379, Test 10.0636
          MAE              : Train 7.3426, Val 7.5411, Test 7.4860
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 19: Loss:            : Train 0.0123, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0410, Val -0.0274, Test -0.0313
          RMSE             : Train 9.8882, Val 10.2510, Test 10.0860
          MAE              : Train 7.3275, Val 7.6147, Test 7.5623
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 20: Loss:            : Train 0.0123, Val 0.0132, Test 0.0127
          R2_Score         : Train 0.0434, Val -0.0238, Test -0.0259
          RMSE             : Train 9.8760, Val 10.2331, Test 10.0595
          MAE              : Train 7.3213, Val 7.5460, Test 7.4938
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 21: Loss:            : Train 0.0123, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0465, Val -0.0335, Test -0.0365
          RMSE             : Train 9.8599, Val 10.2815, Test 10.1112
          MAE              : Train 7.3071, Val 7.6390, Test 7.5830
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 22: Loss:            : Train 0.0123, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0478, Val -0.0260, Test -0.0288
          RMSE             : Train 9.8530, Val 10.2438, Test 10.0740
          MAE              : Train 7.3034, Val 7.5054, Test 7.4582
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 23: Loss:            : Train 0.0122, Val 0.0132, Test 0.0128
          R2_Score         : Train 0.0503, Val -0.0263, Test -0.0281
          RMSE             : Train 9.8400, Val 10.2457, Test 10.0704
          MAE              : Train 7.2939, Val 7.4976, Test 7.4490
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 24: Loss:            : Train 0.0122, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0523, Val -0.0291, Test -0.0310
          RMSE             : Train 9.8300, Val 10.2593, Test 10.0844
          MAE              : Train 7.2868, Val 7.4884, Test 7.4327
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 25: Loss:            : Train 0.0122, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0542, Val -0.0323, Test -0.0362
          RMSE             : Train 9.8198, Val 10.2756, Test 10.1100
          MAE              : Train 7.2701, Val 7.5895, Test 7.5409
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 26: Loss:            : Train 0.0122, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0553, Val -0.0414, Test -0.0453
          RMSE             : Train 9.8142, Val 10.3208, Test 10.1543
          MAE              : Train 7.2683, Val 7.6968, Test 7.6439
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 27: Loss:            : Train 0.0121, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0576, Val -0.0304, Test -0.0332
          RMSE             : Train 9.8022, Val 10.2662, Test 10.0955
          MAE              : Train 7.2626, Val 7.5456, Test 7.4925
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 28: Loss:            : Train 0.0121, Val 0.0133, Test 0.0128
          R2_Score         : Train 0.0591, Val -0.0305, Test -0.0335
          RMSE             : Train 9.7946, Val 10.2662, Test 10.0969
          MAE              : Train 7.2544, Val 7.5327, Test 7.4808
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 29: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0606, Val -0.0362, Test -0.0389
          RMSE             : Train 9.7867, Val 10.2947, Test 10.1229
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.70it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.40it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.28it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.26it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.75it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.11it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.26it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 31.57it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 34.84it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.31it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.12it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.04it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.33it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 27.87it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.18it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.92it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 31.47it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.90it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.60it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.98it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.35it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.07it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.02it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.73it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.30it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.43it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.88it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 33.90it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.58it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.25it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.10it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.67it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.60it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.17it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.67it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.36it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.79it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.91it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.83it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 34.26it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 37.93it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 35.71it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.00it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.59it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.65it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 36.17it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.43it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.00it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 29.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.87it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.34it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.05it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.50it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.06it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.06it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 31.43it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.09it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.32it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.22it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 34.66it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.36it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.71it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.08it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.84it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 32.37it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.73it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.24it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.55it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.70it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.06it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 31.63it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.00it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.23it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.74it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.78it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 32.54it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 35.47it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.23it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.44it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.85it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.16it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.59it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 32.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.16it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 34.35it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 33.35it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.01it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.46it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.46it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.99it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.97it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.14it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.52it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.02it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.63it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.61it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.59it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.45it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.31it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.39it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 29.73it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.83it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.94it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.21it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.50it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.95it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 25.53it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.22it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.81it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 33.60it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.81it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.52it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.55it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.66it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.23it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.79it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.78it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.47it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.49it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.41it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 32.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.93it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.25it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 25.99it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.49it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.44it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.77it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.17it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.28it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.07it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.42it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 32.77it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.91it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.60it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.52it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 25.36it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.26it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 26.67it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.23it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.88it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 13.78it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.01it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.96it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.44it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.12it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 28.75it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.29it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.58it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.33it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 34.84it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.31it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.98it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.16it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 35.06it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.59it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.38it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.77it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.05it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.67it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.68it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.87it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.64it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.27it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.66it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.48it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.94it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.51it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.73it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.03it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.74it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.37it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.37it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.43it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.24it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.81it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.43it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.73it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.81it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.86it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.04it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.71it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.31it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 28.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 30.85it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 31.03it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 25.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 12.98it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.36it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.61it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.53it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 28.32it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.16it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.09it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.33it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.31it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.64it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.58it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.30it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.26it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.34it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.22it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 31.19it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 10.95it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.32it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 28.72it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.11it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.12it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.11it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.08it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.43it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.86it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.66it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.13it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.93it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.93it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.23it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.34it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 24.44it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.00it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 19.65it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 20.32it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 19.56it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 20.43it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.84it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 20.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01,  8.93it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 18.54it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 27.03it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 26.93it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.14it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.13it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.83it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 26.16it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.30it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.04it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.52it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 20.47it/s]Train:  38%|███▊      | 23/60 [00:01<00:02, 17.86it/s]Train:  43%|████▎     | 26/60 [00:01<00:02, 14.47it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 18.17it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 17.09it/s]Train:  62%|██████▏   | 37/60 [00:02<00:01, 17.99it/s]Train:  67%|██████▋   | 40/60 [00:02<00:01, 19.39it/s]Train:  72%|███████▏  | 43/60 [00:02<00:01, 13.90it/s]Train:  75%|███████▌  | 45/60 [00:02<00:01, 14.49it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 17.08it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 16.71it/s]Train:  88%|████████▊ | 53/60 [00:03<00:00, 15.38it/s]Train:  92%|█████████▏| 55/60 [00:03<00:00, 13.96it/s]Train:  97%|█████████▋| 58/60 [00:03<00:00, 16.04it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 17.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.51it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 22.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.61it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 20.26it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 20.59it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 25.67it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 21.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 22.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.88it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.04it/s]Train:   7%|▋         | 4/60 [00:00<00:07,  7.25it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 13.35it/s]Train:  17%|█▋        | 10/60 [00:00<00:04, 11.38it/s]Train:  25%|██▌       | 15/60 [00:01<00:03, 14.70it/s]Train:  28%|██▊       | 17/60 [00:01<00:02, 15.15it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 17.00it/s]Train:  37%|███▋      | 22/60 [00:01<00:03, 12.46it/s]Train:  42%|████▏     | 25/60 [00:01<00:02, 14.61it/s]Train:  45%|████▌     | 27/60 [00:02<00:02, 12.51it/s]Train:  52%|█████▏    | 31/60 [00:02<00:01, 16.92it/s]Train:  57%|█████▋    | 34/60 [00:02<00:01, 15.03it/s]Train:  62%|██████▏   | 37/60 [00:02<00:01, 16.89it/s]Train:  65%|██████▌   | 39/60 [00:03<00:02, 10.33it/s]Train:  72%|███████▏  | 43/60 [00:03<00:01, 14.03it/s]Train:  77%|███████▋  | 46/60 [00:03<00:01, 10.27it/s]Train:  85%|████████▌ | 51/60 [00:03<00:00, 14.09it/s]Train:  92%|█████████▏| 55/60 [00:03<00:00, 16.82it/s]Train:  97%|█████████▋| 58/60 [00:04<00:00, 15.90it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 16.40it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 14.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 12.46it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 18.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 18.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.18it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.97it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 21.89it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 21.43it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 28.15it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.37it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.38it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.58it/s]Train:  10%|█         | 6/60 [00:00<00:03, 14.28it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 15.92it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 16.62it/s]Train:  22%|██▏       | 13/60 [00:00<00:03, 14.62it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 15.41it/s]Train:  28%|██▊       | 17/60 [00:01<00:03, 10.93it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 13.48it/s]Train:  37%|███▋      | 22/60 [00:01<00:02, 13.59it/s]Train:  40%|████      | 24/60 [00:01<00:03, 10.34it/s]Train:  45%|████▌     | 27/60 [00:02<00:02, 12.98it/s]Train:  48%|████▊     | 29/60 [00:02<00:02, 12.54it/s]Train:  53%|█████▎    | 32/60 [00:02<00:01, 15.47it/s]Train:  57%|█████▋    | 34/60 [00:02<00:01, 15.44it/s]Train:  60%|██████    | 36/60 [00:02<00:01, 13.97it/s]Train:  63%|██████▎   | 38/60 [00:02<00:01, 14.01it/s]Train:  67%|██████▋   | 40/60 [00:02<00:01, 14.41it/s]Train:  70%|███████   | 42/60 [00:03<00:01, 10.82it/s]Train:  75%|███████▌  | 45/60 [00:03<00:01, 13.86it/s]Train:  78%|███████▊  | 47/60 [00:03<00:01, 10.25it/s]Train:  85%|████████▌ | 51/60 [00:03<00:00, 14.80it/s]Train:  88%|████████▊ | 53/60 [00:04<00:00, 11.80it/s]Train:  95%|█████████▌| 57/60 [00:04<00:00, 15.96it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 14.33it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 13.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.99it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 15.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.68it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 20.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.92it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 29.04it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 19.29it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 21.12it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 23.86it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 23.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.41it/s]Train:   3%|▎         | 2/60 [00:00<00:09,  6.21it/s]Train:   7%|▋         | 4/60 [00:00<00:05, 10.78it/s]Train:  10%|█         | 6/60 [00:00<00:04, 13.28it/s]Train:  13%|█▎        | 8/60 [00:00<00:06,  8.19it/s]Train:  17%|█▋        | 10/60 [00:01<00:04, 10.00it/s]Train:  22%|██▏       | 13/60 [00:01<00:03, 14.05it/s]Train:  25%|██▌       | 15/60 [00:01<00:04, 10.42it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 13.84it/s]Train:  38%|███▊      | 23/60 [00:01<00:02, 17.79it/s]Train:  43%|████▎     | 26/60 [00:01<00:02, 16.20it/s]Train:  50%|█████     | 30/60 [00:02<00:01, 18.95it/s]Train:  55%|█████▌    | 33/60 [00:02<00:01, 15.17it/s]Train:  62%|██████▏   | 37/60 [00:02<00:01, 16.74it/s]Train:  65%|██████▌   | 39/60 [00:02<00:01, 16.73it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 18.57it/s]Train:  75%|███████▌  | 45/60 [00:03<00:00, 17.73it/s]Train:  80%|████████  | 48/60 [00:03<00:00, 19.31it/s]Train:  85%|████████▌ | 51/60 [00:03<00:00, 15.94it/s]Train:  88%|████████▊ | 53/60 [00:03<00:00, 15.58it/s]Train:  92%|█████████▏| 55/60 [00:03<00:00, 14.51it/s]Train:  95%|█████████▌| 57/60 [00:03<00:00, 13.00it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 14.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:02,  3.59it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 18.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 19.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 16.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.01it/s]Test:  22%|██▏       | 4/18 [00:00<00:01,  9.83it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 15.31it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 15.29it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 19.38it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 19.37it/s]
          MAE              : Train 7.2417, Val 7.6033, Test 7.5505
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 30: Loss:            : Train 0.0121, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0625, Val -0.0351, Test -0.0374
          RMSE             : Train 9.7768, Val 10.2895, Test 10.1158
          MAE              : Train 7.2398, Val 7.5722, Test 7.5151
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 31: Loss:            : Train 0.0121, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0634, Val -0.0366, Test -0.0415
          RMSE             : Train 9.7719, Val 10.2970, Test 10.1355
          MAE              : Train 7.2321, Val 7.5943, Test 7.5489
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 32: Loss:            : Train 0.0120, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0650, Val -0.0366, Test -0.0423
          RMSE             : Train 9.7634, Val 10.2968, Test 10.1395
          MAE              : Train 7.2238, Val 7.5952, Test 7.5505
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 33: Loss:            : Train 0.0120, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0653, Val -0.0451, Test -0.0508
          RMSE             : Train 9.7619, Val 10.3389, Test 10.1811
          MAE              : Train 7.2233, Val 7.6948, Test 7.6436
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 34: Loss:            : Train 0.0120, Val 0.0133, Test 0.0129
          R2_Score         : Train 0.0673, Val -0.0335, Test -0.0374
          RMSE             : Train 9.7519, Val 10.2812, Test 10.1156
          MAE              : Train 7.2131, Val 7.5491, Test 7.5020
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 35: Loss:            : Train 0.0120, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0676, Val -0.0385, Test -0.0421
          RMSE             : Train 9.7499, Val 10.3064, Test 10.1385
          MAE              : Train 7.2091, Val 7.6049, Test 7.5507
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 36: Loss:            : Train 0.0120, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0699, Val -0.0397, Test -0.0422
          RMSE             : Train 9.7383, Val 10.3123, Test 10.1389
          MAE              : Train 7.2019, Val 7.5951, Test 7.5285
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 37: Loss:            : Train 0.0120, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0705, Val -0.0414, Test -0.0456
          RMSE             : Train 9.7348, Val 10.3204, Test 10.1555
          MAE              : Train 7.1977, Val 7.6063, Test 7.5526
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 38: Loss:            : Train 0.0120, Val 0.0134, Test 0.0129
          R2_Score         : Train 0.0709, Val -0.0425, Test -0.0433
          RMSE             : Train 9.7326, Val 10.3259, Test 10.1447
          MAE              : Train 7.1969, Val 7.5888, Test 7.5217
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 39: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0720, Val -0.0431, Test -0.0458
          RMSE             : Train 9.7273, Val 10.3289, Test 10.1568
          MAE              : Train 7.1849, Val 7.6346, Test 7.5735
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 40: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0736, Val -0.0442, Test -0.0467
          RMSE             : Train 9.7185, Val 10.3346, Test 10.1612
          MAE              : Train 7.1805, Val 7.6076, Test 7.5437
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 41: Loss:            : Train 0.0119, Val 0.0134, Test 0.0130
          R2_Score         : Train 0.0732, Val -0.0428, Test -0.0449
          RMSE             : Train 9.7208, Val 10.3276, Test 10.1524
          MAE              : Train 7.1815, Val 7.5633, Test 7.5067
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 42: Loss:            : Train 0.0119, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0753, Val -0.0585, Test -0.0631
          RMSE             : Train 9.7095, Val 10.4050, Test 10.2404
          MAE              : Train 7.1709, Val 7.7551, Test 7.6929
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 43: Loss:            : Train 0.0119, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0760, Val -0.0497, Test -0.0532
          RMSE             : Train 9.7061, Val 10.3618, Test 10.1926
          MAE              : Train 7.1678, Val 7.6569, Test 7.5981
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 44: Loss:            : Train 0.0119, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0759, Val -0.0514, Test -0.0570
          RMSE             : Train 9.7068, Val 10.3700, Test 10.2108
          MAE              : Train 7.1658, Val 7.6891, Test 7.6393
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 45: Loss:            : Train 0.0119, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0773, Val -0.0479, Test -0.0513
          RMSE             : Train 9.6995, Val 10.3529, Test 10.1832
          MAE              : Train 7.1604, Val 7.6298, Test 7.5709
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 46: Loss:            : Train 0.0119, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0784, Val -0.0511, Test -0.0555
          RMSE             : Train 9.6934, Val 10.3685, Test 10.2038
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.50it/s]Train:   7%|▋         | 4/60 [00:00<00:07,  7.44it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 13.94it/s]Train:  18%|█▊        | 11/60 [00:00<00:04, 12.21it/s]Train:  23%|██▎       | 14/60 [00:01<00:03, 14.69it/s]Train:  27%|██▋       | 16/60 [00:01<00:03, 12.76it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 14.20it/s]Train:  35%|███▌      | 21/60 [00:01<00:03, 10.69it/s]Train:  43%|████▎     | 26/60 [00:01<00:02, 16.53it/s]Train:  48%|████▊     | 29/60 [00:02<00:02, 13.18it/s]Train:  52%|█████▏    | 31/60 [00:02<00:02, 14.06it/s]Train:  55%|█████▌    | 33/60 [00:02<00:02, 12.24it/s]Train:  60%|██████    | 36/60 [00:02<00:01, 15.09it/s]Train:  65%|██████▌   | 39/60 [00:02<00:01, 15.86it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 18.02it/s]Train:  75%|███████▌  | 45/60 [00:03<00:00, 18.59it/s]Train:  80%|████████  | 48/60 [00:03<00:00, 20.02it/s]Train:  85%|████████▌ | 51/60 [00:03<00:00, 16.98it/s]Train:  88%|████████▊ | 53/60 [00:03<00:00, 15.15it/s]Train:  92%|█████████▏| 55/60 [00:03<00:00, 15.75it/s]Train:  95%|█████████▌| 57/60 [00:03<00:00, 15.35it/s]Train:  98%|█████████▊| 59/60 [00:04<00:00, 16.05it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 14.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 11.21it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 16.50it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 16.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 15.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.43it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 14.65it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 20.34it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 20.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 21.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.55it/s]Train:  10%|█         | 6/60 [00:00<00:04, 13.46it/s]Train:  13%|█▎        | 8/60 [00:00<00:04, 12.59it/s]Train:  17%|█▋        | 10/60 [00:00<00:03, 14.12it/s]Train:  20%|██        | 12/60 [00:00<00:03, 12.07it/s]Train:  27%|██▋       | 16/60 [00:01<00:02, 17.35it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 14.29it/s]Train:  38%|███▊      | 23/60 [00:01<00:02, 16.70it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 20.68it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 20.32it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 23.83it/s]Train:  62%|██████▏   | 37/60 [00:02<00:01, 17.90it/s]Train:  68%|██████▊   | 41/60 [00:02<00:01, 18.36it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 22.09it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.28it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.80it/s]Train:  92%|█████████▏| 55/60 [00:03<00:00, 13.19it/s]Train:  97%|█████████▋| 58/60 [00:03<00:00, 15.18it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 16.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 11.67it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 17.21it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 13.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 14.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 14.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:02,  7.91it/s]Test:  22%|██▏       | 4/18 [00:00<00:01, 10.37it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 15.16it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 14.82it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 14.69it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 15.33it/s]Test: 100%|██████████| 18/18 [00:01<00:00, 16.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:11,  4.96it/s]Train:   5%|▌         | 3/60 [00:00<00:05,  9.56it/s]Train:   8%|▊         | 5/60 [00:00<00:04, 11.19it/s]Train:  12%|█▏        | 7/60 [00:00<00:03, 13.53it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 14.02it/s]Train:  18%|█▊        | 11/60 [00:00<00:03, 15.44it/s]Train:  22%|██▏       | 13/60 [00:01<00:03, 12.33it/s]Train:  25%|██▌       | 15/60 [00:01<00:04, 10.36it/s]Train:  28%|██▊       | 17/60 [00:01<00:04,  9.42it/s]Train:  32%|███▏      | 19/60 [00:01<00:03, 10.73it/s]Train:  35%|███▌      | 21/60 [00:01<00:03, 10.50it/s]Train:  40%|████      | 24/60 [00:02<00:02, 12.68it/s]Train:  43%|████▎     | 26/60 [00:02<00:02, 11.56it/s]Train:  50%|█████     | 30/60 [00:02<00:01, 16.17it/s]Train:  53%|█████▎    | 32/60 [00:02<00:01, 15.03it/s]Train:  57%|█████▋    | 34/60 [00:02<00:01, 15.04it/s]Train:  62%|██████▏   | 37/60 [00:02<00:01, 18.08it/s]Train:  65%|██████▌   | 39/60 [00:02<00:01, 16.64it/s]Train:  68%|██████▊   | 41/60 [00:03<00:01, 14.27it/s]Train:  72%|███████▏  | 43/60 [00:03<00:01, 13.14it/s]Train:  78%|███████▊  | 47/60 [00:03<00:00, 18.03it/s]Train:  83%|████████▎ | 50/60 [00:03<00:00, 13.54it/s]Train:  90%|█████████ | 54/60 [00:03<00:00, 17.70it/s]Train:  95%|█████████▌| 57/60 [00:04<00:00, 15.25it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 17.52it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 14.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.54it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 15.33it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 16.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.85it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 34.66it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 18.84it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 18.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 22.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.22it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 12.45it/s]Train:  10%|█         | 6/60 [00:00<00:04, 11.62it/s]Train:  13%|█▎        | 8/60 [00:00<00:04, 10.79it/s]Train:  17%|█▋        | 10/60 [00:00<00:04, 12.47it/s]Train:  20%|██        | 12/60 [00:01<00:04, 10.10it/s]Train:  23%|██▎       | 14/60 [00:01<00:03, 11.91it/s]Train:  27%|██▋       | 16/60 [00:01<00:03, 12.13it/s]Train:  30%|███       | 18/60 [00:01<00:03, 10.57it/s]Train:  37%|███▋      | 22/60 [00:01<00:02, 13.87it/s]Train:  40%|████      | 24/60 [00:01<00:02, 14.89it/s]Train:  45%|████▌     | 27/60 [00:02<00:02, 14.39it/s]Train:  48%|████▊     | 29/60 [00:02<00:02, 10.93it/s]Train:  52%|█████▏    | 31/60 [00:02<00:02, 12.29it/s]Train:  57%|█████▋    | 34/60 [00:02<00:01, 14.29it/s]Train:  60%|██████    | 36/60 [00:02<00:01, 13.87it/s]Train:  63%|██████▎   | 38/60 [00:02<00:01, 14.01it/s]Train:  67%|██████▋   | 40/60 [00:03<00:01, 13.96it/s]Train:  72%|███████▏  | 43/60 [00:03<00:00, 17.39it/s]Train:  75%|███████▌  | 45/60 [00:03<00:01, 13.45it/s]Train:  78%|███████▊  | 47/60 [00:03<00:01, 12.65it/s]Train:  85%|████████▌ | 51/60 [00:03<00:00, 15.47it/s]Train:  90%|█████████ | 54/60 [00:03<00:00, 17.27it/s]Train:  95%|█████████▌| 57/60 [00:04<00:00, 13.60it/s]Train:  98%|█████████▊| 59/60 [00:04<00:00, 14.11it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 13.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.96it/s]Val:  44%|████▍     | 4/9 [00:00<00:00,  8.39it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 17.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 15.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 33.32it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 16.71it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 18.86it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 22.28it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 23.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:19,  3.04it/s]Train:  10%|█         | 6/60 [00:00<00:03, 13.80it/s]Train:  13%|█▎        | 8/60 [00:00<00:05,  9.60it/s]Train:  18%|█▊        | 11/60 [00:00<00:03, 12.89it/s]Train:  22%|██▏       | 13/60 [00:01<00:04,  9.57it/s]Train:  27%|██▋       | 16/60 [00:01<00:03, 12.63it/s]Train:  30%|███       | 18/60 [00:01<00:04, 10.15it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 13.17it/s]Train:  38%|███▊      | 23/60 [00:02<00:03, 11.63it/s]Train:  42%|████▏     | 25/60 [00:02<00:03, 10.09it/s]Train:  50%|█████     | 30/60 [00:02<00:02, 11.95it/s]Train:  55%|█████▌    | 33/60 [00:02<00:01, 14.18it/s]Train:  60%|██████    | 36/60 [00:03<00:01, 13.30it/s]Train:  63%|██████▎   | 38/60 [00:03<00:01, 13.78it/s]Train:  70%|███████   | 42/60 [00:03<00:01, 16.04it/s]Train:  73%|███████▎  | 44/60 [00:03<00:01, 15.22it/s]Train:  78%|███████▊  | 47/60 [00:03<00:01, 12.57it/s]Train:  83%|████████▎ | 50/60 [00:03<00:00, 15.04it/s]Train:  87%|████████▋ | 52/60 [00:04<00:00, 14.96it/s]Train:  90%|█████████ | 54/60 [00:04<00:00, 14.52it/s]Train:  93%|█████████▎| 56/60 [00:04<00:00, 15.58it/s]Train:  97%|█████████▋| 58/60 [00:04<00:00, 16.54it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 14.56it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 12.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.88it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 14.40it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 18.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 18.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  8.42it/s]Test:  11%|█         | 2/18 [00:00<00:02,  6.24it/s]Test:  28%|██▊       | 5/18 [00:00<00:01, 12.89it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 12.63it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 14.29it/s]Test:  78%|███████▊  | 14/18 [00:01<00:00, 13.36it/s]Test: 100%|██████████| 18/18 [00:01<00:00, 15.47it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:07,  7.94it/s]Train:   8%|▊         | 5/60 [00:00<00:05, 10.51it/s]Train:  12%|█▏        | 7/60 [00:00<00:04, 11.15it/s]Train:  15%|█▌        | 9/60 [00:00<00:05,  9.80it/s]Train:  20%|██        | 12/60 [00:01<00:03, 13.06it/s]Train:  23%|██▎       | 14/60 [00:01<00:03, 12.71it/s]Train:  27%|██▋       | 16/60 [00:01<00:04,  9.08it/s]Train:  33%|███▎      | 20/60 [00:01<00:03, 11.35it/s]Train:  37%|███▋      | 22/60 [00:01<00:03, 11.70it/s]Train:  43%|████▎     | 26/60 [00:02<00:02, 11.40it/s]Train:  50%|█████     | 30/60 [00:02<00:02, 14.15it/s]Train:  53%|█████▎    | 32/60 [00:02<00:02, 13.73it/s]Train:  62%|██████▏   | 37/60 [00:02<00:01, 19.35it/s]Train:  67%|██████▋   | 40/60 [00:03<00:01, 15.52it/s]Train:  73%|███████▎  | 44/60 [00:03<00:01, 13.74it/s]Train:  82%|████████▏ | 49/60 [00:03<00:00, 13.72it/s]Train:  88%|████████▊ | 53/60 [00:03<00:00, 16.90it/s]Train:  93%|█████████▎| 56/60 [00:04<00:00, 14.47it/s]Train:  98%|█████████▊| 59/60 [00:04<00:00, 15.99it/s]Train: 100%|██████████| 60/60 [00:04<00:00, 13.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:02,  3.49it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 14.51it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 11.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 11.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.94it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 14.05it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 15.50it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 13.36it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 18.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 18.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.72it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.47it/s]Train:  10%|█         | 6/60 [00:00<00:03, 14.94it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 15.47it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 16.70it/s]Train:  20%|██        | 12/60 [00:00<00:03, 14.46it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 18.30it/s]Train:  28%|██▊       | 17/60 [00:01<00:02, 16.46it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 21.04it/s]Train:  40%|████      | 24/60 [00:01<00:01, 20.34it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 19.46it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 19.34it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 19.37it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 17.53it/s]Train:  65%|██████▌   | 39/60 [00:02<00:00, 22.13it/s]Train:  70%|███████   | 42/60 [00:02<00:01, 14.14it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 16.76it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 15.61it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 14.88it/s]Train:  88%|████████▊ | 53/60 [00:03<00:00, 15.65it/s]Train:  92%|█████████▏| 55/60 [00:03<00:00, 15.16it/s]Train:  95%|█████████▌| 57/60 [00:03<00:00, 14.75it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 15.67it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 16.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.74it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 17.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 20.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:04,  4.03it/s]Test:  17%|█▋        | 3/18 [00:00<00:01,  9.07it/s]Test:  28%|██▊       | 5/18 [00:00<00:01, 11.86it/s]Test:  39%|███▉      | 7/18 [00:00<00:01,  9.09it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 17.71it/s]Test:  83%|████████▎ | 15/18 [00:01<00:00, 13.93it/s]Test: 100%|██████████| 18/18 [00:01<00:00, 14.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:16,  3.58it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 11.92it/s]Train:  10%|█         | 6/60 [00:00<00:04, 12.55it/s]Train:  13%|█▎        | 8/60 [00:00<00:05,  9.99it/s]Train:  17%|█▋        | 10/60 [00:00<00:04, 11.12it/s]Train:  20%|██        | 12/60 [00:01<00:03, 12.27it/s]Train:  23%|██▎       | 14/60 [00:01<00:03, 12.53it/s]Train:  30%|███       | 18/60 [00:01<00:02, 16.98it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 13.77it/s]Train:  40%|████      | 24/60 [00:01<00:02, 14.97it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 19.51it/s]Train:  52%|█████▏    | 31/60 [00:02<00:01, 17.08it/s]Train:  60%|██████    | 36/60 [00:02<00:01, 18.68it/s]Train:  68%|██████▊   | 41/60 [00:02<00:00, 23.15it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 20.48it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 20.00it/s]Train:  87%|████████▋ | 52/60 [00:03<00:00, 23.47it/s]Train:  92%|█████████▏| 55/60 [00:03<00:00, 20.67it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 18.20it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 16.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 11.31it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 18.04it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.14it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.15it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 22.41it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 24.50it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 25.31it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 26.46it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.79it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.71it/s]Train:   7%|▋         | 4/60 [00:00<00:06,  8.91it/s]Train:  12%|█▏        | 7/60 [00:00<00:04, 12.85it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 12.82it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 18.82it/s]Train:  27%|██▋       | 16/60 [00:01<00:02, 16.06it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 18.52it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 20.81it/s]Train:  43%|████▎     | 26/60 [00:01<00:02, 16.22it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 19.84it/s]Train:  55%|█████▌    | 33/60 [00:02<00:01, 15.67it/s]Train:  63%|██████▎   | 38/60 [00:02<00:01, 15.78it/s]Train:  68%|██████▊   | 41/60 [00:02<00:01, 17.39it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 16.56it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 20.42it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 18.94it/s]Train:  92%|█████████▏| 55/60 [00:03<00:00, 19.53it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 18.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.94it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.00it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 26.20it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.32it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 29.67it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.82it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.84it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.88it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.01it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.33it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.79it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.57it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.26it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.55it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.34it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.54it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.80it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.77it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 21.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.00it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 18.66it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 23.95it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 30.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  5.94it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 20.80it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 15.39it/s]Train:  17%|█▋        | 10/60 [00:00<00:03, 15.17it/s]Train:  22%|██▏       | 13/60 [00:00<00:03, 13.86it/s]Train:  25%|██▌       | 15/60 [00:01<00:03, 14.09it/s]Train:  30%|███       | 18/60 [00:01<00:03, 12.03it/s]Train:  37%|███▋      | 22/60 [00:01<00:02, 16.50it/s]Train:  42%|████▏     | 25/60 [00:01<00:02, 13.36it/s]Train:  45%|████▌     | 27/60 [00:01<00:02, 14.06it/s]Train:  50%|█████     | 30/60 [00:02<00:02, 14.88it/s]Train:  57%|█████▋    | 34/60 [00:02<00:01, 19.34it/s]Train:  62%|██████▏   | 37/60 [00:02<00:01, 14.78it/s]Train:  68%|██████▊   | 41/60 [00:02<00:01, 15.83it/s]Train:  72%|███████▏  | 43/60 [00:02<00:01, 15.50it/s]Train:  78%|███████▊  | 47/60 [00:03<00:00, 15.95it/s]Train:  87%|████████▋ | 52/60 [00:03<00:00, 20.95it/s]Train:  92%|█████████▏| 55/60 [00:03<00:00, 18.99it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 18.78it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 16.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 31.52it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 20.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 12.29it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 16.97it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 22.30it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 20.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 21.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:05, 11.35it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 14.31it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 17.48it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.72it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 17.33it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 17.08it/s]Train:  40%|████      | 24/60 [00:01<00:01, 20.57it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 17.30it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 21.27it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 17.70it/s]Train:  62%|██████▏   | 37/60 [00:02<00:01, 18.61it/s]Train:  67%|██████▋   | 40/60 [00:02<00:01, 17.38it/s]Train:  72%|███████▏  | 43/60 [00:02<00:01, 16.03it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 21.97it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 20.94it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.34it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 26.09it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 19.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.10it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 32.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.88it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.20it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.07it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.99it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.97it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.93it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 18.87it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.74it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.07it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 20.95it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.53it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.38it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 21.99it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.97it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.31it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.44it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 20.13it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 25.40it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.70it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.78it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 22.42it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 24.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.04it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.46it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.88it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.97it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.07it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.01it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.00it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.66it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.16it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 24.72it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.32it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 28.85it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.85it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.32it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.98it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.20it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 20.85it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.96it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 25.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.46it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.36it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.16it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 18.94it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.95it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 21.96it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.43it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.94it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.89it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.67it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.24it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 23.45it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 28.21it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.96it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.82it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.41it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.42it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.05it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.51it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.66it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.81it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.95it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.51it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.06it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.22it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.47it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.26it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.65it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.48it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 18.19it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 23.88it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 20.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 23.99it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.59it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 22.34it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 17.12it/s]Train:  20%|██        | 12/60 [00:00<00:02, 18.22it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.07it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 18.87it/s]Train:  40%|████      | 24/60 [00:01<00:01, 20.43it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.15it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 21.30it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.71it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 21.37it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 19.67it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 21.95it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 20.68it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 17.75it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 19.71it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 16.65it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 19.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 22.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.02it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 24.44it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.96it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.30it/s]
          MAE              : Train 7.1526, Val 7.6456, Test 7.5897
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 47: Loss:            : Train 0.0119, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0785, Val -0.0531, Test -0.0579
          RMSE             : Train 9.6931, Val 10.3786, Test 10.2154
          MAE              : Train 7.1555, Val 7.6818, Test 7.6222
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 48: Loss:            : Train 0.0117, Val 0.0135, Test 0.0130
          R2_Score         : Train 0.0919, Val -0.0466, Test -0.0501
          RMSE             : Train 9.6224, Val 10.3464, Test 10.1773
          MAE              : Train 7.1136, Val 7.6257, Test 7.5661
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 49: Loss:            : Train 0.0117, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0942, Val -0.0495, Test -0.0520
          RMSE             : Train 9.6101, Val 10.3607, Test 10.1866
          MAE              : Train 7.0989, Val 7.6371, Test 7.5743
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 50: Loss:            : Train 0.0117, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0948, Val -0.0537, Test -0.0564
          RMSE             : Train 9.6069, Val 10.3814, Test 10.2078
          MAE              : Train 7.0931, Val 7.6750, Test 7.6097
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 51: Loss:            : Train 0.0117, Val 0.0135, Test 0.0131
          R2_Score         : Train 0.0952, Val -0.0500, Test -0.0530
          RMSE             : Train 9.6048, Val 10.3630, Test 10.1918
          MAE              : Train 7.0899, Val 7.6262, Test 7.5648
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 52: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0955, Val -0.0554, Test -0.0588
          RMSE             : Train 9.6033, Val 10.3900, Test 10.2194
          MAE              : Train 7.0908, Val 7.6772, Test 7.6152
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 53: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0956, Val -0.0522, Test -0.0550
          RMSE             : Train 9.6026, Val 10.3739, Test 10.2012
          MAE              : Train 7.0863, Val 7.6438, Test 7.5802
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 54: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0959, Val -0.0533, Test -0.0568
          RMSE             : Train 9.6012, Val 10.3794, Test 10.2097
          MAE              : Train 7.0857, Val 7.6484, Test 7.5880
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 55: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0960, Val -0.0543, Test -0.0577
          RMSE             : Train 9.6005, Val 10.3845, Test 10.2144
          MAE              : Train 7.0836, Val 7.6614, Test 7.6001
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 56: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0962, Val -0.0538, Test -0.0569
          RMSE             : Train 9.5993, Val 10.3819, Test 10.2105
          MAE              : Train 7.0850, Val 7.6516, Test 7.5892
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 57: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0964, Val -0.0538, Test -0.0567
          RMSE             : Train 9.5983, Val 10.3820, Test 10.2095
          MAE              : Train 7.0848, Val 7.6449, Test 7.5823
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 58: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0964, Val -0.0534, Test -0.0560
          RMSE             : Train 9.5982, Val 10.3801, Test 10.2059
          MAE              : Train 7.0826, Val 7.6397, Test 7.5770
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 59: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0967, Val -0.0552, Test -0.0575
          RMSE             : Train 9.5967, Val 10.3888, Test 10.2132
          MAE              : Train 7.0799, Val 7.6467, Test 7.5821
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 60: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0969, Val -0.0552, Test -0.0581
          RMSE             : Train 9.5955, Val 10.3885, Test 10.2163
          MAE              : Train 7.0804, Val 7.6517, Test 7.5894
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 61: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0971, Val -0.0560, Test -0.0588
          RMSE             : Train 9.5946, Val 10.3928, Test 10.2195
          MAE              : Train 7.0749, Val 7.6565, Test 7.5942
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 62: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0971, Val -0.0585, Test -0.0610
          RMSE             : Train 9.5945, Val 10.4048, Test 10.2304
          MAE              : Train 7.0808, Val 7.6839, Test 7.6190
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 63: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0973, Val -0.0550, Test -0.0578
          RMSE             : Train 9.5934, Val 10.3879, Test 10.2150
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.34it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 25.60it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.41it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.45it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.84it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.76it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.53it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.28it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.55it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.41it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.56it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.83it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.57it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.73it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 26.62it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 26.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.22it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.25it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.82it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.26it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 23.76it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 26.68it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.80it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.67it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.38it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.14it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.00it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 25.74it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 16.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.90it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.01it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.18it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 24.56it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.80it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.95it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.87it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.50it/s]Train:  30%|███       | 18/60 [00:00<00:02, 20.71it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 23.72it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 19.61it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.64it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 18.73it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 17.47it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 20.60it/s]Train:  72%|███████▏  | 43/60 [00:02<00:01, 16.91it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 20.80it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 16.04it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 17.94it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 16.93it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 15.38it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 18.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 38.43it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 16.95it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 30.72it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 23.34it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 19.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.48it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.97it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 19.30it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 17.42it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.48it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 16.14it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.01it/s]Train:  47%|████▋     | 28/60 [00:01<00:02, 15.16it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 17.44it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 16.33it/s]Train:  62%|██████▏   | 37/60 [00:02<00:01, 18.35it/s]Train:  67%|██████▋   | 40/60 [00:02<00:01, 14.90it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 17.36it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 14.87it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 17.23it/s]Train:  87%|████████▋ | 52/60 [00:03<00:00, 15.84it/s]Train:  93%|█████████▎| 56/60 [00:03<00:00, 15.46it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 19.06it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 17.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 13.71it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 26.27it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 20.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 20.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.83it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.25it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 20.93it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 19.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 22.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 28.15it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.47it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.13it/s]Train:  20%|██        | 12/60 [00:00<00:03, 14.61it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 17.49it/s]Train:  30%|███       | 18/60 [00:01<00:02, 15.10it/s]Train:  37%|███▋      | 22/60 [00:01<00:02, 16.67it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 20.66it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 22.71it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.88it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 26.77it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 27.08it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 28.79it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.00it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  8.44it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 22.85it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.75it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.54it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 26.09it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.97it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 17.40it/s]Train:  32%|███▏      | 19/60 [00:00<00:02, 19.29it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 22.84it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 19.54it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 23.49it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.31it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.00it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 17.42it/s]Train:  70%|███████   | 42/60 [00:02<00:01, 16.78it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 19.11it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 16.67it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 21.30it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 18.22it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 18.03it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 19.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 12.09it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 21.67it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 16.19it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 18.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 20.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 26.67it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.48it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 16.84it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.00it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 20.89it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 18.99it/s]Train:  40%|████      | 24/60 [00:01<00:01, 20.87it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 18.61it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 20.92it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 18.18it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 21.72it/s]Train:  67%|██████▋   | 40/60 [00:02<00:01, 19.69it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 18.37it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 20.39it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 18.55it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 21.87it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 20.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 12.44it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 29.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 20.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.00it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.87it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 23.31it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 23.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.22it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.44it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.48it/s]Train:  20%|██        | 12/60 [00:00<00:02, 17.86it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 19.80it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.93it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.83it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.82it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.36it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.92it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 27.26it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 30.50it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.37it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 20.55it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.60it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.47it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.65it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.94it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.13it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 21.97it/s]Train:  40%|████      | 24/60 [00:01<00:01, 27.21it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.45it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.16it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.23it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.89it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.66it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 22.51it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 22.15it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.37it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 12.56it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 21.09it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 23.02it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.61it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.82it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.76it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.47it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.91it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.24it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.48it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.65it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.75it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.07it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.50it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 23.33it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 24.23it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 12.38it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 29.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.18it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 25.92it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 27.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.33it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.07it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.86it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.93it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.51it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.03it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 25.52it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.53it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.70it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.71it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.08it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.15it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 18.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.88it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 20.85it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.48it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.66it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.97it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.22it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 21.14it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.11it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 26.68it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 23.66it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 19.67it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 19.67it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 20.51it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 21.27it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 26.33it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.90it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 24.75it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 27.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.65it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.78it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.32it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 21.34it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.64it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.29it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 19.95it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.59it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.35it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.06it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.37it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.90it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 21.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 11.44it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 20.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 18.15it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 22.06it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 26.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.46it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.20it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.92it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.38it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.33it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.88it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.87it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.13it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.72it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 28.98it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.26it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.29it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.48it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 22.99it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.02it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.16it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.70it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.40it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.26it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.90it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.41it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.18it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.80it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.24it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 24.73it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.90it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 27.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 33.58it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.27it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 21.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.79it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 26.53it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.87it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.83it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.08it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 32.06it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 30.11it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.68it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 26.73it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.68it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.49it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.45it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.24it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.29it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.42it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.71it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 25.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 37.73it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.13it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 25.43it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 30.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.81it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.31it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.13it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.19it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.08it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.66it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.06it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.30it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.37it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 27.66it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.56it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.18it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.63it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 23.13it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 27.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.23it/s]
          MAE              : Train 7.0772, Val 7.6434, Test 7.5810
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 64: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0974, Val -0.0560, Test -0.0584
          RMSE             : Train 9.5929, Val 10.3925, Test 10.2175
          MAE              : Train 7.0760, Val 7.6445, Test 7.5793
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 65: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0975, Val -0.0561, Test -0.0581
          RMSE             : Train 9.5924, Val 10.3934, Test 10.2164
          MAE              : Train 7.0782, Val 7.6452, Test 7.5798
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 66: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0977, Val -0.0539, Test -0.0565
          RMSE             : Train 9.5916, Val 10.3822, Test 10.2085
          MAE              : Train 7.0731, Val 7.6213, Test 7.5587
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 67: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0978, Val -0.0538, Test -0.0564
          RMSE             : Train 9.5910, Val 10.3817, Test 10.2081
          MAE              : Train 7.0743, Val 7.6167, Test 7.5547
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 68: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0979, Val -0.0566, Test -0.0590
          RMSE             : Train 9.5904, Val 10.3957, Test 10.2205
          MAE              : Train 7.0721, Val 7.6496, Test 7.5857
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 69: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0981, Val -0.0595, Test -0.0618
          RMSE             : Train 9.5891, Val 10.4098, Test 10.2339
          MAE              : Train 7.0715, Val 7.6702, Test 7.6046
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 70: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0982, Val -0.0575, Test -0.0596
          RMSE             : Train 9.5889, Val 10.4003, Test 10.2234
          MAE              : Train 7.0726, Val 7.6537, Test 7.5892
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 71: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0984, Val -0.0588, Test -0.0613
          RMSE             : Train 9.5877, Val 10.4066, Test 10.2317
          MAE              : Train 7.0679, Val 7.6649, Test 7.6013
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 72: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0984, Val -0.0591, Test -0.0612
          RMSE             : Train 9.5877, Val 10.4081, Test 10.2310
          MAE              : Train 7.0729, Val 7.6629, Test 7.5970
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 73: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0986, Val -0.0587, Test -0.0609
          RMSE             : Train 9.5866, Val 10.4059, Test 10.2298
          MAE              : Train 7.0660, Val 7.6603, Test 7.5962
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 74: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0987, Val -0.0598, Test -0.0617
          RMSE             : Train 9.5861, Val 10.4113, Test 10.2337
          MAE              : Train 7.0667, Val 7.6660, Test 7.5995
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 75: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.0989, Val -0.0607, Test -0.0623
          RMSE             : Train 9.5851, Val 10.4158, Test 10.2365
          MAE              : Train 7.0681, Val 7.6702, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 76: Loss:            : Train 0.0116, Val 0.0136, Test 0.0131
          R2_Score         : Train 0.0990, Val -0.0580, Test -0.0598
          RMSE             : Train 9.5846, Val 10.4026, Test 10.2245
          MAE              : Train 7.0660, Val 7.6498, Test 7.5838
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 77: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.0992, Val -0.0631, Test -0.0652
          RMSE             : Train 9.5834, Val 10.4278, Test 10.2503
          MAE              : Train 7.0676, Val 7.6917, Test 7.6258
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 78: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.0992, Val -0.0582, Test -0.0602
          RMSE             : Train 9.5834, Val 10.4034, Test 10.2265
          MAE              : Train 7.0652, Val 7.6392, Test 7.5749
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 79: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1012, Val -0.0603, Test -0.0625
          RMSE             : Train 9.5726, Val 10.4139, Test 10.2375
          MAE              : Train 7.0521, Val 7.6651, Test 7.6004
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 80: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1013, Val -0.0601, Test -0.0622
          RMSE             : Train 9.5722, Val 10.4128, Test 10.2361
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.07it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.63it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.89it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.64it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.68it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.84it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 34.13it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.14it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.69it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.71it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.63it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.98it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 26.86it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.28it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.54it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.51it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.01it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.70it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 28.93it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.93it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.51it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.10it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.58it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.15it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.38it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.18it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.80it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 30.13it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.73it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.07it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.01it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.24it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.07it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 34.17it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.26it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.45it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.44it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.98it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.31it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 29.58it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.04it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 23.62it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 26.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.98it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.77it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.13it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.65it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.98it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.01it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.71it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.42it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.12it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.72it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.95it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 35.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.84it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 29.58it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.97it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.56it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.79it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.62it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.20it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.17it/s]Train:  40%|████      | 24/60 [00:00<00:01, 28.09it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.24it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.57it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.49it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.66it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.04it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 25.84it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.40it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.29it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 24.40it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 32.01it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 30.48it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 43.16it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.48it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.89it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.74it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.98it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.74it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.30it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.34it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.35it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.91it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 26.95it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.97it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.73it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 22.94it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 23.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.75it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.16it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.76it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.69it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.42it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 26.24it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.59it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.68it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.64it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 26.64it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.14it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.47it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.75it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.61it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 33.68it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.82it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 22.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 26.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.08it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 32.00it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.77it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.95it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.40it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.06it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.29it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.37it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.97it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.74it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.45it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 26.63it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.58it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 28.18it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 33.31it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 32.69it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 31.20it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 49.56it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 31.99it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.86it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.71it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.68it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.08it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.82it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.40it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.40it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 28.12it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 27.89it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.46it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 20.48it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 22.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 25.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.72it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.94it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.64it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 22.83it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.65it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 24.48it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.78it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.40it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.86it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.87it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.00it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 28.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.70it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 30.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.46it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.39it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.99it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.85it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.41it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.71it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.49it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.42it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.86it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.95it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.43it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.14it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.60it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.54it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.80it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.30it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.60it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.77it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.96it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.76it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.01it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.50it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.52it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.99it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.74it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.28it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.31it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 30.78it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 28.24it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.29it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.79it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.99it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.81it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 31.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 12.49it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.18it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.56it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.67it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.17it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.20it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 28.38it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.96it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.19it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.72it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.23it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.50it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 31.40it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  6.10it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.98it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 27.87it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.21it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.67it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.86it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.18it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.32it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.65it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.86it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.47it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.17it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.66it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 31.96it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.57it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 28.55it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  8.23it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.49it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.52it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.70it/s]Train:  10%|█         | 6/60 [00:00<00:01, 27.46it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.53it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 23.10it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.56it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.36it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.69it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.14it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.54it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.71it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 29.08it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 26.62it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.62it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.57it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 26.27it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.46it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.59it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.45it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 27.52it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.02it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.22it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.03it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.02it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.24it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.30it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 23.72it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.90it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 29.60it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.36it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.69it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.92it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.88it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.94it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.85it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 31.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 27.55it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.94it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.76it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.62it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.55it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.50it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.68it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.03it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.76it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.18it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.56it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.18it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.09it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 29.29it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.47it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.69it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 22.74it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.78it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.22it/s]
          MAE              : Train 7.0558, Val 7.6625, Test 7.5975
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 81: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1014, Val -0.0599, Test -0.0620
          RMSE             : Train 9.5720, Val 10.4118, Test 10.2352
          MAE              : Train 7.0565, Val 7.6613, Test 7.5965
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 82: Loss:            : Train 0.0116, Val 0.0136, Test 0.0132
          R2_Score         : Train 0.1014, Val -0.0598, Test -0.0620
          RMSE             : Train 9.5719, Val 10.4115, Test 10.2350
          MAE              : Train 7.0567, Val 7.6610, Test 7.5963
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 83: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1014, Val -0.0605, Test -0.0626
          RMSE             : Train 9.5718, Val 10.4147, Test 10.2380
          MAE              : Train 7.0556, Val 7.6669, Test 7.6018
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 84: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1014, Val -0.0600, Test -0.0622
          RMSE             : Train 9.5718, Val 10.4124, Test 10.2361
          MAE              : Train 7.0573, Val 7.6620, Test 7.5974
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 85: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1014, Val -0.0610, Test -0.0632
          RMSE             : Train 9.5716, Val 10.4172, Test 10.2406
          MAE              : Train 7.0551, Val 7.6713, Test 7.6061
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 86: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1014, Val -0.0605, Test -0.0627
          RMSE             : Train 9.5717, Val 10.4148, Test 10.2382
          MAE              : Train 7.0572, Val 7.6664, Test 7.6013
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 87: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1014, Val -0.0602, Test -0.0623
          RMSE             : Train 9.5715, Val 10.4132, Test 10.2362
          MAE              : Train 7.0566, Val 7.6630, Test 7.5978
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 88: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1015, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5714, Val 10.4190, Test 10.2424
          MAE              : Train 7.0549, Val 7.6747, Test 7.6095
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 89: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1015, Val -0.0605, Test -0.0626
          RMSE             : Train 9.5714, Val 10.4148, Test 10.2381
          MAE              : Train 7.0562, Val 7.6656, Test 7.6005
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 90: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1015, Val -0.0603, Test -0.0625
          RMSE             : Train 9.5713, Val 10.4139, Test 10.2374
          MAE              : Train 7.0569, Val 7.6640, Test 7.5990
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 91: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1015, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5713, Val 10.4184, Test 10.2415
          MAE              : Train 7.0552, Val 7.6714, Test 7.6061
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 92: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1015, Val -0.0610, Test -0.0632
          RMSE             : Train 9.5712, Val 10.4172, Test 10.2406
          MAE              : Train 7.0575, Val 7.6698, Test 7.6045
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 93: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1015, Val -0.0603, Test -0.0624
          RMSE             : Train 9.5710, Val 10.4141, Test 10.2370
          MAE              : Train 7.0546, Val 7.6624, Test 7.5969
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 94: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1015, Val -0.0606, Test -0.0628
          RMSE             : Train 9.5711, Val 10.4152, Test 10.2387
          MAE              : Train 7.0568, Val 7.6663, Test 7.6014
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 95: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1016, Val -0.0607, Test -0.0629
          RMSE             : Train 9.5709, Val 10.4160, Test 10.2394
          MAE              : Train 7.0534, Val 7.6671, Test 7.6019
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 96: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1016, Val -0.0609, Test -0.0630
          RMSE             : Train 9.5709, Val 10.4167, Test 10.2398
          MAE              : Train 7.0563, Val 7.6675, Test 7.6020
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 97: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1016, Val -0.0603, Test -0.0625
          RMSE             : Train 9.5708, Val 10.4139, Test 10.2374
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:10,  5.47it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 21.87it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.96it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.56it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.51it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.86it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.13it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 23.99it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.28it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.45it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 24.75it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.63it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 27.77it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.19it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 25.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 15.80it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 22.76it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.57it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.10it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 11.88it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.05it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.88it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.72it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 28.00it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.94it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.95it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.87it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.83it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.48it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 28.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 32.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 11.38it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 24.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.42it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.58it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.35it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 19.25it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 18.90it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.79it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.88it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.94it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 21.14it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 25.44it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.11it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.67it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.51it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.34it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.77it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.00it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.68it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.99it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.60it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.31it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 19.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:03,  4.98it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 20.93it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 25.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.26it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:11,  5.13it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.79it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.56it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.95it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.78it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.87it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.30it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.16it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.01it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.46it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.22it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 27.54it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 29.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.71it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.54it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.93it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.36it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.34it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.40it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 33.14it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.57it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 28.87it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.29it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.24it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.21it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.26it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 30.60it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.09it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 32.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.73it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.57it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.15it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 33.11it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 26.03it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.11it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.87it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.11it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.60it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.21it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.13it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.79it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.99it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.02it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.03it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  9.18it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 22.45it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.66it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.93it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:12,  4.63it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 18.46it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 17.93it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.35it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.16it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.47it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 28.25it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.10it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.65it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.28it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.40it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.28it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.00it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.16it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 24.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 19.97it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.30it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.96it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.95it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.87it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.02it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.42it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.13it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.22it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.17it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.58it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.02it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.52it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.15it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.31it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.83it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.59it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 30.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.40it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.62it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 16.43it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.77it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.13it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.64it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.10it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.22it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.87it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 33.39it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.41it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.39it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.26it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  8.39it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.21it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  7.16it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.78it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.41it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.08it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.81it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.12it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.38it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 30.74it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.59it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.37it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.29it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.87it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 48.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 20.69it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.13it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 22.38it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 26.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 14.26it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.29it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.99it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.81it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.03it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.03it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.38it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.82it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.06it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.37it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00,  9.43it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.45it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.11it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 30.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.38it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.57it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.61it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.93it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.51it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.90it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.11it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.38it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.24it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.68it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.19it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.49it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 22.51it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 27.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.85it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.91it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.90it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.65it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.93it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.03it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.12it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 19.84it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.84it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 17.98it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 20.57it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 21.78it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 24.15it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.41it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.09it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.28it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.82it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.02it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.15it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.16it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.61it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.48it/s]Train:  20%|██        | 12/60 [00:00<00:02, 17.47it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 16.43it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.64it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 22.34it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.67it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.62it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.43it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 20.15it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.10it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 17.00it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 17.01it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 20.24it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 19.99it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.39it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 20.82it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.59it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.41it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:05,  9.89it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.71it/s]Train:  12%|█▏        | 7/60 [00:00<00:03, 17.24it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.84it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 16.97it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 16.54it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 20.99it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.44it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 24.92it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.87it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.18it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 28.14it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 26.31it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 27.02it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.57it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 23.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.60it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.75it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.98it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 28.07it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.55it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.67it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.32it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.03it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.85it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.59it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.78it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.48it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.04it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 33.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.26it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.27it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 30.69it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.46it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 24.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.20it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.16it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.15it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.36it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.93it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 23.71it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.98it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 29.89it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.20it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.88it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.29it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.06it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.71it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.76it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 33.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.28it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.07it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 29.67it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.22it/s]
          MAE              : Train 7.0570, Val 7.6622, Test 7.5972
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 98: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1016, Val -0.0610, Test -0.0632
          RMSE             : Train 9.5708, Val 10.4172, Test 10.2409
          MAE              : Train 7.0552, Val 7.6690, Test 7.6040
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 99: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1016, Val -0.0612, Test -0.0633
          RMSE             : Train 9.5707, Val 10.4183, Test 10.2415
          MAE              : Train 7.0543, Val 7.6700, Test 7.6046
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 100: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1016, Val -0.0607, Test -0.0628
          RMSE             : Train 9.5706, Val 10.4156, Test 10.2388
          MAE              : Train 7.0560, Val 7.6645, Test 7.5993
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 101: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1016, Val -0.0605, Test -0.0627
          RMSE             : Train 9.5705, Val 10.4150, Test 10.2382
          MAE              : Train 7.0554, Val 7.6628, Test 7.5978
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 102: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1016, Val -0.0610, Test -0.0632
          RMSE             : Train 9.5705, Val 10.4175, Test 10.2409
          MAE              : Train 7.0556, Val 7.6685, Test 7.6033
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 103: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1016, Val -0.0607, Test -0.0629
          RMSE             : Train 9.5705, Val 10.4159, Test 10.2393
          MAE              : Train 7.0547, Val 7.6649, Test 7.5999
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 104: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1017, Val -0.0609, Test -0.0631
          RMSE             : Train 9.5704, Val 10.4169, Test 10.2403
          MAE              : Train 7.0550, Val 7.6672, Test 7.6021
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 105: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1017, Val -0.0608, Test -0.0630
          RMSE             : Train 9.5703, Val 10.4165, Test 10.2398
          MAE              : Train 7.0537, Val 7.6652, Test 7.6001
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 106: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1017, Val -0.0616, Test -0.0638
          RMSE             : Train 9.5703, Val 10.4204, Test 10.2437
          MAE              : Train 7.0544, Val 7.6730, Test 7.6075
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 107: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1017, Val -0.0609, Test -0.0631
          RMSE             : Train 9.5702, Val 10.4166, Test 10.2401
          MAE              : Train 7.0583, Val 7.6656, Test 7.6005
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 108: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1017, Val -0.0617, Test -0.0638
          RMSE             : Train 9.5701, Val 10.4208, Test 10.2438
          MAE              : Train 7.0530, Val 7.6726, Test 7.6070
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 109: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1017, Val -0.0618, Test -0.0640
          RMSE             : Train 9.5700, Val 10.4214, Test 10.2446
          MAE              : Train 7.0534, Val 7.6747, Test 7.6091
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 110: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1019, Val -0.0616, Test -0.0637
          RMSE             : Train 9.5688, Val 10.4201, Test 10.2433
          MAE              : Train 7.0573, Val 7.6720, Test 7.6065
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 111: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0614, Test -0.0635
          RMSE             : Train 9.5688, Val 10.4192, Test 10.2424
          MAE              : Train 7.0559, Val 7.6702, Test 7.6047
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 112: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5688, Val 10.4187, Test 10.2420
          MAE              : Train 7.0549, Val 7.6693, Test 7.6039
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 113: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5688, Val 10.4187, Test 10.2418
          MAE              : Train 7.0548, Val 7.6690, Test 7.6035
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 114: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5688, Val 10.4184, Test 10.2416
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.30it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.35it/s]Train:  20%|██        | 12/60 [00:00<00:02, 21.40it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.18it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.75it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.40it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.10it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.15it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.06it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.04it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.44it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.78it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 19.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  8.18it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.13it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.13it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.87it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.12it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.11it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.28it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.01it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.75it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 33.14it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.17it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 29.81it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.32it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.15it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.26it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 31.14it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.98it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.72it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.48it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.63it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.17it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.30it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 29.69it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.04it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.40it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.08it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.05it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.68it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.61it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.68it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.98it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.57it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.03it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.41it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.68it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.73it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.40it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.28it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.80it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.53it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.19it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.60it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 34.27it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.44it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 29.94it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 27.66it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 13.16it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.28it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 20.73it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 24.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.22it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.12it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 26.69it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.67it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.89it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.92it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.78it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 29.87it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.05it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.86it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.97it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.37it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.03it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 35.85it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.89it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 21.93it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 17.77it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.84it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 15.78it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.87it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.41it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 28.85it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 29.07it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.74it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.65it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.50it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.72it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.38it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.44it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.57it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 26.64it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.22it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.77it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.68it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.68it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.80it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.28it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.04it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 30.78it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.48it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.07it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.87it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.59it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.39it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 29.43it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.86it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.44it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.93it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.65it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.57it/s]Train:  20%|██        | 12/60 [00:00<00:01, 31.53it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.00it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.26it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.11it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.64it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.10it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.00it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.27it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.31it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.90it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 27.48it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.94it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 48.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 14.90it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 26.10it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.35it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.58it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 25.24it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 32.65it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.42it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.19it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.55it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.86it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.13it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.26it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.60it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.25it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.57it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.22it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.07it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 27.13it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 23.45it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 24.90it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 28.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.30it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.16it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.42it/s]Train:  20%|██        | 12/60 [00:00<00:03, 14.46it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 19.43it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 18.11it/s]Train:  38%|███▊      | 23/60 [00:01<00:02, 17.96it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.71it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 20.53it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 18.67it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 22.43it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 19.35it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 20.46it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 20.98it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 21.85it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 15.88it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:02,  7.17it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 16.10it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 22.07it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 24.38it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.68it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.57it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.79it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.27it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.13it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.22it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.93it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.44it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.31it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 27.78it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 33.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.58it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 25.57it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 22.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.91it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.10it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.56it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.34it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.22it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.43it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.75it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.17it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.50it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.69it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.97it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.41it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.22it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 31.12it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 30.24it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.69it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.44it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.30it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.53it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.42it/s]Train:  20%|██        | 12/60 [00:00<00:01, 27.77it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 28.52it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.68it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.36it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 31.67it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.53it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 31.68it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.73it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 30.65it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.36it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 15.80it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.67it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.28it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.02it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.30it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.23it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.65it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.15it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 30.10it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.33it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 31.40it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.91it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.48it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 29.36it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 27.62it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.67it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 30.98it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.22it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.45it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 30.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.57it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.88it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 12.08it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.29it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.48it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.80it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.47it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.33it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.24it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 29.84it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 29.13it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.24it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.40it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 31.50it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.68it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.68it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.13it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   8%|▊         | 5/60 [00:00<00:01, 44.35it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 35.32it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.63it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.13it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 29.97it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 29.45it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.52it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.61it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.71it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.57it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 30.28it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 28.24it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 29.39it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 35.40it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 42.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.46it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.70it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.08it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 29.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.67it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.20it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 32.45it/s]Train:  20%|██        | 12/60 [00:00<00:01, 31.13it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.93it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.41it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.25it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.46it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.92it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.41it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.18it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.75it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.36it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  8.25it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 29.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.49it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 20.14it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 24.42it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 29.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.74it/s]
          MAE              : Train 7.0542, Val 7.6685, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 115: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5687, Val 10.4185, Test 10.2417
          MAE              : Train 7.0542, Val 7.6688, Test 7.6034
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 116: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5687, Val 10.4184, Test 10.2416
          MAE              : Train 7.0543, Val 7.6685, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 117: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0633
          RMSE             : Train 9.5687, Val 10.4181, Test 10.2413
          MAE              : Train 7.0540, Val 7.6678, Test 7.6024
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 118: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0633
          RMSE             : Train 9.5687, Val 10.4181, Test 10.2413
          MAE              : Train 7.0539, Val 7.6675, Test 7.6022
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 119: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0633
          RMSE             : Train 9.5687, Val 10.4183, Test 10.2415
          MAE              : Train 7.0535, Val 7.6680, Test 7.6027
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 120: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5687, Val 10.4184, Test 10.2416
          MAE              : Train 7.0541, Val 7.6682, Test 7.6029
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 121: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5687, Val 10.4185, Test 10.2417
          MAE              : Train 7.0535, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 122: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5687, Val 10.4184, Test 10.2417
          MAE              : Train 7.0540, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 123: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0633
          RMSE             : Train 9.5687, Val 10.4181, Test 10.2413
          MAE              : Train 7.0533, Val 7.6675, Test 7.6022
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 124: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5687, Val 10.4187, Test 10.2420
          MAE              : Train 7.0538, Val 7.6688, Test 7.6034
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 125: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5687, Val 10.4184, Test 10.2417
          MAE              : Train 7.0538, Val 7.6682, Test 7.6029
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 126: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5687, Val 10.4185, Test 10.2417
          MAE              : Train 7.0539, Val 7.6683, Test 7.6029
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 127: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5687, Val 10.4184, Test 10.2417
          MAE              : Train 7.0536, Val 7.6679, Test 7.6026
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 128: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5687, Val 10.4185, Test 10.2417
          MAE              : Train 7.0535, Val 7.6681, Test 7.6027
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 129: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5686, Val 10.4184, Test 10.2417
          MAE              : Train 7.0535, Val 7.6679, Test 7.6025
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 130: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5686, Val 10.4184, Test 10.2416
          MAE              : Train 7.0536, Val 7.6678, Test 7.6024
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 131: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5686, Val 10.4187, Test 10.2419
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 34.46it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.32it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.79it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.65it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 33.09it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 28.44it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.40it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.09it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.65it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.58it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.11it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.75it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 48.55it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.97it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:13,  4.45it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.62it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.67it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.68it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.11it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.80it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 32.53it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.45it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.25it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.00it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.38it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.31it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.98it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.00it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 28.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 11.09it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.43it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.93it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 25.44it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.37it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.53it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.08it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 34.24it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 34.83it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 35.71it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 35.05it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 35.78it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.85it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 28.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.15it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 22.63it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 27.92it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.76it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.44it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 17.46it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.34it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 30.68it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.67it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.60it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.45it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.62it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.80it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.93it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.92it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 30.06it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.57it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 19.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.38it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 26.54it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.32it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 28.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:10,  5.74it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 20.44it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.01it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.89it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.07it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.27it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.79it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 34.06it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 32.10it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.31it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.87it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.78it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.91it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 21.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01,  9.57it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 24.65it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.01it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.97it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 14.00it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.25it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 28.29it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.55it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.81it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 32.99it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.94it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.63it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 34.58it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 30.30it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 25.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:01,  7.21it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 19.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 21.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.42it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 27.60it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 29.02it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.04it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 40.00it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.77it/s]Train:  18%|█▊        | 11/60 [00:00<00:03, 15.89it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.00it/s]Train:  30%|███       | 18/60 [00:00<00:02, 17.01it/s]Train:  38%|███▊      | 23/60 [00:01<00:02, 17.46it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 18.16it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 19.62it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.67it/s]Train:  68%|██████▊   | 41/60 [00:02<00:00, 19.25it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 18.85it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.13it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 19.49it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 19.32it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:04,  4.02it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 14.90it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 19.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 22.79it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:12,  4.77it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.79it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.56it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.64it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.17it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.76it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.21it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 21.98it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.08it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.80it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.26it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 29.23it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 30.66it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.87it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 18.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 12.52it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 22.11it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.02it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.18it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 30.52it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.25it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.33it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.18it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.93it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.90it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.22it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.18it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.95it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.39it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.82it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.12it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 33.07it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.22it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 33.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 39.19it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.31it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.94it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.99it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 30.51it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.39it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 24.19it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.68it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.51it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.74it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.83it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.29it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.11it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.23it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.99it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.58it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 32.78it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.08it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.55it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.68it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.63it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.14it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.68it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.33it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 33.38it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 35.01it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.92it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 35.23it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 30.38it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 28.40it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 30.97it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 29.77it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 29.50it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.69it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 30.87it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.42it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01,  9.45it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 25.32it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.44it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.67it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.01it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.10it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.96it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.28it/s]Train:  42%|████▏     | 25/60 [00:00<00:00, 35.92it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.52it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.00it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.80it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.55it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.18it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.77it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.86it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 29.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.98it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 24.99it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 35.36it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.56it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 29.61it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 35.93it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.78it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.27it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.63it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.16it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.55it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.49it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 35.16it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 25.13it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.42it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 26.20it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 29.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.59it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 31.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.94it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.09it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.76it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 24.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.79it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 21.71it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 22.42it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.79it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.93it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 34.96it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.53it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.13it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.81it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 31.39it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 30.06it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 30.30it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 29.95it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 17.88it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 24.54it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.93it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.48it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.64it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.96it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.41it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.98it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.53it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 34.45it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 35.26it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.71it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 29.20it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.25it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.09it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.80it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.51it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 38.98it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.24it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.53it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 27.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.37it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 39.60it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.75it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.15it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.79it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.80it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.78it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.74it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.24it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 30.79it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.27it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 33.68it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 30.10it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 28.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.27it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 22.33it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.68it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.88it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.20it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.60it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.57it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.73it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.85it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.84it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 31.45it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 30.89it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 30.37it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 31.28it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.62it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 32.78it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.62it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 30.92it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.27it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 24.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.33it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 30.80it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.36it/s]
          MAE              : Train 7.0544, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 132: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0633
          RMSE             : Train 9.5686, Val 10.4182, Test 10.2414
          MAE              : Train 7.0532, Val 7.6674, Test 7.6021
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 133: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5686, Val 10.4185, Test 10.2417
          MAE              : Train 7.0532, Val 7.6681, Test 7.6028
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 134: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5686, Val 10.4186, Test 10.2419
          MAE              : Train 7.0539, Val 7.6683, Test 7.6029
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 135: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5686, Val 10.4185, Test 10.2417
          MAE              : Train 7.0537, Val 7.6681, Test 7.6027
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 136: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5686, Val 10.4186, Test 10.2418
          MAE              : Train 7.0533, Val 7.6683, Test 7.6029
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 137: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5686, Val 10.4190, Test 10.2422
          MAE              : Train 7.0539, Val 7.6690, Test 7.6036
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 138: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5686, Val 10.4185, Test 10.2417
          MAE              : Train 7.0535, Val 7.6682, Test 7.6028
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 139: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0612, Test -0.0634
          RMSE             : Train 9.5686, Val 10.4185, Test 10.2417
          MAE              : Train 7.0537, Val 7.6681, Test 7.6027
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 140: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0614, Test -0.0635
          RMSE             : Train 9.5686, Val 10.4190, Test 10.2422
          MAE              : Train 7.0538, Val 7.6690, Test 7.6036
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 141: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0614, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4190, Test 10.2422
          MAE              : Train 7.0540, Val 7.6689, Test 7.6035
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 142: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0614, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4190, Test 10.2422
          MAE              : Train 7.0540, Val 7.6689, Test 7.6035
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 143: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4190, Test 10.2421
          MAE              : Train 7.0539, Val 7.6688, Test 7.6034
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 144: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4190, Test 10.2422
          MAE              : Train 7.0540, Val 7.6690, Test 7.6035
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 145: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2421
          MAE              : Train 7.0539, Val 7.6688, Test 7.6033
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 146: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2421
          MAE              : Train 7.0540, Val 7.6688, Test 7.6034
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 147: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2421
          MAE              : Train 7.0539, Val 7.6687, Test 7.6033
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 148: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2421
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.05it/s]Train:   5%|▌         | 3/60 [00:00<00:05, 10.76it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.56it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.97it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.27it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.38it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.81it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 31.45it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.42it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 31.85it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.76it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.51it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.12it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 31.58it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 31.08it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.80it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.87it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 27.68it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.91it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.74it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.95it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.99it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 18.42it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.93it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.77it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.80it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.98it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 28.82it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.67it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.15it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.11it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.91it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 27.83it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.33it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.39it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 28.10it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 34.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.57it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.58it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.42it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.17it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.53it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.12it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.95it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.81it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.62it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 32.37it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.67it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.76it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.68it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.48it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 16.16it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.72it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.49it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.72it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 12.91it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.34it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.17it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.61it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.80it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 21.10it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.43it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 20.78it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.22it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.17it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.28it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 29.42it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 32.65it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 29.44it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 15.61it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 24.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 34.50it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.31it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 38.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.63it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.57it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.66it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.23it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.41it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 28.36it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.86it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.91it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.09it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.80it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.22it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.48it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.48it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.91it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.04it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 30.51it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 35.56it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.02it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.55it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 28.57it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 27.82it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.57it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.94it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.83it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.71it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 30.34it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 29.99it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.58it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 32.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.80it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 20.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 13.92it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 27.46it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.63it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.85it/s]Train:  10%|█         | 6/60 [00:00<00:02, 24.68it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 27.22it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 31.55it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.96it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.29it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 31.33it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 29.28it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.91it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.01it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 32.57it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.44it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.92it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 11.10it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.04it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 23.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 33.29it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 31.47it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 32.86it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 27.05it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.50it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.88it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.82it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.07it/s]Train:  40%|████      | 24/60 [00:00<00:01, 23.71it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.87it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.53it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.30it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.12it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.35it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 31.17it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.21it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 28.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 25.72it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 21.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.23it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.23it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 33.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.50it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 30.87it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 29.16it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.25it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.23it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.99it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 31.50it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.80it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 30.56it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 31.75it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 32.87it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 33.13it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.96it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 17.38it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.81it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.79it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.24it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.86it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.99it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.15it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 33.61it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.12it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.82it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 28.03it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.13it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.29it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.51it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 30.74it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 31.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00,  9.86it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 16.08it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 18.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 18.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.47it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.50it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.99it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 38.84it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.00it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.43it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.90it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 33.08it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 29.11it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.34it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 27.27it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.77it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.79it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.55it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 33.09it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.58it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 23.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.49it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 27.39it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.56it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 25.28it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.46it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.93it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 30.00it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.92it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.28it/s]Train:  40%|████      | 24/60 [00:00<00:01, 34.06it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.66it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.80it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.25it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 28.43it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 30.35it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.84it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 37.00it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.58it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.65it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.44it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 27.44it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 28.79it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 25.17it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 31.77it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 33.54it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 33.46it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 34.12it/s]Train:  55%|█████▌    | 33/60 [00:00<00:00, 33.74it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 34.98it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.19it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 29.89it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.93it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 29.86it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.15it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.73it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 31.08it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.42it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 18.25it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 26.19it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.76it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.89it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 30.41it/s]Train:  48%|████▊     | 29/60 [00:01<00:00, 31.35it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.66it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 34.70it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 31.03it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.36it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 26.71it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 31.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.32it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.19it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 30.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.47it/s]Train:   3%|▎         | 2/60 [00:00<00:08,  6.77it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.19it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 17.22it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.72it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.33it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.81it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.54it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 30.04it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.37it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.53it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.14it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.93it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 25.71it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 27.23it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 31.63it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 45.91it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:01, 11.66it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 23.53it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.39it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 25.48it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 30.04it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.18it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.30it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 28.71it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.75it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.01it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 30.19it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.37it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 31.28it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.63it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 29.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.67it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 28.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.82it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.77it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.65it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 28.24it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.53it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 23.37it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.38it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.42it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.42it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 30.71it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 34.40it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.22it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 31.66it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.27it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.83it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 25.80it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 25.71it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.71it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.33it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.11it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 26.09it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 31.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.87it/s]
          MAE              : Train 7.0539, Val 7.6688, Test 7.6034
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 149: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2421
          MAE              : Train 7.0539, Val 7.6687, Test 7.6033
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 150: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2421
          MAE              : Train 7.0539, Val 7.6687, Test 7.6033
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 151: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2421
          MAE              : Train 7.0539, Val 7.6687, Test 7.6033
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 152: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2421
          MAE              : Train 7.0538, Val 7.6687, Test 7.6033
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 153: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2421
          MAE              : Train 7.0539, Val 7.6687, Test 7.6033
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 154: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0539, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 155: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2421
          MAE              : Train 7.0539, Val 7.6687, Test 7.6033
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 156: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2421
          MAE              : Train 7.0538, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 157: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6685, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 158: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 159: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6685, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 160: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 161: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6685, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 162: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 163: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 164: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6685, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 165: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4189, Test 10.2420
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.86it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.68it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.79it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.97it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.83it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.85it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 29.70it/s]Train:  52%|█████▏    | 31/60 [00:01<00:00, 31.61it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.04it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 35.08it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 30.28it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 28.40it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 27.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 33.74it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 29.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.78it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 24.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.77it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 29.56it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.22it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.02it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 26.36it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.21it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 31.59it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 32.80it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 33.76it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 37.05it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.54it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.30it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 32.88it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.85it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.53it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 36.08it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.98it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 24.62it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.64it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 14.05it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 16.60it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.44it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.72it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.34it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.19it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 27.20it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 24.70it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 20.20it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.94it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.03it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.20it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.78it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 29.22it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 30.20it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.25it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 17.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 12.60it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 26.27it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 29.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.97it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.36it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.47it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.18it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 21.63it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.63it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.22it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.54it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.50it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 32.82it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.62it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.22it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 31.01it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.30it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.53it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 25.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 30.02it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.58it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 20.50it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.22it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.63it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.96it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.40it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.38it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.91it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 30.31it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 31.59it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 31.76it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 32.71it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 33.37it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.26it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 47.44it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.62it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 36.93it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.47it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.44it/s]Train:  20%|██        | 12/60 [00:00<00:01, 28.76it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 33.76it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.64it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.97it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 31.03it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.22it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 36.06it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 32.39it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 31.54it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 31.61it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 35.20it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.39it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.85it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 30.03it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.52it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.45it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 33.39it/s]Train:  20%|██        | 12/60 [00:00<00:01, 31.61it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 31.22it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.17it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.37it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 33.85it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 34.45it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.03it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 35.05it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 35.20it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.80it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 28.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 26.86it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.00it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 39.09it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.55it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.24it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 27.37it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.94it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.08it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 30.94it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 35.55it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 33.88it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 32.44it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.12it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 32.71it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 33.49it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.60it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 45.81it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.64it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.43it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.67it/s]Train:  10%|█         | 6/60 [00:00<00:01, 28.88it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.41it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.02it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.41it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.39it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 33.40it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 34.25it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.38it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 33.91it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.71it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.48it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 16.95it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.87it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.50it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 32.08it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.76it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.47it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.78it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.31it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 34.50it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.82it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.93it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 34.55it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 37.45it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 35.47it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.01it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.48it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.72it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.82it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.69it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 30.82it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.60it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 28.19it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 34.41it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 33.13it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.82it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 31.34it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 32.12it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.80it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 34.90it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 34.80it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 35.95it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.59it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.67it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 31.69it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 36.86it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.92it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.26it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 27.63it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 31.21it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 32.89it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.01it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 33.44it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.80it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.63it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 37.93it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 36.19it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 34.58it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.91it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:01, 14.45it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.71it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 25.69it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.61it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.80it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 31.23it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.01it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 29.38it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 29.13it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.51it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.79it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 33.14it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 33.69it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.29it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.46it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 17.44it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 26.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.27it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.67it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.79it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 33.66it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.47it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.48it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 31.73it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.35it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.79it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.78it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.92it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 34.72it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.68it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 34.42it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.59it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.71it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.62it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:09,  6.37it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.21it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 28.59it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.66it/s]Train:  40%|████      | 24/60 [00:00<00:01, 33.11it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 37.04it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 34.63it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 33.54it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 32.43it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 36.17it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 34.42it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 32.84it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 32.61it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.96it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 28.74it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 16.92it/s]Train:  15%|█▌        | 9/60 [00:00<00:01, 27.54it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 31.39it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.06it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.71it/s]Train:  53%|█████▎    | 32/60 [00:00<00:00, 34.74it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 34.85it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 34.43it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 34.80it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 35.10it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.48it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 29.81it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.15it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.70it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.70it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.98it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.31it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.92it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.75it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.04it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.20it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 30.75it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 30.40it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 34.48it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 32.25it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.72it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 30.86it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 35.09it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 26.05it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.51it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 24.41it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.18it/s]
          MAE              : Train 7.0537, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 166: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 167: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6685, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 168: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6685, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 169: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6685, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 170: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4187, Test 10.2419
          MAE              : Train 7.0536, Val 7.6683, Test 7.6029
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 171: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 172: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 173: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 174: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 175: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 176: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 177: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 178: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 179: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 180: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6032
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 181: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 182: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.99it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.95it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.38it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 27.49it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.72it/s]Train:  40%|████      | 24/60 [00:00<00:01, 29.45it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 33.68it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 31.19it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 29.52it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 30.31it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 30.80it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.70it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 32.65it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.69it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.60it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 35.46it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 34.90it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 18.74it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.50it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.64it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.69it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 33.67it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 33.80it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 34.60it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 35.13it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 33.52it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 36.20it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 31.95it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.43it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 19.70it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 23.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 23.30it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.87it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 37.96it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.29it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.98it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.17it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.83it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 31.11it/s]Train:  47%|████▋     | 28/60 [00:00<00:00, 32.33it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 33.39it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 33.99it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 35.13it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 34.65it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 37.86it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.70it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 24.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 41.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 19.24it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 25.90it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 32.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.45it/s]Train:  10%|█         | 6/60 [00:00<00:01, 30.56it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 31.13it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 30.69it/s]Train:  30%|███       | 18/60 [00:00<00:01, 29.57it/s]Train:  40%|████      | 24/60 [00:00<00:01, 31.26it/s]Train:  50%|█████     | 30/60 [00:00<00:00, 32.17it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.38it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 33.70it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.01it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 34.33it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 34.32it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 27.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.11it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.34it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 32.79it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 20.84it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 34.76it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.75it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 27.97it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 28.25it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 30.58it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 31.23it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 32.20it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 30.99it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.04it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 29.38it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 16.53it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 24.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.66it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.80it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 32.73it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 28.24it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 27.51it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 28.60it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 34.54it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 31.11it/s]Train:  48%|████▊     | 29/60 [00:00<00:01, 29.26it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 29.78it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 31.68it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 31.64it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.33it/s]Train:  92%|█████████▏| 55/60 [00:01<00:00, 32.46it/s]Train:  98%|█████████▊| 59/60 [00:01<00:00, 31.15it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 25.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.09it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.33it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.44it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.99it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.15it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 24.56it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 29.12it/s]Train:  30%|███       | 18/60 [00:00<00:01, 30.58it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.97it/s]Train:  50%|█████     | 30/60 [00:01<00:00, 32.69it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 33.60it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.64it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.07it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 36.48it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 33.53it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 31.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 46.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 18.30it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 31.29it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 31.21it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.43it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 17.90it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 32.59it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.75it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 30.28it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 30.30it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 32.12it/s]Train:  53%|█████▎    | 32/60 [00:01<00:00, 33.63it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 34.30it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.99it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 35.39it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 35.77it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.16it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 36.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 35.52it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 32.15it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 32.93it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.11it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 27.11it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.26it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 26.87it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 33.50it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 31.57it/s]Train:  40%|████      | 24/60 [00:00<00:01, 30.74it/s]Train:  47%|████▋     | 28/60 [00:00<00:01, 29.25it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 31.31it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 32.61it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 33.09it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.41it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.04it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 32.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 28.82it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 33.34it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 37.77it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 43.37it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.34it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 31.73it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 32.45it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 33.64it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 34.54it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 35.43it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 35.73it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 35.00it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 35.24it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 35.58it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 36.40it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 41.70it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 16.72it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.82it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.13it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.09it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 28.93it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 29.47it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 32.33it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 34.00it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 35.08it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 37.73it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 36.08it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 34.63it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 32.77it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 34.57it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 19.43it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.36it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 29.73it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.44it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.50it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 33.23it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.50it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.53it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 32.29it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 33.55it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 34.55it/s]Train:  57%|█████▋    | 34/60 [00:00<00:00, 38.25it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 35.79it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 34.16it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 32.63it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 33.91it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 34.18it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 28.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.22it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.86it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 34.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.41it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 32.48it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 31.60it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 32.26it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 31.21it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.72it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.47it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 35.34it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 35.30it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 34.99it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 37.84it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 36.06it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.06it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 33.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 23.68it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.20it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 37.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.27it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.22it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.85it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 32.09it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 29.14it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.00it/s]Train:  45%|████▌     | 27/60 [00:00<00:01, 27.48it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 29.53it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 30.21it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.27it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.48it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.20it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 30.68it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 30.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.66it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 28.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.01it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 32.33it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.01it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.75it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 36.52it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.75it/s]Train:  20%|██        | 12/60 [00:00<00:01, 30.58it/s]Train:  30%|███       | 18/60 [00:00<00:01, 33.17it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 32.75it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 34.08it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 34.75it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 35.33it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 35.20it/s]Train:  87%|████████▋ | 52/60 [00:01<00:00, 34.84it/s]Train:  95%|█████████▌| 57/60 [00:01<00:00, 37.58it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 27.75it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 17.71it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.68it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 34.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.49it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.81it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 32.14it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 31.89it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 30.46it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 32.10it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 33.06it/s]Train:  52%|█████▏    | 31/60 [00:00<00:00, 34.51it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 37.52it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 35.39it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.23it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 34.33it/s]Train:  90%|█████████ | 54/60 [00:01<00:00, 34.32it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 34.51it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 31.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.28it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 31.22it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.43it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 21.31it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 29.51it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 32.72it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 33.99it/s]Train:  45%|████▌     | 27/60 [00:00<00:00, 33.92it/s]Train:  55%|█████▌    | 33/60 [00:00<00:00, 34.73it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 35.44it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 35.70it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 35.59it/s]Train:  93%|█████████▎| 56/60 [00:01<00:00, 35.39it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 35.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.67it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 30.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 29.65it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.41it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.09it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.50it/s]
          MAE              : Train 7.0537, Val 7.6686, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 183: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 184: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 185: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0635
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6686, Test 7.6031
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 186: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0537, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 187: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 188: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 189: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 190: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 191: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 192: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 193: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 194: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 195: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 196: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 197: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 198: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 199: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:01, 37.69it/s]Train:  13%|█▎        | 8/60 [00:00<00:01, 29.58it/s]Train:  20%|██        | 12/60 [00:00<00:01, 29.96it/s]Train:  30%|███       | 18/60 [00:00<00:01, 32.01it/s]Train:  40%|████      | 24/60 [00:00<00:01, 32.67it/s]Train:  48%|████▊     | 29/60 [00:00<00:00, 32.19it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 33.39it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 36.72it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 34.95it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 33.69it/s]Train:  88%|████████▊ | 53/60 [00:01<00:00, 33.51it/s]Train:  97%|█████████▋| 58/60 [00:01<00:00, 33.89it/s]Train: 100%|██████████| 60/60 [00:01<00:00, 33.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.32it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  11%|█         | 2/18 [00:00<00:00, 18.82it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 27.76it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 34.81it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.21it/s]

          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
Epoch 200: Loss:            : Train 0.0116, Val 0.0137, Test 0.0132
          R2_Score         : Train 0.1020, Val -0.0613, Test -0.0634
          RMSE             : Train 9.5684, Val 10.4188, Test 10.2420
          MAE              : Train 7.0536, Val 7.6684, Test 7.6030
Best:
          R2_Score         : Train 0.0317, Val -0.0218, Test -0.0257
          RMSE             : Train 9.9358, Val 10.2229, Test 10.0584
          MAE              : Train 7.3670, Val 7.5058, Test 7.4590
