  0%|          | 0/244489 [00:00<?, ?it/s]  0%|          | 367/244489 [00:00<01:06, 3665.35it/s]  0%|          | 734/244489 [00:00<01:55, 2113.01it/s]  0%|          | 1132/244489 [00:00<01:29, 2709.25it/s]  1%|          | 1586/244489 [00:00<01:13, 3288.69it/s]  1%|          | 2033/244489 [00:00<01:06, 3655.11it/s]  1%|          | 2430/244489 [00:00<01:12, 3337.75it/s]  1%|          | 2802/244489 [00:00<01:10, 3444.09it/s]  1%|▏         | 3274/244489 [00:00<01:04, 3765.70it/s]  1%|▏         | 3666/244489 [00:01<01:26, 2792.79it/s]  2%|▏         | 4108/244489 [00:01<01:15, 3168.61it/s]  2%|▏         | 4581/244489 [00:01<01:07, 3555.29it/s]  2%|▏         | 5044/244489 [00:01<01:02, 3834.99it/s]  2%|▏         | 5512/244489 [00:01<00:58, 4064.88it/s]  2%|▏         | 5943/244489 [00:01<00:58, 4047.09it/s]  3%|▎         | 6365/244489 [00:01<01:15, 3151.54it/s]  3%|▎         | 6722/244489 [00:02<01:17, 3074.46it/s]  3%|▎         | 7191/244489 [00:02<01:08, 3464.72it/s]  3%|▎         | 7665/244489 [00:02<01:02, 3791.83it/s]  3%|▎         | 8115/244489 [00:02<00:59, 3981.15it/s]  4%|▎         | 8577/244489 [00:02<00:56, 4157.19it/s]  4%|▎         | 9016/244489 [00:02<00:55, 4221.66it/s]  4%|▍         | 9450/244489 [00:02<00:55, 4254.88it/s]  4%|▍         | 9898/244489 [00:02<00:54, 4318.45it/s]  4%|▍         | 10336/244489 [00:02<01:14, 3130.76it/s]  4%|▍         | 10768/244489 [00:03<01:08, 3396.67it/s]  5%|▍         | 11151/244489 [00:03<01:10, 3305.39it/s]  5%|▍         | 11511/244489 [00:03<01:12, 3218.84it/s]  5%|▍         | 11854/244489 [00:03<01:17, 3010.52it/s]  5%|▍         | 12203/244489 [00:03<01:14, 3129.77it/s]  5%|▌         | 12554/244489 [00:03<01:11, 3227.64it/s]  5%|▌         | 12888/244489 [00:03<01:12, 3177.20it/s]  5%|▌         | 13313/244489 [00:03<01:06, 3471.77it/s]  6%|▌         | 13804/244489 [00:03<00:59, 3877.52it/s]  6%|▌         | 14309/244489 [00:04<00:54, 4213.05it/s]  6%|▌         | 14738/244489 [00:04<01:21, 2817.38it/s]  6%|▌         | 15085/244489 [00:04<01:31, 2506.53it/s]  6%|▋         | 15385/244489 [00:04<02:04, 1846.43it/s]  6%|▋         | 15684/244489 [00:04<01:52, 2036.74it/s]  7%|▋         | 15940/244489 [00:05<02:02, 1871.91it/s]  7%|▋         | 16214/244489 [00:05<01:51, 2043.93it/s]  7%|▋         | 16453/244489 [00:05<01:47, 2112.35it/s]  7%|▋         | 16709/244489 [00:05<01:42, 2219.15it/s]  7%|▋         | 16953/244489 [00:05<01:41, 2249.33it/s]  7%|▋         | 17194/244489 [00:05<01:41, 2248.31it/s]  7%|▋         | 17430/244489 [00:05<01:54, 1983.41it/s]  7%|▋         | 17773/244489 [00:05<01:36, 2347.10it/s]  7%|▋         | 18071/244489 [00:05<01:30, 2512.72it/s]  7%|▋         | 18336/244489 [00:06<01:31, 2471.90it/s]  8%|▊         | 18593/244489 [00:06<01:36, 2332.49it/s]  8%|▊         | 18878/244489 [00:06<01:31, 2470.60it/s]  8%|▊         | 19146/244489 [00:06<01:29, 2525.92it/s]  8%|▊         | 19407/244489 [00:06<01:28, 2548.28it/s]  8%|▊         | 19666/244489 [00:06<01:35, 2355.03it/s]  8%|▊         | 20024/244489 [00:06<01:23, 2690.93it/s]  8%|▊         | 20361/244489 [00:06<01:17, 2879.94it/s]  8%|▊         | 20712/244489 [00:06<01:13, 3059.05it/s]  9%|▊         | 21070/244489 [00:07<01:09, 3208.89it/s]  9%|▉         | 21471/244489 [00:07<01:04, 3443.42it/s]  9%|▉         | 21819/244489 [00:07<01:08, 3247.16it/s]  9%|▉         | 22149/244489 [00:07<01:08, 3235.29it/s]  9%|▉         | 22537/244489 [00:07<01:04, 3418.84it/s]  9%|▉         | 22923/244489 [00:07<01:02, 3544.23it/s] 10%|▉         | 23280/244489 [00:07<01:02, 3543.89it/s] 10%|▉         | 23637/244489 [00:07<01:02, 3549.66it/s] 10%|▉         | 23999/244489 [00:07<01:01, 3568.31it/s] 10%|▉         | 24357/244489 [00:07<01:04, 3433.40it/s] 10%|█         | 24702/244489 [00:08<01:12, 3037.11it/s] 10%|█         | 25080/244489 [00:08<01:07, 3235.36it/s] 10%|█         | 25413/244489 [00:08<01:08, 3188.51it/s] 11%|█         | 25738/244489 [00:08<01:08, 3183.84it/s] 11%|█         | 26080/244489 [00:08<01:07, 3250.30it/s] 11%|█         | 26435/244489 [00:08<01:06, 3283.40it/s] 11%|█         | 26776/244489 [00:08<01:05, 3319.16it/s] 11%|█         | 27116/244489 [00:08<01:05, 3340.45it/s] 11%|█         | 27465/244489 [00:08<01:04, 3382.90it/s] 11%|█▏        | 27806/244489 [00:09<01:03, 3389.03it/s] 12%|█▏        | 28146/244489 [00:09<01:06, 3267.34it/s] 12%|█▏        | 28475/244489 [00:09<01:06, 3237.50it/s] 12%|█▏        | 28817/244489 [00:09<01:05, 3289.16it/s] 12%|█▏        | 29158/244489 [00:09<01:04, 3322.59it/s] 12%|█▏        | 29507/244489 [00:09<01:03, 3369.59it/s] 12%|█▏        | 29845/244489 [00:09<01:18, 2721.77it/s] 12%|█▏        | 30207/244489 [00:09<01:12, 2950.41it/s] 13%|█▎        | 30594/244489 [00:09<01:06, 3194.62it/s] 13%|█▎        | 30953/244489 [00:10<01:04, 3302.65it/s] 13%|█▎        | 31317/244489 [00:10<01:02, 3397.60it/s] 13%|█▎        | 31701/244489 [00:10<01:00, 3523.97it/s] 13%|█▎        | 32061/244489 [00:10<01:12, 2937.57it/s] 13%|█▎        | 32376/244489 [00:10<01:15, 2799.03it/s] 13%|█▎        | 32730/244489 [00:10<01:10, 2986.78it/s] 14%|█▎        | 33070/244489 [00:10<01:08, 3094.75it/s] 14%|█▎        | 33434/244489 [00:10<01:05, 3243.46it/s] 14%|█▍        | 33781/244489 [00:10<01:03, 3305.17it/s] 14%|█▍        | 34135/244489 [00:11<01:02, 3370.00it/s] 14%|█▍        | 34497/244489 [00:11<01:01, 3441.29it/s] 14%|█▍        | 34845/244489 [00:11<01:17, 2693.58it/s] 14%|█▍        | 35142/244489 [00:11<01:19, 2642.35it/s] 15%|█▍        | 35456/244489 [00:11<01:15, 2767.02it/s] 15%|█▍        | 35781/244489 [00:11<01:12, 2893.66it/s] 15%|█▍        | 36093/244489 [00:11<01:10, 2954.09it/s] 15%|█▍        | 36398/244489 [00:11<01:10, 2955.27it/s] 15%|█▌        | 36764/244489 [00:11<01:05, 3153.04it/s] 15%|█▌        | 37183/244489 [00:12<01:00, 3452.23it/s] 15%|█▌        | 37643/244489 [00:12<00:54, 3765.42it/s] 16%|█▌        | 38024/244489 [00:12<01:16, 2682.69it/s] 16%|█▌        | 38339/244489 [00:12<01:13, 2788.85it/s] 16%|█▌        | 38656/244489 [00:12<01:11, 2881.25it/s] 16%|█▌        | 38986/244489 [00:12<01:08, 2989.12it/s] 16%|█▌        | 39354/244489 [00:12<01:04, 3173.90it/s] 16%|█▌        | 39688/244489 [00:12<01:16, 2689.68it/s] 16%|█▋        | 40005/244489 [00:13<01:12, 2808.51it/s] 17%|█▋        | 40363/244489 [00:13<01:07, 3008.50it/s] 17%|█▋        | 40706/244489 [00:13<01:05, 3122.98it/s] 17%|█▋        | 41040/244489 [00:13<01:03, 3182.81it/s] 17%|█▋        | 41368/244489 [00:13<01:04, 3152.74it/s] 17%|█▋        | 41690/244489 [00:13<01:04, 3165.84it/s] 17%|█▋        | 42037/244489 [00:13<01:02, 3253.07it/s] 17%|█▋        | 42392/244489 [00:13<01:00, 3339.31it/s] 17%|█▋        | 42733/244489 [00:13<01:00, 3359.68it/s] 18%|█▊        | 43071/244489 [00:13<00:59, 3362.36it/s] 18%|█▊        | 43421/244489 [00:14<00:59, 3402.32it/s] 18%|█▊        | 43781/244489 [00:14<00:57, 3460.80it/s] 18%|█▊        | 44128/244489 [00:14<01:24, 2364.10it/s] 18%|█▊        | 44412/244489 [00:14<01:23, 2406.30it/s] 18%|█▊        | 44779/244489 [00:14<01:13, 2706.70it/s] 18%|█▊        | 45158/244489 [00:14<01:06, 2981.15it/s] 19%|█▊        | 45696/244489 [00:14<00:54, 3618.98it/s] 19%|█▉        | 46099/244489 [00:14<00:53, 3731.02it/s] 19%|█▉        | 46492/244489 [00:15<00:52, 3777.69it/s] 19%|█▉        | 46887/244489 [00:15<00:51, 3824.86it/s] 19%|█▉        | 47280/244489 [00:15<00:52, 3764.72it/s] 20%|█▉        | 47680/244489 [00:15<00:51, 3830.81it/s] 20%|█▉        | 48069/244489 [00:15<00:53, 3671.11it/s] 20%|█▉        | 48442/244489 [00:15<00:54, 3608.38it/s] 20%|█▉        | 48807/244489 [00:15<00:55, 3555.19it/s] 20%|██        | 49165/244489 [00:15<00:55, 3521.72it/s] 20%|██        | 49539/244489 [00:15<00:54, 3583.21it/s] 20%|██        | 49899/244489 [00:15<00:55, 3476.99it/s] 21%|██        | 50249/244489 [00:16<01:03, 3049.12it/s] 21%|██        | 50623/244489 [00:16<00:59, 3231.25it/s] 21%|██        | 50999/244489 [00:16<00:57, 3375.84it/s] 21%|██        | 51362/244489 [00:16<00:56, 3447.14it/s] 21%|██        | 51713/244489 [00:16<00:55, 3463.10it/s] 21%|██▏       | 52064/244489 [00:16<00:56, 3387.45it/s] 21%|██▏       | 52406/244489 [00:16<00:57, 3351.83it/s] 22%|██▏       | 52744/244489 [00:16<00:57, 3338.28it/s] 22%|██▏       | 53090/244489 [00:16<00:56, 3371.51it/s] 22%|██▏       | 53429/244489 [00:17<00:57, 3302.81it/s] 22%|██▏       | 53788/244489 [00:17<00:56, 3385.01it/s] 22%|██▏       | 54152/244489 [00:17<00:55, 3458.27it/s] 22%|██▏       | 54499/244489 [00:17<00:55, 3450.84it/s] 22%|██▏       | 54962/244489 [00:17<00:49, 3799.41it/s] 23%|██▎       | 55343/244489 [00:17<00:56, 3318.86it/s] 23%|██▎       | 55687/244489 [00:17<00:59, 3182.43it/s] 23%|██▎       | 56038/244489 [00:17<00:57, 3269.03it/s] 23%|██▎       | 56393/244489 [00:17<00:56, 3345.33it/s] 23%|██▎       | 56773/244489 [00:18<00:54, 3471.57it/s] 23%|██▎       | 57140/244489 [00:18<00:53, 3527.81it/s] 24%|██▎       | 57497/244489 [00:18<00:52, 3536.10it/s] 24%|██▎       | 57861/244489 [00:18<00:52, 3565.51it/s] 24%|██▍       | 58306/244489 [00:18<00:48, 3825.67it/s] 24%|██▍       | 58691/244489 [00:18<00:52, 3571.70it/s] 24%|██▍       | 59053/244489 [00:18<01:01, 3038.08it/s] 24%|██▍       | 59373/244489 [00:18<01:05, 2830.21it/s] 24%|██▍       | 59706/244489 [00:18<01:02, 2955.58it/s] 25%|██▍       | 60028/244489 [00:19<01:00, 3024.23it/s] 25%|██▍       | 60339/244489 [00:19<01:05, 2829.49it/s] 25%|██▍       | 60645/244489 [00:19<01:03, 2889.10it/s] 25%|██▍       | 61009/244489 [00:19<00:59, 3094.87it/s] 25%|██▌       | 61353/244489 [00:19<00:58, 3105.87it/s] 25%|██▌       | 61668/244489 [00:19<01:17, 2372.37it/s] 25%|██▌       | 61949/244489 [00:19<01:13, 2474.69it/s] 25%|██▌       | 62223/244489 [00:19<01:11, 2540.17it/s] 26%|██▌       | 62494/244489 [00:20<01:10, 2566.00it/s] 26%|██▌       | 62763/244489 [00:20<01:11, 2551.54it/s] 26%|██▌       | 63045/244489 [00:20<01:09, 2623.62it/s] 26%|██▌       | 63434/244489 [00:20<01:00, 2981.43it/s] 26%|██▌       | 63864/244489 [00:20<00:53, 3358.95it/s] 26%|██▋       | 64298/244489 [00:20<00:49, 3644.25it/s] 26%|██▋       | 64767/244489 [00:20<00:45, 3949.36it/s] 27%|██▋       | 65217/244489 [00:20<00:43, 4110.83it/s] 27%|██▋       | 65632/244489 [00:20<00:48, 3711.21it/s] 27%|██▋       | 66087/244489 [00:20<00:45, 3942.34it/s] 27%|██▋       | 66490/244489 [00:21<00:45, 3931.83it/s] 27%|██▋       | 66890/244489 [00:21<00:45, 3863.72it/s] 28%|██▊       | 67311/244489 [00:21<00:44, 3961.15it/s] 28%|██▊       | 67711/244489 [00:21<00:53, 3277.48it/s] 28%|██▊       | 68116/244489 [00:21<00:50, 3473.34it/s] 28%|██▊       | 68551/244489 [00:21<00:47, 3704.99it/s] 28%|██▊       | 68938/244489 [00:21<00:50, 3442.44it/s] 28%|██▊       | 69296/244489 [00:21<00:51, 3432.95it/s] 29%|██▊       | 69761/244489 [00:21<00:46, 3762.49it/s] 29%|██▊       | 70148/244489 [00:22<00:48, 3587.11it/s] 29%|██▉       | 70515/244489 [00:22<00:50, 3453.82it/s] 29%|██▉       | 70867/244489 [00:22<00:57, 3022.94it/s] 29%|██▉       | 71182/244489 [00:22<00:57, 3019.77it/s] 29%|██▉       | 71622/244489 [00:22<00:51, 3382.74it/s] 29%|██▉       | 72078/244489 [00:22<00:46, 3703.42it/s] 30%|██▉       | 72561/244489 [00:22<00:42, 4018.50it/s] 30%|██▉       | 73040/244489 [00:22<00:40, 4237.87it/s] 30%|███       | 73472/244489 [00:22<00:40, 4209.64it/s] 30%|███       | 73899/244489 [00:23<00:45, 3763.00it/s] 30%|███       | 74288/244489 [00:23<00:45, 3768.14it/s] 31%|███       | 74750/244489 [00:23<00:42, 4003.42it/s] 31%|███       | 75159/244489 [00:23<00:45, 3721.98it/s] 31%|███       | 75540/244489 [00:23<00:46, 3664.49it/s] 31%|███       | 75961/244489 [00:23<00:44, 3812.72it/s] 31%|███       | 76348/244489 [00:23<00:50, 3323.14it/s] 31%|███▏      | 76695/244489 [00:23<00:51, 3259.66it/s] 32%|███▏      | 77118/244489 [00:24<00:47, 3514.34it/s] 32%|███▏      | 77543/244489 [00:24<00:44, 3714.85it/s] 32%|███▏      | 77954/244489 [00:24<00:43, 3824.33it/s] 32%|███▏      | 78387/244489 [00:24<00:41, 3966.88it/s] 32%|███▏      | 78809/244489 [00:24<00:41, 4038.54it/s] 32%|███▏      | 79217/244489 [00:24<00:40, 4037.78it/s] 33%|███▎      | 79624/244489 [00:24<00:44, 3716.01it/s] 33%|███▎      | 80089/244489 [00:24<00:41, 3975.95it/s] 33%|███▎      | 80494/244489 [00:24<00:41, 3978.10it/s] 33%|███▎      | 80897/244489 [00:24<00:42, 3857.87it/s] 33%|███▎      | 81287/244489 [00:25<00:43, 3793.93it/s] 33%|███▎      | 81765/244489 [00:25<00:39, 4073.81it/s] 34%|███▎      | 82231/244489 [00:25<00:38, 4241.58it/s] 34%|███▍      | 82659/244489 [00:25<00:44, 3624.46it/s] 34%|███▍      | 83139/244489 [00:25<00:41, 3931.48it/s] 34%|███▍      | 83686/244489 [00:25<00:36, 4348.80it/s] 34%|███▍      | 84137/244489 [00:25<00:38, 4183.84it/s] 35%|███▍      | 84632/244489 [00:25<00:36, 4394.45it/s] 35%|███▍      | 85126/244489 [00:25<00:35, 4546.54it/s] 35%|███▌      | 85589/244489 [00:26<00:36, 4332.75it/s] 35%|███▌      | 86030/244489 [00:26<00:36, 4325.79it/s] 35%|███▌      | 86572/244489 [00:26<00:34, 4636.60it/s] 36%|███▌      | 87168/244489 [00:26<00:31, 5018.42it/s] 36%|███▌      | 87744/244489 [00:26<00:29, 5232.98it/s] 36%|███▌      | 88272/244489 [00:26<00:29, 5221.51it/s] 36%|███▋      | 88801/244489 [00:26<00:29, 5240.11it/s] 37%|███▋      | 89328/244489 [00:26<00:30, 5154.17it/s] 37%|███▋      | 89855/244489 [00:26<00:29, 5186.14it/s] 37%|███▋      | 90375/244489 [00:27<00:36, 4220.48it/s] 37%|███▋      | 90827/244489 [00:27<00:36, 4215.19it/s] 37%|███▋      | 91270/244489 [00:27<00:37, 4102.56it/s] 38%|███▊      | 91695/244489 [00:27<00:43, 3511.84it/s] 38%|███▊      | 92152/244489 [00:27<00:40, 3728.99it/s] 38%|███▊      | 92545/244489 [00:27<00:43, 3504.36it/s] 38%|███▊      | 93000/244489 [00:27<00:40, 3767.58it/s] 38%|███▊      | 93474/244489 [00:27<00:37, 4024.27it/s] 38%|███▊      | 94038/244489 [00:27<00:33, 4467.23it/s] 39%|███▊      | 94533/244489 [00:28<00:32, 4602.62it/s] 39%|███▉      | 95011/244489 [00:28<00:32, 4651.52it/s] 39%|███▉      | 95484/244489 [00:28<00:35, 4234.89it/s] 39%|███▉      | 95923/244489 [00:28<00:34, 4276.40it/s] 39%|███▉      | 96360/244489 [00:28<00:39, 3756.85it/s] 40%|███▉      | 96849/244489 [00:28<00:36, 4050.62it/s] 40%|███▉      | 97315/244489 [00:28<00:34, 4214.67it/s] 40%|███▉      | 97750/244489 [00:28<00:34, 4235.19it/s] 40%|████      | 98190/244489 [00:28<00:34, 4281.46it/s] 40%|████      | 98625/244489 [00:29<00:34, 4230.19it/s] 41%|████      | 99130/244489 [00:29<00:32, 4464.53it/s] 41%|████      | 99581/244489 [00:29<00:32, 4397.46it/s] 41%|████      | 100024/244489 [00:29<00:34, 4220.31it/s] 41%|████      | 100488/244489 [00:29<00:33, 4339.32it/s] 41%|████▏     | 100925/244489 [00:29<00:35, 4058.54it/s] 41%|████▏     | 101406/244489 [00:29<00:33, 4263.63it/s] 42%|████▏     | 101905/244489 [00:29<00:31, 4469.71it/s] 42%|████▏     | 102381/244489 [00:29<00:31, 4553.35it/s] 42%|████▏     | 102840/244489 [00:30<00:31, 4518.66it/s] 42%|████▏     | 103295/244489 [00:30<00:42, 3347.51it/s] 42%|████▏     | 103748/244489 [00:30<00:38, 3624.38it/s] 43%|████▎     | 104173/244489 [00:30<00:37, 3780.70it/s] 43%|████▎     | 104601/244489 [00:30<00:35, 3912.03it/s] 43%|████▎     | 105016/244489 [00:30<00:35, 3937.91it/s] 43%|████▎     | 105427/244489 [00:30<00:34, 3985.87it/s] 43%|████▎     | 105849/244489 [00:30<00:34, 4052.45it/s] 43%|████▎     | 106283/244489 [00:30<00:35, 3922.98it/s] 44%|████▎     | 106732/244489 [00:31<00:33, 4080.18it/s] 44%|████▍     | 107173/244489 [00:31<00:32, 4172.25it/s] 44%|████▍     | 107609/244489 [00:31<00:32, 4223.95it/s] 44%|████▍     | 108075/244489 [00:31<00:31, 4349.09it/s] 44%|████▍     | 108513/244489 [00:31<00:32, 4144.56it/s] 45%|████▍     | 108932/244489 [00:31<00:32, 4111.94it/s] 45%|████▍     | 109346/244489 [00:31<00:37, 3585.57it/s] 45%|████▍     | 109781/244489 [00:31<00:35, 3785.60it/s] 45%|████▌     | 110172/244489 [00:31<00:35, 3740.32it/s] 45%|████▌     | 110555/244489 [00:32<00:35, 3757.77it/s] 45%|████▌     | 110937/244489 [00:32<00:35, 3748.14it/s] 46%|████▌     | 111393/244489 [00:32<00:33, 3977.49it/s] 46%|████▌     | 111795/244489 [00:32<00:33, 3984.82it/s] 46%|████▌     | 112197/244489 [00:32<00:33, 3922.65it/s] 46%|████▌     | 112639/244489 [00:32<00:32, 4065.18it/s] 46%|████▋     | 113078/244489 [00:32<00:31, 4160.16it/s] 46%|████▋     | 113535/244489 [00:32<00:30, 4279.79it/s] 47%|████▋     | 113965/244489 [00:32<00:34, 3801.93it/s] 47%|████▋     | 114410/244489 [00:33<00:32, 3976.88it/s] 47%|████▋     | 114817/244489 [00:33<00:36, 3594.08it/s] 47%|████▋     | 115288/244489 [00:33<00:33, 3888.30it/s] 47%|████▋     | 115690/244489 [00:33<00:33, 3900.69it/s] 47%|████▋     | 116089/244489 [00:33<00:33, 3856.80it/s] 48%|████▊     | 116483/244489 [00:33<00:32, 3879.98it/s] 48%|████▊     | 116877/244489 [00:33<00:32, 3894.78it/s] 48%|████▊     | 117270/244489 [00:33<00:33, 3819.76it/s] 48%|████▊     | 117655/244489 [00:33<00:33, 3761.94it/s] 48%|████▊     | 118033/244489 [00:33<00:33, 3725.09it/s] 48%|████▊     | 118407/244489 [00:34<00:34, 3674.25it/s] 49%|████▊     | 118776/244489 [00:34<00:34, 3629.44it/s] 49%|████▊     | 119140/244489 [00:34<00:36, 3465.34it/s] 49%|████▉     | 119513/244489 [00:34<00:35, 3539.87it/s] 49%|████▉     | 119899/244489 [00:34<00:34, 3631.11it/s] 49%|████▉     | 120279/244489 [00:34<00:33, 3677.89it/s] 49%|████▉     | 120674/244489 [00:34<00:32, 3756.79it/s] 50%|████▉     | 121051/244489 [00:34<00:38, 3190.09it/s] 50%|████▉     | 121386/244489 [00:34<00:40, 3030.60it/s] 50%|████▉     | 121757/244489 [00:35<00:38, 3206.88it/s] 50%|████▉     | 122089/244489 [00:35<00:42, 2877.95it/s] 50%|█████     | 122389/244489 [00:35<00:48, 2539.49it/s] 50%|█████     | 122748/244489 [00:35<00:43, 2792.11it/s] 50%|█████     | 123096/244489 [00:35<00:40, 2967.71it/s] 50%|█████     | 123445/244489 [00:35<00:38, 3107.18it/s] 51%|█████     | 123775/244489 [00:35<00:38, 3157.13it/s] 51%|█████     | 124099/244489 [00:35<00:38, 3102.25it/s] 51%|█████     | 124444/244489 [00:36<00:37, 3198.78it/s] 51%|█████     | 124769/244489 [00:36<00:41, 2878.62it/s] 51%|█████     | 125066/244489 [00:36<00:48, 2448.74it/s] 51%|█████▏    | 125327/244489 [00:36<00:59, 2003.76it/s] 51%|█████▏    | 125664/244489 [00:36<00:51, 2303.12it/s] 52%|█████▏    | 126006/244489 [00:36<00:46, 2568.95it/s] 52%|█████▏    | 126335/244489 [00:36<00:42, 2750.13it/s] 52%|█████▏    | 126662/244489 [00:36<00:40, 2887.69it/s] 52%|█████▏    | 127003/244489 [00:37<00:38, 3031.01it/s] 52%|█████▏    | 127347/244489 [00:37<00:37, 3142.83it/s] 52%|█████▏    | 127671/244489 [00:37<00:37, 3093.28it/s] 52%|█████▏    | 128044/244489 [00:37<00:35, 3275.03it/s] 53%|█████▎    | 128378/244489 [00:37<00:37, 3069.48it/s] 53%|█████▎    | 128692/244489 [00:37<00:46, 2470.27it/s] 53%|█████▎    | 128961/244489 [00:37<00:48, 2400.27it/s] 53%|█████▎    | 129216/244489 [00:37<00:52, 2216.40it/s] 53%|█████▎    | 129449/244489 [00:38<01:03, 1824.15it/s] 53%|█████▎    | 129648/244489 [00:38<01:03, 1811.63it/s] 53%|█████▎    | 129841/244489 [00:38<01:02, 1836.22it/s] 53%|█████▎    | 130034/244489 [00:38<01:02, 1840.71it/s] 53%|█████▎    | 130239/244489 [00:38<01:00, 1895.04it/s] 53%|█████▎    | 130508/244489 [00:38<00:54, 2110.74it/s] 53%|█████▎    | 130794/244489 [00:38<00:51, 2226.78it/s] 54%|█████▎    | 131021/244489 [00:38<00:52, 2178.74it/s] 54%|█████▎    | 131370/244489 [00:38<00:44, 2542.64it/s] 54%|█████▍    | 131771/244489 [00:39<00:38, 2958.41it/s] 54%|█████▍    | 132073/244489 [00:39<00:42, 2657.46it/s] 54%|█████▍    | 132378/244489 [00:39<00:40, 2763.02it/s] 54%|█████▍    | 132673/244489 [00:39<00:39, 2813.49it/s] 54%|█████▍    | 133009/244489 [00:39<00:37, 2967.70it/s] 55%|█████▍    | 133311/244489 [00:39<00:47, 2355.28it/s] 55%|█████▍    | 133633/244489 [00:39<00:43, 2566.79it/s] 55%|█████▍    | 133911/244489 [00:39<00:42, 2598.08it/s] 55%|█████▍    | 134223/244489 [00:39<00:40, 2737.83it/s] 55%|█████▌    | 134544/244489 [00:40<00:38, 2867.67it/s] 55%|█████▌    | 134841/244489 [00:40<00:41, 2656.63it/s] 55%|█████▌    | 135116/244489 [00:40<00:46, 2370.29it/s] 55%|█████▌    | 135436/244489 [00:40<00:42, 2580.20it/s] 56%|█████▌    | 135761/244489 [00:40<00:39, 2758.04it/s] 56%|█████▌    | 136090/244489 [00:40<00:37, 2902.33it/s] 56%|█████▌    | 136423/244489 [00:40<00:35, 3021.99it/s] 56%|█████▌    | 136732/244489 [00:40<00:36, 2962.05it/s] 56%|█████▌    | 137033/244489 [00:40<00:36, 2949.16it/s] 56%|█████▌    | 137335/244489 [00:41<00:36, 2968.39it/s] 56%|█████▋    | 137635/244489 [00:41<00:42, 2488.39it/s] 56%|█████▋    | 137899/244489 [00:41<00:43, 2448.51it/s] 57%|█████▋    | 138202/244489 [00:41<00:40, 2600.67it/s] 57%|█████▋    | 138532/244489 [00:41<00:37, 2789.76it/s] 57%|█████▋    | 138855/244489 [00:41<00:36, 2912.13it/s] 57%|█████▋    | 139187/244489 [00:41<00:34, 3026.01it/s] 57%|█████▋    | 139520/244489 [00:41<00:33, 3112.33it/s] 57%|█████▋    | 139852/244489 [00:41<00:32, 3172.65it/s] 57%|█████▋    | 140184/244489 [00:42<00:32, 3215.28it/s] 57%|█████▋    | 140508/244489 [00:42<00:33, 3135.23it/s] 58%|█████▊    | 140824/244489 [00:42<00:34, 2983.69it/s] 58%|█████▊    | 141125/244489 [00:42<00:34, 2973.25it/s] 58%|█████▊    | 141425/244489 [00:42<00:35, 2881.38it/s] 58%|█████▊    | 141740/244489 [00:42<00:34, 2955.78it/s] 58%|█████▊    | 142062/244489 [00:42<00:33, 3030.42it/s] 58%|█████▊    | 142367/244489 [00:42<00:38, 2632.82it/s] 58%|█████▊    | 142805/244489 [00:42<00:32, 3095.50it/s] 59%|█████▊    | 143278/244489 [00:43<00:28, 3544.55it/s] 59%|█████▉    | 143780/244489 [00:43<00:25, 3960.10it/s] 59%|█████▉    | 144188/244489 [00:43<00:29, 3422.55it/s] 59%|█████▉    | 144551/244489 [00:43<00:34, 2871.30it/s] 59%|█████▉    | 144866/244489 [00:43<00:35, 2836.79it/s] 59%|█████▉    | 145355/244489 [00:43<00:29, 3338.77it/s] 60%|█████▉    | 145854/244489 [00:43<00:26, 3766.26it/s] 60%|█████▉    | 146255/244489 [00:43<00:27, 3579.68it/s] 60%|█████▉    | 146631/244489 [00:44<00:27, 3529.41it/s] 60%|██████    | 146997/244489 [00:44<00:30, 3244.01it/s] 60%|██████    | 147336/244489 [00:44<00:29, 3280.28it/s] 60%|██████    | 147673/244489 [00:44<00:40, 2411.19it/s] 61%|██████    | 147952/244489 [00:44<00:39, 2451.15it/s] 61%|██████    | 148304/244489 [00:44<00:35, 2702.56it/s] 61%|██████    | 148627/244489 [00:44<00:33, 2834.04it/s] 61%|██████    | 148981/244489 [00:44<00:31, 3018.49it/s] 61%|██████    | 149355/244489 [00:45<00:29, 3215.72it/s] 61%|██████    | 149710/244489 [00:45<00:28, 3308.83it/s] 61%|██████▏   | 150052/244489 [00:45<00:28, 3285.82it/s] 62%|██████▏   | 150391/244489 [00:45<00:28, 3315.25it/s] 62%|██████▏   | 150728/244489 [00:45<00:30, 3086.49it/s] 62%|██████▏   | 151093/244489 [00:45<00:28, 3242.41it/s] 62%|██████▏   | 151443/244489 [00:45<00:28, 3313.13it/s] 62%|██████▏   | 151820/244489 [00:45<00:26, 3444.74it/s] 62%|██████▏   | 152196/244489 [00:45<00:26, 3536.54it/s] 62%|██████▏   | 152553/244489 [00:46<00:30, 2991.43it/s] 63%|██████▎   | 152904/244489 [00:46<00:29, 3125.39it/s] 63%|██████▎   | 153303/244489 [00:46<00:27, 3359.28it/s] 63%|██████▎   | 153713/244489 [00:46<00:25, 3565.73it/s] 63%|██████▎   | 154080/244489 [00:46<00:27, 3298.07it/s] 63%|██████▎   | 154420/244489 [00:46<00:28, 3174.18it/s] 63%|██████▎   | 154745/244489 [00:46<00:28, 3160.30it/s] 63%|██████▎   | 155081/244489 [00:46<00:27, 3213.12it/s] 64%|██████▎   | 155419/244489 [00:46<00:27, 3260.31it/s] 64%|██████▎   | 155783/244489 [00:46<00:26, 3368.58it/s] 64%|██████▍   | 156145/244489 [00:47<00:25, 3439.44it/s] 64%|██████▍   | 156500/244489 [00:47<00:25, 3469.18it/s] 64%|██████▍   | 156857/244489 [00:47<00:25, 3496.85it/s] 64%|██████▍   | 157229/244489 [00:47<00:24, 3560.92it/s] 64%|██████▍   | 157586/244489 [00:47<00:26, 3298.62it/s] 65%|██████▍   | 157921/244489 [00:47<00:27, 3122.95it/s] 65%|██████▍   | 158277/244489 [00:47<00:26, 3240.52it/s] 65%|██████▍   | 158606/244489 [00:47<00:28, 3019.14it/s] 65%|██████▍   | 158913/244489 [00:47<00:29, 2937.57it/s] 65%|██████▌   | 159224/244489 [00:48<00:28, 2984.20it/s] 65%|██████▌   | 159578/244489 [00:48<00:27, 3138.97it/s] 65%|██████▌   | 159942/244489 [00:48<00:25, 3282.37it/s] 66%|██████▌   | 160307/244489 [00:48<00:24, 3388.94it/s] 66%|██████▌   | 160649/244489 [00:48<00:24, 3357.01it/s] 66%|██████▌   | 161024/244489 [00:48<00:24, 3469.34it/s] 66%|██████▌   | 161408/244489 [00:48<00:23, 3576.45it/s] 66%|██████▌   | 161786/244489 [00:48<00:22, 3635.72it/s] 66%|██████▋   | 162154/244489 [00:48<00:22, 3644.33it/s] 66%|██████▋   | 162535/244489 [00:48<00:22, 3691.73it/s] 67%|██████▋   | 162905/244489 [00:49<00:25, 3231.00it/s] 67%|██████▋   | 163239/244489 [00:49<00:26, 3053.27it/s] 67%|██████▋   | 163616/244489 [00:49<00:24, 3242.52it/s] 67%|██████▋   | 163992/244489 [00:49<00:23, 3382.64it/s] 67%|██████▋   | 164376/244489 [00:49<00:22, 3510.84it/s] 67%|██████▋   | 164745/244489 [00:49<00:22, 3558.89it/s] 68%|██████▊   | 165106/244489 [00:49<00:22, 3570.85it/s] 68%|██████▊   | 165467/244489 [00:49<00:22, 3569.25it/s] 68%|██████▊   | 165847/244489 [00:49<00:21, 3636.22it/s] 68%|██████▊   | 166213/244489 [00:50<00:22, 3481.87it/s] 68%|██████▊   | 166564/244489 [00:50<00:22, 3466.15it/s] 68%|██████▊   | 166949/244489 [00:50<00:21, 3576.70it/s] 68%|██████▊   | 167386/244489 [00:50<00:20, 3806.31it/s] 69%|██████▊   | 167769/244489 [00:50<00:21, 3637.30it/s] 69%|██████▉   | 168194/244489 [00:50<00:20, 3811.28it/s] 69%|██████▉   | 168578/244489 [00:50<00:24, 3132.53it/s] 69%|██████▉   | 168957/244489 [00:50<00:22, 3298.68it/s] 69%|██████▉   | 169483/244489 [00:50<00:19, 3819.88it/s] 70%|██████▉   | 170066/244489 [00:51<00:17, 4372.49it/s] 70%|██████▉   | 170718/244489 [00:51<00:14, 4978.48it/s] 70%|███████   | 171285/244489 [00:51<00:14, 5175.32it/s] 70%|███████   | 171861/244489 [00:51<00:13, 5343.80it/s] 71%|███████   | 172405/244489 [00:51<00:13, 5221.25it/s] 71%|███████   | 172935/244489 [00:51<00:19, 3747.55it/s] 71%|███████   | 173542/244489 [00:51<00:16, 4276.82it/s] 71%|███████   | 174114/244489 [00:51<00:15, 4629.79it/s] 71%|███████▏  | 174664/244489 [00:52<00:14, 4712.06it/s] 72%|███████▏  | 175204/244489 [00:52<00:14, 4892.62it/s] 72%|███████▏  | 175732/244489 [00:52<00:13, 4996.90it/s] 72%|███████▏  | 176252/244489 [00:52<00:18, 3724.08it/s] 72%|███████▏  | 176685/244489 [00:52<00:20, 3331.29it/s] 72%|███████▏  | 177214/244489 [00:52<00:17, 3760.88it/s] 73%|███████▎  | 177764/244489 [00:52<00:15, 4175.14it/s] 73%|███████▎  | 178260/244489 [00:52<00:15, 4373.64it/s] 73%|███████▎  | 178792/244489 [00:53<00:14, 4624.72it/s] 73%|███████▎  | 179326/244489 [00:53<00:13, 4820.74it/s] 74%|███████▎  | 179842/244489 [00:53<00:13, 4916.41it/s] 74%|███████▍  | 180349/244489 [00:53<00:12, 4952.42it/s] 74%|███████▍  | 180855/244489 [00:53<00:12, 4911.75it/s] 74%|███████▍  | 181357/244489 [00:53<00:13, 4750.32it/s] 74%|███████▍  | 181871/244489 [00:53<00:12, 4859.85it/s] 75%|███████▍  | 182380/244489 [00:53<00:12, 4926.20it/s] 75%|███████▍  | 182877/244489 [00:53<00:14, 4177.82it/s] 75%|███████▌  | 183409/244489 [00:53<00:13, 4474.97it/s] 75%|███████▌  | 183925/244489 [00:54<00:12, 4660.31it/s] 75%|███████▌  | 184458/244489 [00:54<00:12, 4847.40it/s] 76%|███████▌  | 184955/244489 [00:54<00:16, 3584.56it/s] 76%|███████▌  | 185406/244489 [00:54<00:15, 3796.68it/s] 76%|███████▌  | 185977/244489 [00:54<00:13, 4268.46it/s] 76%|███████▋  | 186446/244489 [00:54<00:13, 4331.08it/s] 76%|███████▋  | 186917/244489 [00:54<00:13, 4264.22it/s] 77%|███████▋  | 187464/244489 [00:54<00:12, 4588.86it/s] 77%|███████▋  | 188082/244489 [00:55<00:11, 5031.11it/s] 77%|███████▋  | 188602/244489 [00:55<00:11, 5065.46it/s] 77%|███████▋  | 189223/244489 [00:55<00:10, 5394.41it/s] 78%|███████▊  | 189780/244489 [00:55<00:10, 5444.25it/s] 78%|███████▊  | 190332/244489 [00:55<00:10, 5035.86it/s] 78%|███████▊  | 190895/244489 [00:55<00:10, 5200.16it/s] 78%|███████▊  | 191485/244489 [00:55<00:09, 5398.88it/s] 79%|███████▊  | 192084/244489 [00:55<00:09, 5569.02it/s] 79%|███████▉  | 192713/244489 [00:55<00:08, 5778.84it/s] 79%|███████▉  | 193346/244489 [00:55<00:08, 5939.41it/s] 79%|███████▉  | 193973/244489 [00:56<00:08, 6036.59it/s] 80%|███████▉  | 194580/244489 [00:56<00:08, 5951.87it/s] 80%|███████▉  | 195202/244489 [00:56<00:08, 6029.19it/s] 80%|████████  | 195825/244489 [00:56<00:07, 6087.45it/s] 80%|████████  | 196458/244489 [00:56<00:07, 6158.44it/s] 81%|████████  | 197084/244489 [00:56<00:07, 6188.39it/s] 81%|████████  | 197704/244489 [00:56<00:07, 6184.80it/s] 81%|████████  | 198323/244489 [00:56<00:07, 6148.05it/s] 81%|████████▏ | 198939/244489 [00:56<00:08, 5691.85it/s] 82%|████████▏ | 199515/244489 [00:57<00:09, 4789.73it/s] 82%|████████▏ | 200109/244489 [00:57<00:08, 5079.78it/s] 82%|████████▏ | 200716/244489 [00:57<00:08, 5339.94it/s] 82%|████████▏ | 201271/244489 [00:57<00:09, 4729.36it/s] 83%|████████▎ | 201867/244489 [00:57<00:08, 5043.99it/s] 83%|████████▎ | 202418/244489 [00:57<00:08, 5167.82it/s] 83%|████████▎ | 203012/244489 [00:57<00:07, 5379.57it/s] 83%|████████▎ | 203600/244489 [00:57<00:07, 5520.92it/s] 84%|████████▎ | 204163/244489 [00:57<00:07, 5076.50it/s] 84%|████████▎ | 204685/244489 [00:58<00:07, 5078.72it/s] 84%|████████▍ | 205302/244489 [00:58<00:07, 5382.86it/s] 84%|████████▍ | 205912/244489 [00:58<00:06, 5512.64it/s] 85%|████████▍ | 206620/244489 [00:58<00:06, 5959.91it/s] 85%|████████▍ | 207269/244489 [00:58<00:06, 6111.38it/s] 85%|████████▌ | 207886/244489 [00:58<00:06, 5277.26it/s] 85%|████████▌ | 208531/244489 [00:58<00:06, 5588.00it/s] 86%|████████▌ | 209219/244489 [00:58<00:05, 5940.64it/s] 86%|████████▌ | 209831/244489 [00:58<00:05, 5982.69it/s] 86%|████████▌ | 210474/244489 [00:59<00:05, 6109.42it/s] 86%|████████▋ | 211095/244489 [00:59<00:05, 6113.64it/s] 87%|████████▋ | 211743/244489 [00:59<00:05, 6219.18it/s] 87%|████████▋ | 212400/244489 [00:59<00:05, 6320.73it/s] 87%|████████▋ | 213099/244489 [00:59<00:04, 6517.36it/s] 87%|████████▋ | 213766/244489 [00:59<00:04, 6558.30it/s] 88%|████████▊ | 214441/244489 [00:59<00:04, 6614.41it/s] 88%|████████▊ | 215105/244489 [00:59<00:04, 6620.22it/s] 88%|████████▊ | 215769/244489 [00:59<00:04, 6601.83it/s] 89%|████████▊ | 216430/244489 [00:59<00:04, 6554.10it/s] 89%|████████▉ | 217088/244489 [01:00<00:04, 6560.94it/s] 89%|████████▉ | 217745/244489 [01:00<00:04, 5479.83it/s] 89%|████████▉ | 218394/244489 [01:00<00:04, 5743.44it/s] 90%|████████▉ | 219021/244489 [01:00<00:04, 5886.51it/s] 90%|████████▉ | 219666/244489 [01:00<00:04, 6043.86it/s] 90%|█████████ | 220309/244489 [01:00<00:03, 6149.99it/s] 90%|█████████ | 220935/244489 [01:00<00:04, 5675.67it/s] 91%|█████████ | 221517/244489 [01:00<00:04, 5430.93it/s] 91%|█████████ | 222071/244489 [01:00<00:04, 4859.33it/s] 91%|█████████ | 222573/244489 [01:01<00:05, 4281.11it/s] 91%|█████████ | 223021/244489 [01:01<00:05, 3941.38it/s] 91%|█████████▏| 223660/244489 [01:01<00:04, 4527.47it/s] 92%|█████████▏| 224138/244489 [01:01<00:04, 4132.53it/s] 92%|█████████▏| 224573/244489 [01:01<00:05, 3962.69it/s] 92%|█████████▏| 224984/244489 [01:01<00:04, 3939.42it/s] 92%|█████████▏| 225440/244489 [01:01<00:04, 4101.01it/s] 92%|█████████▏| 225937/244489 [01:01<00:04, 4335.34it/s] 93%|█████████▎| 226527/244489 [01:02<00:03, 4771.42it/s] 93%|█████████▎| 227014/244489 [01:02<00:04, 4004.47it/s] 93%|█████████▎| 227441/244489 [01:02<00:04, 3920.23it/s] 93%|█████████▎| 227973/244489 [01:02<00:03, 4279.25it/s] 93%|█████████▎| 228420/244489 [01:02<00:04, 3870.29it/s] 94%|█████████▎| 228826/244489 [01:02<00:04, 3554.35it/s] 94%|█████████▎| 229197/244489 [01:02<00:04, 3457.80it/s] 94%|█████████▍| 229553/244489 [01:02<00:04, 3368.38it/s] 94%|█████████▍| 230013/244489 [01:03<00:03, 3688.12it/s] 94%|█████████▍| 230669/244489 [01:03<00:03, 4465.64it/s] 95%|█████████▍| 231255/244489 [01:03<00:02, 4728.68it/s] 95%|█████████▍| 231739/244489 [01:03<00:02, 4417.51it/s] 95%|█████████▌| 232399/244489 [01:03<00:02, 5007.59it/s] 95%|█████████▌| 233087/244489 [01:03<00:02, 5528.19it/s] 96%|█████████▌| 233749/244489 [01:03<00:01, 5838.74it/s] 96%|█████████▌| 234413/244489 [01:03<00:01, 6068.82it/s] 96%|█████████▌| 235091/244489 [01:03<00:01, 6274.16it/s] 96%|█████████▋| 235758/244489 [01:03<00:01, 6389.93it/s] 97%|█████████▋| 236402/244489 [01:04<00:01, 6304.26it/s] 97%|█████████▋| 237049/244489 [01:04<00:01, 6351.00it/s] 97%|█████████▋| 237704/244489 [01:04<00:01, 6408.70it/s] 97%|█████████▋| 238347/244489 [01:04<00:00, 6242.66it/s] 98%|█████████▊| 238974/244489 [01:04<00:00, 5959.46it/s] 98%|█████████▊| 239624/244489 [01:04<00:00, 6112.29it/s] 98%|█████████▊| 240261/244489 [01:04<00:00, 6184.90it/s] 99%|█████████▊| 240883/244489 [01:04<00:00, 5775.18it/s] 99%|█████████▉| 241468/244489 [01:05<00:00, 5043.23it/s] 99%|█████████▉| 241992/244489 [01:05<00:00, 4412.64it/s] 99%|█████████▉| 242457/244489 [01:05<00:00, 4299.27it/s] 99%|█████████▉| 243051/244489 [01:05<00:00, 4707.64it/s]100%|█████████▉| 243541/244489 [01:05<00:00, 4546.11it/s]100%|█████████▉| 244009/244489 [01:05<00:00, 4575.52it/s]100%|██████████| 244489/244489 [01:05<00:00, 3722.36it/s]
  0%|          | 0/34927 [00:00<?, ?it/s]  1%|          | 244/34927 [00:00<00:14, 2430.88it/s]  1%|▏         | 488/34927 [00:00<00:14, 2362.56it/s]  2%|▏         | 785/34927 [00:00<00:12, 2630.02it/s]  3%|▎         | 1090/34927 [00:00<00:12, 2793.49it/s]  4%|▍         | 1376/34927 [00:00<00:11, 2815.89it/s]  5%|▍         | 1703/34927 [00:00<00:11, 2967.52it/s]  6%|▌         | 2070/34927 [00:00<00:10, 3071.59it/s]  7%|▋         | 2377/34927 [00:00<00:14, 2304.54it/s]  8%|▊         | 2634/34927 [00:01<00:14, 2244.54it/s]  8%|▊         | 2876/34927 [00:01<00:14, 2249.76it/s]  9%|▉         | 3113/34927 [00:01<00:14, 2272.17it/s] 10%|▉         | 3400/34927 [00:01<00:12, 2433.62it/s] 11%|█         | 3713/34927 [00:01<00:11, 2626.23it/s] 12%|█▏        | 4079/34927 [00:01<00:10, 2919.84it/s] 13%|█▎        | 4442/34927 [00:01<00:09, 3125.08it/s] 14%|█▍        | 4846/34927 [00:01<00:08, 3391.33it/s] 15%|█▍        | 5229/34927 [00:01<00:08, 3520.40it/s] 16%|█▌        | 5611/34927 [00:01<00:08, 3608.72it/s] 17%|█▋        | 6025/34927 [00:02<00:07, 3765.04it/s] 18%|█▊        | 6452/34927 [00:02<00:07, 3914.04it/s] 20%|█▉        | 6847/34927 [00:02<00:07, 3921.76it/s] 21%|██        | 7241/34927 [00:02<00:07, 3881.46it/s] 22%|██▏       | 7630/34927 [00:02<00:07, 3449.31it/s] 23%|██▎       | 7985/34927 [00:02<00:08, 3301.84it/s] 24%|██▍       | 8390/34927 [00:02<00:07, 3503.02it/s] 25%|██▌       | 8808/34927 [00:02<00:07, 3690.37it/s] 26%|██▋       | 9225/34927 [00:02<00:06, 3826.84it/s] 28%|██▊       | 9651/34927 [00:03<00:06, 3950.78it/s] 29%|██▉       | 10092/34927 [00:03<00:06, 4084.71it/s] 30%|███       | 10504/34927 [00:03<00:06, 3943.65it/s] 31%|███       | 10902/34927 [00:03<00:06, 3871.19it/s] 32%|███▏      | 11325/34927 [00:03<00:05, 3972.39it/s] 34%|███▎      | 11758/34927 [00:03<00:05, 4074.36it/s] 35%|███▍      | 12168/34927 [00:03<00:05, 4009.71it/s] 36%|███▌      | 12571/34927 [00:03<00:05, 3910.80it/s] 37%|███▋      | 12964/34927 [00:03<00:05, 3745.82it/s] 38%|███▊      | 13357/34927 [00:03<00:05, 3796.02it/s] 39%|███▉      | 13739/34927 [00:04<00:05, 3638.38it/s] 41%|████      | 14155/34927 [00:04<00:05, 3784.27it/s] 42%|████▏     | 14536/34927 [00:04<00:05, 3512.92it/s] 43%|████▎     | 14893/34927 [00:04<00:05, 3500.76it/s] 44%|████▎     | 15264/34927 [00:04<00:05, 3556.81it/s] 45%|████▍     | 15623/34927 [00:04<00:05, 3237.13it/s] 46%|████▌     | 15957/34927 [00:04<00:05, 3262.81it/s] 47%|████▋     | 16289/34927 [00:04<00:06, 3072.54it/s] 48%|████▊     | 16602/34927 [00:04<00:06, 3038.38it/s] 48%|████▊     | 16910/34927 [00:05<00:06, 2987.13it/s] 50%|████▉     | 17341/34927 [00:05<00:05, 3354.77it/s] 51%|█████     | 17753/34927 [00:05<00:04, 3572.12it/s] 52%|█████▏    | 18170/34927 [00:05<00:04, 3743.21it/s] 53%|█████▎    | 18611/34927 [00:05<00:04, 3935.88it/s] 54%|█████▍    | 19008/34927 [00:05<00:04, 3476.60it/s] 55%|█████▌    | 19368/34927 [00:05<00:04, 3228.68it/s] 57%|█████▋    | 19750/34927 [00:05<00:04, 3374.31it/s] 58%|█████▊    | 20097/34927 [00:06<00:04, 3090.69it/s] 58%|█████▊    | 20416/34927 [00:06<00:05, 2624.50it/s] 59%|█████▉    | 20695/34927 [00:06<00:05, 2611.06it/s] 60%|██████    | 20968/34927 [00:06<00:05, 2599.48it/s] 61%|██████    | 21389/34927 [00:06<00:04, 3018.02it/s] 62%|██████▏   | 21750/34927 [00:06<00:04, 3175.92it/s] 63%|██████▎   | 22078/34927 [00:06<00:04, 2962.14it/s] 64%|██████▍   | 22384/34927 [00:06<00:04, 2872.08it/s] 65%|██████▍   | 22678/34927 [00:06<00:04, 2810.66it/s] 66%|██████▌   | 22964/34927 [00:07<00:05, 2387.46it/s] 66%|██████▋   | 23216/34927 [00:07<00:04, 2372.05it/s] 67%|██████▋   | 23568/34927 [00:07<00:04, 2666.02it/s] 68%|██████▊   | 23866/34927 [00:07<00:04, 2750.37it/s] 69%|██████▉   | 24150/34927 [00:07<00:03, 2740.63it/s] 70%|██████▉   | 24436/34927 [00:07<00:03, 2773.40it/s] 71%|███████   | 24846/34927 [00:07<00:03, 3152.59it/s] 72%|███████▏  | 25167/34927 [00:07<00:03, 3118.67it/s] 73%|███████▎  | 25565/34927 [00:07<00:02, 3366.03it/s] 74%|███████▍  | 25924/34927 [00:08<00:02, 3428.23it/s] 75%|███████▌  | 26270/34927 [00:08<00:02, 3057.23it/s] 76%|███████▌  | 26585/34927 [00:08<00:02, 2883.67it/s] 77%|███████▋  | 26964/34927 [00:08<00:02, 3124.35it/s] 78%|███████▊  | 27400/34927 [00:08<00:02, 3464.30it/s] 79%|███████▉  | 27755/34927 [00:08<00:02, 3337.44it/s] 80%|████████  | 28096/34927 [00:08<00:02, 2989.13it/s] 81%|████████▏ | 28406/34927 [00:08<00:02, 2738.99it/s] 82%|████████▏ | 28690/34927 [00:09<00:02, 2515.94it/s] 83%|████████▎ | 28957/34927 [00:09<00:02, 2552.39it/s] 84%|████████▎ | 29219/34927 [00:09<00:02, 2529.68it/s] 85%|████████▍ | 29530/34927 [00:09<00:02, 2683.77it/s] 85%|████████▌ | 29804/34927 [00:09<00:02, 2485.60it/s] 86%|████████▌ | 30058/34927 [00:09<00:01, 2499.72it/s] 87%|████████▋ | 30423/34927 [00:09<00:01, 2816.50it/s] 88%|████████▊ | 30721/34927 [00:09<00:01, 2862.32it/s] 89%|████████▉ | 31105/34927 [00:09<00:01, 3141.92it/s] 90%|█████████ | 31492/34927 [00:09<00:01, 3352.37it/s] 91%|█████████ | 31869/34927 [00:10<00:00, 3473.47it/s] 92%|█████████▏| 32240/34927 [00:10<00:00, 3541.18it/s] 93%|█████████▎| 32597/34927 [00:10<00:00, 3165.16it/s] 94%|█████████▍| 32923/34927 [00:10<00:00, 2842.57it/s] 95%|█████████▌| 33319/34927 [00:10<00:00, 3130.39it/s] 96%|█████████▋| 33645/34927 [00:10<00:00, 2999.92it/s] 97%|█████████▋| 33954/34927 [00:10<00:00, 2907.01it/s] 98%|█████████▊| 34306/34927 [00:10<00:00, 3070.80it/s] 99%|█████████▉| 34620/34927 [00:11<00:00, 3062.68it/s]100%|██████████| 34927/34927 [00:11<00:00, 3130.75it/s]
  0%|          | 0/69854 [00:00<?, ?it/s]  0%|          | 68/69854 [00:00<01:42, 678.38it/s]  0%|          | 287/69854 [00:00<00:44, 1565.18it/s]  1%|          | 515/69854 [00:00<00:36, 1890.88it/s]  1%|          | 758/69854 [00:00<00:32, 2102.90it/s]  1%|▏         | 1044/69854 [00:00<00:28, 2373.96it/s]  2%|▏         | 1422/69854 [00:00<00:24, 2849.26it/s]  2%|▏         | 1736/69854 [00:00<00:23, 2943.02it/s]  3%|▎         | 2031/69854 [00:00<00:23, 2942.20it/s]  3%|▎         | 2326/69854 [00:00<00:28, 2353.29it/s]  4%|▎         | 2609/69854 [00:01<00:27, 2477.71it/s]  4%|▍         | 2894/69854 [00:01<00:25, 2578.93it/s]  5%|▍         | 3174/69854 [00:01<00:25, 2640.31it/s]  5%|▌         | 3552/69854 [00:01<00:22, 2965.36it/s]  6%|▌         | 3944/69854 [00:01<00:20, 3240.41it/s]  6%|▌         | 4275/69854 [00:01<00:20, 3242.68it/s]  7%|▋         | 4610/69854 [00:01<00:19, 3273.09it/s]  7%|▋         | 4941/69854 [00:01<00:25, 2557.72it/s]  7%|▋         | 5223/69854 [00:01<00:24, 2590.65it/s]  8%|▊         | 5501/69854 [00:02<00:25, 2539.77it/s]  8%|▊         | 5790/69854 [00:02<00:24, 2593.96it/s]  9%|▊         | 6060/69854 [00:02<00:30, 2088.62it/s]  9%|▉         | 6290/69854 [00:02<00:30, 2087.66it/s]  9%|▉         | 6563/69854 [00:02<00:28, 2245.58it/s] 10%|▉         | 6896/69854 [00:02<00:24, 2526.48it/s] 10%|█         | 7231/69854 [00:02<00:22, 2747.97it/s] 11%|█         | 7568/69854 [00:02<00:21, 2918.99it/s] 11%|█▏        | 7886/69854 [00:03<00:20, 2990.19it/s] 12%|█▏        | 8193/69854 [00:03<00:29, 2119.70it/s] 12%|█▏        | 8475/69854 [00:03<00:26, 2276.44it/s] 13%|█▎        | 8736/69854 [00:03<00:29, 2101.99it/s] 13%|█▎        | 8971/69854 [00:03<00:30, 1999.55it/s] 13%|█▎        | 9268/69854 [00:03<00:27, 2229.56it/s] 14%|█▎        | 9509/69854 [00:03<00:26, 2255.90it/s] 14%|█▍        | 9748/69854 [00:04<00:36, 1669.51it/s] 14%|█▍        | 9997/69854 [00:04<00:32, 1836.56it/s] 15%|█▍        | 10301/69854 [00:04<00:28, 2117.41it/s] 15%|█▌        | 10540/69854 [00:04<00:27, 2137.96it/s] 15%|█▌        | 10773/69854 [00:04<00:33, 1744.10it/s] 16%|█▌        | 11021/69854 [00:04<00:30, 1910.85it/s] 16%|█▌        | 11234/69854 [00:04<00:30, 1929.47it/s] 16%|█▋        | 11514/69854 [00:04<00:27, 2152.27it/s] 17%|█▋        | 11755/69854 [00:05<00:26, 2220.35it/s] 17%|█▋        | 11989/69854 [00:05<00:28, 2033.72it/s] 18%|█▊        | 12272/69854 [00:05<00:25, 2242.09it/s] 18%|█▊        | 12561/69854 [00:05<00:23, 2409.50it/s] 18%|█▊        | 12902/69854 [00:05<00:21, 2683.99it/s] 19%|█▉        | 13217/69854 [00:05<00:20, 2815.49it/s] 19%|█▉        | 13505/69854 [00:05<00:20, 2797.15it/s] 20%|█▉        | 13789/69854 [00:05<00:22, 2508.97it/s] 20%|██        | 14070/69854 [00:05<00:21, 2589.27it/s] 21%|██        | 14336/69854 [00:05<00:21, 2573.41it/s] 21%|██        | 14598/69854 [00:06<00:22, 2485.58it/s] 21%|██▏       | 14900/69854 [00:06<00:20, 2633.88it/s] 22%|██▏       | 15167/69854 [00:06<00:21, 2594.10it/s] 22%|██▏       | 15486/69854 [00:06<00:19, 2761.84it/s] 23%|██▎       | 15841/69854 [00:06<00:18, 2978.26it/s] 23%|██▎       | 16142/69854 [00:06<00:18, 2889.91it/s] 24%|██▎       | 16483/69854 [00:06<00:17, 3037.71it/s] 24%|██▍       | 16818/69854 [00:06<00:16, 3123.67it/s] 25%|██▍       | 17133/69854 [00:06<00:17, 3075.58it/s] 25%|██▍       | 17442/69854 [00:07<00:17, 3075.92it/s] 25%|██▌       | 17751/69854 [00:07<00:17, 2996.52it/s] 26%|██▌       | 18092/69854 [00:07<00:16, 3116.29it/s] 26%|██▋       | 18405/69854 [00:07<00:18, 2763.76it/s] 27%|██▋       | 18690/69854 [00:07<00:19, 2665.98it/s] 27%|██▋       | 19000/69854 [00:07<00:18, 2781.32it/s] 28%|██▊       | 19284/69854 [00:07<00:19, 2557.46it/s] 28%|██▊       | 19546/69854 [00:07<00:20, 2423.73it/s] 28%|██▊       | 19892/69854 [00:07<00:18, 2696.45it/s] 29%|██▉       | 20325/69854 [00:08<00:15, 3142.93it/s] 30%|██▉       | 20688/69854 [00:08<00:14, 3279.17it/s] 30%|███       | 21103/69854 [00:08<00:13, 3527.60it/s] 31%|███       | 21512/69854 [00:08<00:13, 3690.17it/s] 31%|███▏      | 21886/69854 [00:08<00:13, 3669.78it/s] 32%|███▏      | 22257/69854 [00:08<00:13, 3406.83it/s] 32%|███▏      | 22604/69854 [00:08<00:14, 3354.19it/s] 33%|███▎      | 22944/69854 [00:08<00:16, 2912.51it/s] 33%|███▎      | 23372/69854 [00:08<00:14, 3264.17it/s] 34%|███▍      | 23753/69854 [00:09<00:13, 3409.33it/s] 35%|███▍      | 24161/69854 [00:09<00:12, 3594.14it/s] 35%|███▌      | 24530/69854 [00:09<00:13, 3405.85it/s] 36%|███▌      | 24879/69854 [00:09<00:13, 3409.13it/s] 36%|███▌      | 25288/69854 [00:09<00:12, 3599.84it/s] 37%|███▋      | 25713/69854 [00:09<00:11, 3783.09it/s] 37%|███▋      | 26096/69854 [00:09<00:11, 3788.94it/s] 38%|███▊      | 26479/69854 [00:09<00:13, 3328.62it/s] 38%|███▊      | 26872/69854 [00:09<00:12, 3486.78it/s] 39%|███▉      | 27291/69854 [00:10<00:11, 3680.03it/s] 40%|███▉      | 27727/69854 [00:10<00:10, 3871.61it/s] 40%|████      | 28178/69854 [00:10<00:10, 4053.64it/s] 41%|████      | 28661/69854 [00:10<00:09, 4277.60it/s] 42%|████▏     | 29094/69854 [00:10<00:11, 3551.55it/s] 42%|████▏     | 29477/69854 [00:10<00:11, 3621.81it/s] 43%|████▎     | 29897/69854 [00:10<00:10, 3776.53it/s] 43%|████▎     | 30289/69854 [00:10<00:10, 3694.26it/s] 44%|████▍     | 30669/69854 [00:10<00:10, 3618.94it/s] 44%|████▍     | 31038/69854 [00:11<00:10, 3596.57it/s] 45%|████▍     | 31403/69854 [00:11<00:10, 3609.95it/s] 45%|████▌     | 31768/69854 [00:11<00:10, 3492.08it/s] 46%|████▌     | 32121/69854 [00:11<00:11, 3330.49it/s] 47%|████▋     | 32485/69854 [00:11<00:10, 3415.84it/s] 47%|████▋     | 32855/69854 [00:11<00:10, 3495.05it/s] 48%|████▊     | 33224/69854 [00:11<00:10, 3546.16it/s] 48%|████▊     | 33603/69854 [00:11<00:10, 3616.16it/s] 49%|████▊     | 33967/69854 [00:11<00:09, 3616.72it/s] 49%|████▉     | 34331/69854 [00:11<00:09, 3623.53it/s] 50%|████▉     | 34695/69854 [00:12<00:09, 3552.94it/s] 50%|█████     | 35058/69854 [00:12<00:09, 3568.29it/s] 51%|█████     | 35416/69854 [00:12<00:09, 3502.24it/s] 51%|█████     | 35767/69854 [00:12<00:10, 3335.99it/s] 52%|█████▏    | 36103/69854 [00:12<00:10, 3327.63it/s] 52%|█████▏    | 36437/69854 [00:12<00:10, 3293.36it/s] 53%|█████▎    | 36768/69854 [00:12<00:10, 3225.23it/s] 53%|█████▎    | 37115/69854 [00:12<00:09, 3295.16it/s] 54%|█████▎    | 37446/69854 [00:12<00:10, 3240.42it/s] 54%|█████▍    | 37771/69854 [00:13<00:10, 3207.43it/s] 55%|█████▍    | 38093/69854 [00:13<00:09, 3198.74it/s] 55%|█████▍    | 38414/69854 [00:13<00:10, 3125.04it/s] 55%|█████▌    | 38731/69854 [00:13<00:09, 3136.65it/s] 56%|█████▌    | 39051/69854 [00:13<00:09, 3154.68it/s] 56%|█████▋    | 39400/69854 [00:13<00:09, 3252.27it/s] 57%|█████▋    | 39746/69854 [00:13<00:09, 3300.98it/s] 57%|█████▋    | 40077/69854 [00:13<00:09, 3296.16it/s] 58%|█████▊    | 40407/69854 [00:13<00:09, 2958.19it/s] 58%|█████▊    | 40710/69854 [00:14<00:10, 2676.99it/s] 59%|█████▊    | 41017/69854 [00:14<00:10, 2779.07it/s] 59%|█████▉    | 41303/69854 [00:14<00:16, 1706.38it/s] 59%|█████▉    | 41529/69854 [00:14<00:15, 1786.62it/s] 60%|█████▉    | 41784/69854 [00:14<00:14, 1948.07it/s] 60%|██████    | 42015/69854 [00:14<00:14, 1899.07it/s] 60%|██████    | 42260/69854 [00:14<00:13, 2028.70it/s] 61%|██████    | 42484/69854 [00:14<00:13, 2078.57it/s] 61%|██████    | 42752/69854 [00:15<00:12, 2236.30it/s] 62%|██████▏   | 42989/69854 [00:15<00:12, 2109.12it/s] 62%|██████▏   | 43242/69854 [00:15<00:12, 2197.95it/s] 62%|██████▏   | 43470/69854 [00:15<00:11, 2208.31it/s] 63%|██████▎   | 43700/69854 [00:15<00:12, 2173.10it/s] 63%|██████▎   | 43950/69854 [00:15<00:11, 2263.53it/s] 63%|██████▎   | 44203/69854 [00:15<00:10, 2337.19it/s] 64%|██████▍   | 44553/69854 [00:15<00:09, 2673.21it/s] 64%|██████▍   | 44851/69854 [00:15<00:09, 2762.86it/s] 65%|██████▍   | 45130/69854 [00:16<00:10, 2277.21it/s] 65%|██████▍   | 45374/69854 [00:16<00:11, 2143.54it/s] 65%|██████▌   | 45600/69854 [00:16<00:12, 1938.78it/s] 66%|██████▌   | 45874/69854 [00:16<00:11, 2133.45it/s] 66%|██████▌   | 46103/69854 [00:16<00:10, 2172.09it/s] 66%|██████▋   | 46359/69854 [00:16<00:10, 2275.30it/s] 67%|██████▋   | 46609/69854 [00:16<00:09, 2336.54it/s] 67%|██████▋   | 46849/69854 [00:16<00:10, 2142.16it/s] 67%|██████▋   | 47114/69854 [00:17<00:09, 2278.08it/s] 68%|██████▊   | 47348/69854 [00:17<00:09, 2271.64it/s] 68%|██████▊   | 47618/69854 [00:17<00:09, 2391.71it/s] 69%|██████▊   | 47938/69854 [00:17<00:08, 2623.67it/s] 69%|██████▉   | 48262/69854 [00:17<00:07, 2801.88it/s] 70%|██████▉   | 48596/69854 [00:17<00:07, 2957.52it/s] 70%|███████   | 48950/69854 [00:17<00:06, 3128.17it/s] 71%|███████   | 49306/69854 [00:17<00:06, 3254.36it/s] 71%|███████   | 49668/69854 [00:17<00:06, 3360.67it/s] 72%|███████▏  | 50006/69854 [00:17<00:06, 2939.45it/s] 72%|███████▏  | 50311/69854 [00:18<00:06, 2829.01it/s] 73%|███████▎  | 50747/69854 [00:18<00:05, 3240.86it/s] 73%|███████▎  | 51213/69854 [00:18<00:05, 3633.30it/s] 74%|███████▍  | 51673/69854 [00:18<00:04, 3907.67it/s] 75%|███████▍  | 52148/69854 [00:18<00:04, 4148.51it/s] 75%|███████▌  | 52570/69854 [00:18<00:04, 3949.51it/s] 76%|███████▌  | 52972/69854 [00:18<00:05, 3324.72it/s] 76%|███████▋  | 53325/69854 [00:18<00:04, 3338.64it/s] 77%|███████▋  | 53674/69854 [00:18<00:04, 3334.44it/s] 77%|███████▋  | 54018/69854 [00:19<00:04, 3215.55it/s] 78%|███████▊  | 54381/69854 [00:19<00:04, 3325.33it/s] 78%|███████▊  | 54738/69854 [00:19<00:04, 3392.01it/s] 79%|███████▉  | 55106/69854 [00:19<00:04, 3472.41it/s] 79%|███████▉  | 55458/69854 [00:19<00:04, 3477.53it/s] 80%|███████▉  | 55809/69854 [00:19<00:04, 3179.53it/s] 80%|████████  | 56183/69854 [00:19<00:04, 3332.22it/s] 81%|████████  | 56523/69854 [00:19<00:03, 3334.67it/s] 81%|████████▏ | 56861/69854 [00:19<00:04, 3172.70it/s] 82%|████████▏ | 57183/69854 [00:20<00:04, 3167.14it/s] 83%|████████▎ | 57648/69854 [00:20<00:03, 3585.43it/s] 83%|████████▎ | 58011/69854 [00:20<00:03, 3495.37it/s] 84%|████████▎ | 58411/69854 [00:20<00:03, 3638.40it/s] 84%|████████▍ | 58856/69854 [00:20<00:02, 3872.45it/s] 85%|████████▍ | 59342/69854 [00:20<00:02, 4159.12it/s] 86%|████████▌ | 59790/69854 [00:20<00:02, 4251.33it/s] 86%|████████▌ | 60218/69854 [00:20<00:02, 3560.54it/s] 87%|████████▋ | 60595/69854 [00:20<00:02, 3503.32it/s] 87%|████████▋ | 60960/69854 [00:21<00:02, 3088.03it/s] 88%|████████▊ | 61286/69854 [00:21<00:03, 2436.73it/s] 88%|████████▊ | 61639/69854 [00:21<00:03, 2672.40it/s] 89%|████████▊ | 61968/69854 [00:21<00:02, 2817.65it/s] 89%|████████▉ | 62275/69854 [00:21<00:02, 2802.70it/s] 90%|████████▉ | 62588/69854 [00:21<00:02, 2886.22it/s] 90%|█████████ | 62918/69854 [00:21<00:02, 2997.85it/s] 91%|█████████ | 63229/69854 [00:21<00:02, 2967.75it/s] 91%|█████████ | 63534/69854 [00:22<00:02, 2960.06it/s] 91%|█████████▏| 63836/69854 [00:22<00:02, 2913.60it/s] 92%|█████████▏| 64137/69854 [00:22<00:01, 2932.64it/s] 92%|█████████▏| 64433/69854 [00:22<00:02, 2652.96it/s] 93%|█████████▎| 64705/69854 [00:22<00:02, 2485.45it/s] 93%|█████████▎| 64960/69854 [00:22<00:02, 2429.50it/s] 93%|█████████▎| 65207/69854 [00:22<00:01, 2411.39it/s] 94%|█████████▍| 65559/69854 [00:22<00:01, 2715.16it/s] 94%|█████████▍| 65955/69854 [00:22<00:01, 3064.99it/s] 95%|█████████▍| 66267/69854 [00:23<00:01, 2870.75it/s] 96%|█████████▌| 66941/69854 [00:23<00:00, 3938.75it/s] 97%|█████████▋| 67490/69854 [00:23<00:00, 4376.48it/s] 97%|█████████▋| 67940/69854 [00:23<00:00, 4346.80it/s] 98%|█████████▊| 68383/69854 [00:23<00:00, 4255.22it/s] 99%|█████████▊| 68815/69854 [00:23<00:00, 3617.41it/s] 99%|█████████▉| 69197/69854 [00:23<00:00, 3400.01it/s]100%|█████████▉| 69664/69854 [00:23<00:00, 3720.75it/s]100%|██████████| 69854/69854 [00:23<00:00, 2919.87it/s]
  0%|          | 0/244489 [00:00<?, ?it/s]  1%|          | 2150/244489 [00:00<00:11, 21495.41it/s]  2%|▏         | 5524/244489 [00:00<00:08, 28692.66it/s]  4%|▎         | 8966/244489 [00:00<00:07, 31306.00it/s]  5%|▌         | 12312/244489 [00:00<00:07, 32153.36it/s]  6%|▋         | 15803/244489 [00:00<00:06, 33145.68it/s]  8%|▊         | 19218/244489 [00:00<00:06, 33485.90it/s]  9%|▉         | 22567/244489 [00:00<00:09, 23344.52it/s] 10%|█         | 25291/244489 [00:01<00:11, 18626.62it/s] 11%|█▏        | 27535/244489 [00:01<00:13, 16625.38it/s] 12%|█▏        | 29468/244489 [00:01<00:13, 15426.60it/s] 13%|█▎        | 31189/244489 [00:01<00:14, 14867.86it/s] 13%|█▎        | 32788/244489 [00:01<00:14, 14360.86it/s] 14%|█▍        | 34294/244489 [00:01<00:15, 13912.52it/s] 15%|█▍        | 35727/244489 [00:01<00:15, 13501.69it/s] 15%|█▌        | 37101/244489 [00:01<00:15, 13279.10it/s] 16%|█▌        | 38442/244489 [00:02<00:15, 13256.39it/s] 16%|█▋        | 39777/244489 [00:02<00:15, 13235.41it/s] 17%|█▋        | 41107/244489 [00:02<00:15, 13201.09it/s] 17%|█▋        | 42431/244489 [00:02<00:15, 12918.89it/s] 18%|█▊        | 43726/244489 [00:02<00:15, 12757.68it/s] 18%|█▊        | 45004/244489 [00:02<00:15, 12596.90it/s] 19%|█▉        | 46300/244489 [00:02<00:15, 12699.32it/s] 19%|█▉        | 47571/244489 [00:02<00:15, 12681.65it/s] 20%|█▉        | 48840/244489 [00:02<00:15, 12606.84it/s] 20%|██        | 50102/244489 [00:03<00:15, 12472.11it/s] 21%|██        | 51388/244489 [00:03<00:15, 12585.19it/s] 22%|██▏       | 52674/244489 [00:03<00:15, 12662.62it/s] 22%|██▏       | 53941/244489 [00:03<00:16, 11310.76it/s] 23%|██▎       | 55132/244489 [00:03<00:16, 11473.95it/s] 23%|██▎       | 56481/244489 [00:03<00:15, 12039.79it/s] 24%|██▎       | 57871/244489 [00:03<00:14, 12571.60it/s] 24%|██▍       | 59313/244489 [00:03<00:14, 13107.90it/s] 25%|██▍       | 60676/244489 [00:03<00:13, 13259.30it/s] 25%|██▌       | 62011/244489 [00:03<00:14, 12986.50it/s] 26%|██▌       | 63317/244489 [00:04<00:15, 11554.20it/s] 26%|██▋       | 64677/244489 [00:04<00:14, 12106.94it/s] 27%|██▋       | 66060/244489 [00:04<00:14, 12584.54it/s] 28%|██▊       | 67386/244489 [00:04<00:13, 12773.95it/s] 28%|██▊       | 68733/244489 [00:04<00:13, 12974.39it/s] 29%|██▊       | 70107/244489 [00:04<00:13, 13196.61it/s] 29%|██▉       | 71510/244489 [00:04<00:12, 13439.92it/s] 30%|██▉       | 72862/244489 [00:04<00:13, 13022.71it/s] 30%|███       | 74172/244489 [00:04<00:13, 12613.57it/s] 31%|███       | 75525/244489 [00:05<00:13, 12873.04it/s] 31%|███▏      | 76825/244489 [00:05<00:12, 12909.49it/s] 32%|███▏      | 78180/244489 [00:05<00:12, 13096.22it/s] 33%|███▎      | 79494/244489 [00:05<00:12, 13096.52it/s] 33%|███▎      | 80807/244489 [00:05<00:13, 12193.82it/s] 34%|███▎      | 82191/244489 [00:05<00:12, 12656.69it/s] 34%|███▍      | 83504/244489 [00:05<00:12, 12791.16it/s] 35%|███▍      | 84865/244489 [00:05<00:12, 13027.42it/s] 35%|███▌      | 86206/244489 [00:05<00:12, 13138.75it/s] 36%|███▌      | 87569/244489 [00:05<00:11, 13281.44it/s] 36%|███▋      | 88902/244489 [00:06<00:11, 13179.81it/s] 37%|███▋      | 90223/244489 [00:06<00:11, 13149.13it/s] 37%|███▋      | 91540/244489 [00:06<00:11, 13152.67it/s] 38%|███▊      | 92950/244489 [00:06<00:11, 13432.17it/s] 39%|███▊      | 94295/244489 [00:06<00:11, 13412.63it/s] 39%|███▉      | 95638/244489 [00:06<00:11, 13284.60it/s] 40%|███▉      | 96968/244489 [00:06<00:11, 13085.99it/s] 40%|████      | 98278/244489 [00:06<00:11, 12791.04it/s] 41%|████      | 99559/244489 [00:06<00:11, 12623.36it/s] 41%|████      | 100823/244489 [00:06<00:11, 12414.25it/s] 42%|████▏     | 102066/244489 [00:07<00:11, 12262.68it/s] 42%|████▏     | 103333/244489 [00:07<00:11, 12380.45it/s] 43%|████▎     | 104572/244489 [00:07<00:11, 12234.13it/s] 43%|████▎     | 105797/244489 [00:07<00:11, 12236.38it/s] 44%|████▍     | 107050/244489 [00:07<00:11, 12319.75it/s] 44%|████▍     | 108285/244489 [00:07<00:11, 12327.88it/s] 45%|████▍     | 109594/244489 [00:07<00:10, 12553.83it/s] 45%|████▌     | 110900/244489 [00:07<00:10, 12702.43it/s] 46%|████▌     | 112297/244489 [00:07<00:10, 13078.73it/s] 46%|████▋     | 113682/244489 [00:07<00:09, 13308.50it/s] 47%|████▋     | 115105/244489 [00:08<00:09, 13582.82it/s] 48%|████▊     | 116483/244489 [00:08<00:09, 13640.11it/s] 48%|████▊     | 117913/244489 [00:08<00:09, 13837.04it/s] 49%|████▉     | 119297/244489 [00:08<00:09, 13775.97it/s] 49%|████▉     | 120735/244489 [00:08<00:08, 13954.34it/s] 50%|████▉     | 122131/244489 [00:08<00:08, 13886.56it/s] 51%|█████     | 123577/244489 [00:08<00:08, 14055.97it/s] 51%|█████     | 124983/244489 [00:08<00:08, 14013.13it/s] 52%|█████▏    | 126385/244489 [00:08<00:08, 13990.17it/s] 52%|█████▏    | 127785/244489 [00:09<00:08, 13818.34it/s] 53%|█████▎    | 129168/244489 [00:09<00:08, 13761.72it/s] 53%|█████▎    | 130545/244489 [00:09<00:08, 13574.07it/s] 54%|█████▍    | 131922/244489 [00:09<00:08, 13630.68it/s] 55%|█████▍    | 133286/244489 [00:09<00:08, 13338.92it/s] 55%|█████▌    | 134644/244489 [00:09<00:08, 13408.44it/s] 56%|█████▌    | 135987/244489 [00:09<00:08, 13365.23it/s] 56%|█████▌    | 137326/244489 [00:09<00:08, 13369.09it/s] 57%|█████▋    | 138749/244489 [00:09<00:07, 13622.34it/s] 57%|█████▋    | 140112/244489 [00:09<00:07, 13506.90it/s] 58%|█████▊    | 141553/244489 [00:10<00:07, 13772.50it/s] 59%|█████▊    | 143031/244489 [00:10<00:07, 14069.98it/s] 59%|█████▉    | 144500/244489 [00:10<00:07, 14251.80it/s] 60%|█████▉    | 145926/244489 [00:10<00:06, 14224.17it/s] 60%|██████    | 147357/244489 [00:10<00:06, 14247.47it/s] 61%|██████    | 148783/244489 [00:10<00:07, 13640.10it/s] 61%|██████▏   | 150153/244489 [00:10<00:07, 13278.78it/s] 62%|██████▏   | 151486/244489 [00:10<00:07, 12933.73it/s] 62%|██████▏   | 152784/244489 [00:10<00:07, 12906.56it/s] 63%|██████▎   | 154078/244489 [00:10<00:07, 12668.94it/s] 64%|██████▎   | 155371/244489 [00:11<00:06, 12743.12it/s] 64%|██████▍   | 156648/244489 [00:11<00:07, 12526.98it/s] 65%|██████▍   | 158006/244489 [00:11<00:06, 12832.00it/s] 65%|██████▌   | 159338/244489 [00:11<00:06, 12972.82it/s] 66%|██████▌   | 160815/244489 [00:11<00:06, 13500.95it/s] 66%|██████▋   | 162278/244489 [00:11<00:05, 13834.00it/s] 67%|██████▋   | 163794/244489 [00:11<00:05, 14227.43it/s] 68%|██████▊   | 165285/244489 [00:11<00:05, 14429.27it/s] 68%|██████▊   | 166830/244489 [00:11<00:05, 14732.47it/s] 69%|██████▉   | 168340/244489 [00:11<00:05, 14839.76it/s] 69%|██████▉   | 169900/244489 [00:12<00:04, 15064.45it/s] 70%|███████   | 171407/244489 [00:12<00:04, 14992.77it/s] 71%|███████   | 172926/244489 [00:12<00:04, 15051.49it/s] 71%|███████▏  | 174432/244489 [00:12<00:04, 14435.37it/s] 72%|███████▏  | 175882/244489 [00:12<00:04, 13759.57it/s] 73%|███████▎  | 177267/244489 [00:12<00:05, 13260.92it/s] 73%|███████▎  | 178602/244489 [00:12<00:05, 12974.49it/s] 74%|███████▎  | 179905/244489 [00:12<00:05, 12659.73it/s] 74%|███████▍  | 181175/244489 [00:12<00:05, 12652.36it/s] 75%|███████▍  | 182443/244489 [00:13<00:04, 12558.85it/s] 75%|███████▌  | 183723/244489 [00:13<00:04, 12627.99it/s] 76%|███████▌  | 184988/244489 [00:13<00:04, 12607.54it/s] 76%|███████▌  | 186325/244489 [00:13<00:04, 12830.56it/s] 77%|███████▋  | 187610/244489 [00:13<00:04, 12675.29it/s] 77%|███████▋  | 188879/244489 [00:13<00:04, 12550.44it/s] 78%|███████▊  | 190135/244489 [00:13<00:04, 12472.24it/s] 78%|███████▊  | 191383/244489 [00:13<00:04, 12370.78it/s] 79%|███████▉  | 192621/244489 [00:13<00:04, 12356.20it/s] 79%|███████▉  | 193871/244489 [00:13<00:04, 12396.48it/s] 80%|███████▉  | 195111/244489 [00:14<00:03, 12352.87it/s] 80%|████████  | 196375/244489 [00:14<00:03, 12436.03it/s] 81%|████████  | 197624/244489 [00:14<00:03, 12451.20it/s] 81%|████████▏ | 198894/244489 [00:14<00:03, 12521.83it/s] 82%|████████▏ | 200147/244489 [00:14<00:03, 12427.54it/s] 82%|████████▏ | 201476/244489 [00:14<00:03, 12683.88it/s] 83%|████████▎ | 202772/244489 [00:14<00:03, 12763.86it/s] 84%|████████▎ | 204154/244489 [00:14<00:03, 13077.51it/s] 84%|████████▍ | 205473/244489 [00:14<00:02, 13109.31it/s] 85%|████████▍ | 206789/244489 [00:14<00:02, 13123.32it/s] 85%|████████▌ | 208102/244489 [00:15<00:02, 13117.69it/s] 86%|████████▌ | 209443/244489 [00:15<00:02, 13202.28it/s] 86%|████████▌ | 210767/244489 [00:15<00:02, 13211.58it/s] 87%|████████▋ | 212182/244489 [00:15<00:02, 13491.33it/s] 87%|████████▋ | 213607/244489 [00:15<00:02, 13715.69it/s] 88%|████████▊ | 215061/244489 [00:15<00:02, 13962.13it/s] 89%|████████▊ | 216458/244489 [00:15<00:02, 13428.98it/s] 89%|████████▉ | 217806/244489 [00:15<00:02, 12895.05it/s] 90%|████████▉ | 219219/244489 [00:15<00:01, 13246.39it/s] 90%|█████████ | 220669/244489 [00:15<00:01, 13608.51it/s] 91%|█████████ | 222076/244489 [00:16<00:01, 13742.81it/s] 91%|█████████▏| 223510/244489 [00:16<00:01, 13917.86it/s] 92%|█████████▏| 224920/244489 [00:16<00:01, 13970.59it/s] 93%|█████████▎| 226361/244489 [00:16<00:01, 14100.15it/s] 93%|█████████▎| 227779/244489 [00:16<00:01, 14122.75it/s] 94%|█████████▎| 229193/244489 [00:16<00:01, 13888.71it/s] 94%|█████████▍| 230584/244489 [00:16<00:01, 13673.03it/s] 95%|█████████▍| 231966/244489 [00:16<00:00, 13714.74it/s] 95%|█████████▌| 233371/244489 [00:16<00:00, 13785.01it/s] 96%|█████████▌| 234830/244489 [00:17<00:00, 14018.88it/s] 97%|█████████▋| 236273/244489 [00:17<00:00, 14140.34it/s] 97%|█████████▋| 237696/244489 [00:17<00:00, 14165.61it/s] 98%|█████████▊| 239149/244489 [00:17<00:00, 14273.77it/s] 98%|█████████▊| 240592/244489 [00:17<00:00, 14317.98it/s] 99%|█████████▉| 242025/244489 [00:17<00:00, 14279.19it/s]100%|█████████▉| 243454/244489 [00:17<00:00, 13992.12it/s]100%|██████████| 244489/244489 [00:17<00:00, 13822.32it/s]
  0%|          | 0/34927 [00:00<?, ?it/s]  9%|▉         | 3265/34927 [00:00<00:00, 32648.09it/s] 19%|█▉        | 6594/34927 [00:00<00:00, 33019.30it/s] 28%|██▊       | 9896/34927 [00:00<00:00, 32883.65it/s] 38%|███▊      | 13245/34927 [00:00<00:00, 33121.68it/s] 47%|████▋     | 16558/34927 [00:00<00:00, 32954.60it/s] 57%|█████▋    | 19937/34927 [00:00<00:00, 33235.77it/s] 67%|██████▋   | 23261/34927 [00:00<00:00, 33113.44it/s] 76%|███████▋  | 26677/34927 [00:00<00:00, 33442.20it/s] 86%|████████▌ | 30022/34927 [00:00<00:00, 33440.62it/s] 96%|█████████▌| 33425/34927 [00:01<00:00, 33619.62it/s]100%|██████████| 34927/34927 [00:01<00:00, 33371.47it/s]
  0%|          | 0/69854 [00:00<?, ?it/s]  4%|▍         | 3102/69854 [00:00<00:02, 31017.37it/s]  9%|▉         | 6372/69854 [00:00<00:01, 32004.49it/s] 14%|█▍        | 9632/69854 [00:00<00:01, 32273.07it/s] 19%|█▊        | 13032/69854 [00:00<00:01, 32953.76it/s] 23%|██▎       | 16349/69854 [00:00<00:01, 33027.54it/s] 28%|██▊       | 19746/69854 [00:00<00:01, 33344.54it/s] 33%|███▎      | 23081/69854 [00:00<00:01, 33261.73it/s] 38%|███▊      | 26444/69854 [00:00<00:01, 33376.26it/s] 43%|████▎     | 29782/69854 [00:00<00:01, 33188.97it/s] 47%|████▋     | 33126/69854 [00:01<00:01, 33265.08it/s] 52%|█████▏    | 36453/69854 [00:01<00:01, 33142.82it/s] 57%|█████▋    | 39860/69854 [00:01<00:00, 33422.03it/s] 62%|██████▏   | 43203/69854 [00:01<00:00, 33358.99it/s] 67%|██████▋   | 46622/69854 [00:01<00:00, 33607.85it/s] 72%|███████▏  | 49984/69854 [00:01<00:00, 33301.62it/s] 76%|███████▋  | 53388/69854 [00:01<00:00, 33520.27it/s] 81%|████████  | 56741/69854 [00:01<00:00, 33492.94it/s] 86%|████████▌ | 60171/69854 [00:01<00:00, 33733.81it/s] 91%|█████████ | 63578/69854 [00:01<00:00, 33620.88it/s] 96%|█████████▌| 66980/69854 [00:02<00:00, 33737.51it/s]100%|██████████| 69854/69854 [00:02<00:00, 33360.04it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  7.81it/s]Train:   5%|▌         | 3/60 [00:00<00:06,  9.33it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.06it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.09it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.89it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.55it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.40it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.23it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.47it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.15it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.04it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 27.35it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.97it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.95it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 23.83it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 26.99it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 23.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 18.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 24.87it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 20.48it/s]Test:  72%|███████▏  | 13/18 [00:00<00:00, 36.87it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.52it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.18it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.24it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 24.84it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.76it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.78it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 22.57it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.63it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.84it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 20.40it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 21.77it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 19.04it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 20.89it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 22.61it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 19.07it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.35it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 19.16it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.24it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 19.35it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.73it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 28.74it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.75it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.83it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.42it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.31it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.64it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.79it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.89it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.51it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 21.10it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 17.97it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 21.94it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 20.68it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.24it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 21.68it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.20it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 23.03it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.20it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.39it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.76it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00,  9.24it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 21.28it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 19.15it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 33.29it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 30.09it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.92it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.57it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.68it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.55it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.45it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.90it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 20.89it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.48it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.83it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.31it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.47it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.72it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.27it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.30it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.40it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 20.22it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.68it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 19.15it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 38.69it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.56it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.13it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.32it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 15.40it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.09it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 18.56it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 22.68it/s]Train:  30%|███       | 18/60 [00:00<00:02, 20.66it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 24.59it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.67it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.90it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 21.75it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.70it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 21.65it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.64it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 21.63it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.39it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 22.81it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.71it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00,  8.22it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 25.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.82it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 39.18it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.66it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 13.76it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.84it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.24it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.39it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 21.24it/s]Train:  40%|████      | 24/60 [00:01<00:01, 25.13it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.56it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.67it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.38it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.45it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.49it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 25.58it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.55it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.86it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 22.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 40.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 37.31it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 24.27it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.09it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.75it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 13.29it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.80it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.13it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.70it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.69it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.29it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.45it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.76it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.89it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.88it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.60it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.36it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 23.47it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.32it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 22.99it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.73it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 22.34it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 18.31it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 32.43it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 30.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.81it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.81it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.94it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.76it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.93it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.20it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.94it/s]Train:  40%|████      | 24/60 [00:00<00:01, 26.42it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.82it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.78it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.35it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.31it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.94it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.72it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 23.24it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.44it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 21.74it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.89it/s]Test:  39%|███▉      | 7/18 [00:00<00:00, 23.16it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 38.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.07it/s]Loading MSD from data/song/msd_clean.csv
Loading FMA from data/song/fma_clean.csv
Current MSD columns Index(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
       '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24',
       '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36',
       '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48',
       '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60',
       '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72',
       '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84',
       '85', '86', '87', '88', '89', 'title'],
      dtype='object')
Current FMA columns Index(['title', '0', '1', '2', '3', '4', '5', '6', '7', '8',
       ...
       '508', '509', '510', '511', '512', '513', '514', '515', '516', '517'],
      dtype='object', length=519)
Loading data from cache
Done
Calculating noise scale
Adding noise of scale 0.0 to sim_scores
Adding noise of scale 0.0 to sim_scores
Adding noise of scale 0.0 to sim_scores
Filter dataset to top 30
Generating top 30 dataset
Generating top 30 dataset
Generating top 30 dataset
Generating top1 dataset
Generating top1 dataset
Generating top1 dataset
Preparing time (sec): 273
Loading data
Prepare for training
Start training
================================================================================
                                    Kernel Shape Output Shape  Params  \
Layer                                                                   
0_local_models.0.fc_layers.Linear_0    [90, 200]  [4096, 200]   18200   
1_local_models.0.fc_layers.Linear_1   [200, 100]  [4096, 100]   20100   
2_local_models.1.fc_layers.Linear_0   [518, 200]  [4096, 200]  103800   
3_local_models.1.fc_layers.Linear_1   [200, 100]  [4096, 100]   20100   
4_agg_model.fc_layers.Linear_0        [200, 400]  [4096, 400]   80400   
5_agg_model.fc_layers.Linear_1          [400, 1]    [4096, 1]     401   

                                     Mult-Adds  
Layer                                           
0_local_models.0.fc_layers.Linear_0      18000  
1_local_models.0.fc_layers.Linear_1      20000  
2_local_models.1.fc_layers.Linear_0     103600  
3_local_models.1.fc_layers.Linear_1      20000  
4_agg_model.fc_layers.Linear_0           80000  
5_agg_model.fc_layers.Linear_1             400  
--------------------------------------------------------------------------------
                      Totals
Total params          243001
Trainable params      243001
Non-trainable params       0
Mult-Adds             242000
================================================================================
n_classes=2
task=regression
model_name=song_top1sim_2022-02-03-23-29-51
sche_threshold=0.0001
sche_patience=10
sche_factor=0.1
use_scheduler=False
num_workers=4
device=cuda:2
test_batch_size=4096
train_batch_size=4096
learning_rate=0.001
weight_decay=1e-05
num_epochs=100
model_save_path=ckp/song_top1sim_2022-02-03-23-29-51.pth
test_rate=0.2
val_rate=0.1
multiprocess_context=fork
metrics=['r2_score', 'rmse', 'mae']
metrics_f=[<metric.r2_score.R2Score object at 0x7f63a1111eb0>, <metric.rmse.RMSE object at 0x7f63a11119a0>, <metric.mae.MAE object at 0x7f63a1111d00>]
hidden_sizes=[200, 100]
model=SplitNN(
  (agg_model): MLP(
    (fc_layers): ModuleList(
      (0): Linear(in_features=200, out_features=400, bias=True)
      (1): Linear(in_features=400, out_features=1, bias=True)
    )
  )
  (local_models): ModuleList(
    (0): MLP(
      (fc_layers): ModuleList(
        (0): Linear(in_features=90, out_features=200, bias=True)
        (1): Linear(in_features=200, out_features=100, bias=True)
      )
    )
    (1): MLP(
      (fc_layers): ModuleList(
        (0): Linear(in_features=518, out_features=200, bias=True)
        (1): Linear(in_features=200, out_features=100, bias=True)
      )
    )
  )
)
writer=<torch.utils.tensorboard.writer.SummaryWriter object at 0x7f63a1111e80>
dataset_type=real
drop_key=True
num_common_features=1
tree_radius=0.01
tree_leaf_size=1000
knn_k=30
grid_min=-10.0
grid_max=10.0
grid_width=1.5
sim_scaler=StandardScaler()
filter_top_k=30
link_n_jobs=1
psig_p=4
sim_leak_p=1.0
link_threshold_t=0.1
link_epsilon=0.1
n_hash_lsh=50
edit_distance_threshold=10
n_hash_func=50
collision_rate=0.01
qgram_q=4
link_delta=0.01
feature_wise_sim=False
blocking_method=knn_str
center_threshold=0.5
n_clusters=100
local_hidden_sizes=[[200], [200]]
cut_dims=[100, 100]
agg_hidden_sizes=[400]
scale_analysis=None
data1_shape=(349270, 91)
data2_shape=(63147, 519)
Epoch 1: Loss:            : Train 0.0000, Val 0.0571, Test 0.0574
          R2_Score         : Train -6.5201, Val -3.4155, Test -3.5626
          RMSE             : Train 27.6897, Val 21.2515, Test 21.2144
          MAE              : Train 25.3629, Val 18.2454, Test 18.2111
Best:
          R2_Score         : Train -6.5201, Val -3.4155, Test -3.5626
          RMSE             : Train 27.6897, Val 21.2515, Test 21.2144
          MAE              : Train 25.3629, Val 18.2454, Test 18.2111
Epoch 2: Loss:            : Train 0.0000, Val 0.0186, Test 0.0184
          R2_Score         : Train -1.7818, Val -0.4361, Test -0.4651
          RMSE             : Train 16.8412, Val 12.1197, Test 12.0214
          MAE              : Train 13.8713, Val 9.7435, Test 9.7186
Best:
          R2_Score         : Train -1.7818, Val -0.4361, Test -0.4651
          RMSE             : Train 16.8412, Val 12.1197, Test 12.0214
          MAE              : Train 13.8713, Val 9.7435, Test 9.7186
Epoch 3: Loss:            : Train 0.0000, Val 0.0122, Test 0.0117
          R2_Score         : Train -0.0742, Val 0.0546, Test 0.0556
          RMSE             : Train 10.4650, Val 9.8335, Test 9.6519
          MAE              : Train 7.8742, Val 7.2715, Test 7.2051
Best:
          R2_Score         : Train -0.0742, Val 0.0546, Test 0.0556
          RMSE             : Train 10.4650, Val 9.8335, Test 9.6519
          MAE              : Train 7.8742, Val 7.2715, Test 7.2051
Epoch 4: Loss:            : Train 0.0000, Val 0.0110, Test 0.0106
          R2_Score         : Train 0.1135, Val 0.1454, Test 0.1497
          RMSE             : Train 9.5071, Val 9.3494, Test 9.1585
          MAE              : Train 6.9715, Val 6.8260, Test 6.7497
Best:
          R2_Score         : Train 0.1135, Val 0.1454, Test 0.1497
          RMSE             : Train 9.5071, Val 9.3494, Test 9.1585
          MAE              : Train 6.9715, Val 6.8260, Test 6.7497
Epoch 5: Loss:            : Train 0.0000, Val 0.0102, Test 0.0098
          R2_Score         : Train 0.1928, Val 0.2073, Test 0.2130
          RMSE             : Train 9.0722, Val 9.0041, Test 8.8108
          MAE              : Train 6.5642, Val 6.4315, Test 6.3476
Best:
          R2_Score         : Train 0.1928, Val 0.2073, Test 0.2130
          RMSE             : Train 9.0722, Val 9.0041, Test 8.8108
          MAE              : Train 6.5642, Val 6.4315, Test 6.3476
Epoch 6: Loss:            : Train 0.0000, Val 0.0096, Test 0.0093
          R2_Score         : Train 0.2477, Val 0.2504, Test 0.2533
          RMSE             : Train 8.7582, Val 8.7563, Test 8.5823
          MAE              : Train 6.2418, Val 6.1708, Test 6.0996
Best:
          R2_Score         : Train 0.2477, Val 0.2504, Test 0.2533
          RMSE             : Train 8.7582, Val 8.7563, Test 8.5823
          MAE              : Train 6.2418, Val 6.1708, Test 6.0996
Epoch 7: Loss:            : Train 0.0000, Val 0.0093, Test 0.0090
          R2_Score         : Train 0.2822, Val 0.2752, Test 0.2765
          RMSE             : Train 8.5548, Val 8.6098, Test 8.4480
          MAE              : Train 6.0398, Val 6.0219, Test 5.9605
Best:
          R2_Score         : Train 0.2822, Val 0.2752, Test 0.2765
          RMSE             : Train 8.5548, Val 8.6098, Test 8.4480
          MAE              : Train 6.0398, Val 6.0219, Test 5.9605
Epoch 8: Loss:            : Train 0.0000, Val 0.0091, Test 0.0088
          R2_Score         : Train 0.3052, Val 0.2900, Test 0.2914
          RMSE             : Train 8.4168, Val 8.5219, Test 8.3604
          MAE              : Train 5.9167, Val 5.9323, Test 5.8734
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.44it/s]Train:  12%|█▏        | 7/60 [00:00<00:01, 29.17it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.50it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.32it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.56it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.51it/s]Train:  40%|████      | 24/60 [00:00<00:01, 24.04it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.56it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.36it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.53it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 23.50it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.06it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 22.88it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 25.67it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.50it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 24.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.30it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.40it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  6.98it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 28.04it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.24it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 38.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.02it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.38it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.26it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.45it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.91it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.79it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.46it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.28it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.88it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.60it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.09it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 25.51it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 28.54it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.00it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 28.95it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.23it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.86it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.51it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.92it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.93it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.35it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.57it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.83it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.82it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.20it/s]Train:  43%|████▎     | 26/60 [00:00<00:01, 28.59it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.88it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 28.94it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.14it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 29.10it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.29it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 29.22it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 26.28it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 24.65it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.01it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.19it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.69it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 39.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.02it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.71it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.35it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.67it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.36it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.53it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.47it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.24it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.47it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.72it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.73it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.13it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.19it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 25.51it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.94it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.84it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.19it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 34.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 17.27it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 35.55it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.04it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.47it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.48it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.44it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.36it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 20.77it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.55it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.62it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.58it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 22.82it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.79it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.66it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 26.38it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.39it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.81it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.68it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 21.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.19it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.54it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.03it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 19.73it/s]Train:  18%|█▊        | 11/60 [00:00<00:01, 25.95it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.18it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 28.09it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.57it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 28.63it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.01it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 29.05it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.25it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 29.17it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.32it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 29.23it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.49it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.86it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.45it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 44.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 43.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.86it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 29.69it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 30.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.22it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.22it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.51it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.20it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.90it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.46it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.85it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.85it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.13it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 29.14it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.35it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.69it/s]Train:  85%|████████▌ | 51/60 [00:01<00:00, 27.59it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.57it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.46it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.33it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.90it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.15it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.46it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.22it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.82it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.96it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.89it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.51it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.07it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.64it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.47it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.77it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.96it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.72it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.62it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.11it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.80it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.85it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.04it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.66it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.20it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 39.92it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.14it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.17it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.31it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.05it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 27.06it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.51it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.89it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.22it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.16it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.09it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.03it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 25.20it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 23.79it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.81it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.73it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.71it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 15.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.74it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.08it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 30.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.31it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.84it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.01it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.80it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.26it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.52it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.90it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.88it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 21.40it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.38it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.06it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.12it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.52it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 24.32it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.52it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.83it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.95it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.82it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.30it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.74it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.61it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.68it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.71it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.17it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.51it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.50it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.05it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 25.76it/s]Train:  40%|████      | 24/60 [00:01<00:01, 26.35it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.07it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.46it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.63it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.21it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 20.79it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 22.14it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 22.45it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 17.41it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 17.92it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 17.77it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 20.84it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 16.74it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.36it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 20.87it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 37.30it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.93it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.47it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.78it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 22.59it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.06it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.36it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 19.04it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.50it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.22it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.74it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.08it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.00it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.88it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.73it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.70it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 26.67it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.63it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.08it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.88it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 44.30it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.76it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 42.76it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.97it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.32it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 21.97it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.01it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.25it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.08it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.44it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.10it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.42it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.86it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.03it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 22.30it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.78it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.04it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.86it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.11it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.11it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.22it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.43it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.71it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.26it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.58it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.98it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.20it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.60it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.70it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.57it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.28it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 21.83it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.73it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.01it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.63it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.05it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.38it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.71it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.03it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.92it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.66it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.40it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.39it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.81it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 38.30it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 32.11it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.40it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 18.27it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.26it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.64it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.59it/s]Train:  32%|███▏      | 19/60 [00:00<00:02, 20.07it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.59it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.50it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.00it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.37it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.60it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 21.63it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.38it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 20.48it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.21it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.73it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 20.16it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.65it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.52it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 39.65it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.50it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 38.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.04it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.57it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.39it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.52it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.69it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.86it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.94it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.50it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.67it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.42it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.08it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.28it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.87it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.70it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.25it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.00it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.47it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.84it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.54it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 42.60it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.20it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.02it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.54it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.48it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.49it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.73it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.00it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.13it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.21it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.41it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 21.36it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.32it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 21.07it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 23.74it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.68it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 21.63it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.22it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 15.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.69it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.31it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.24it/s]
Best:
          R2_Score         : Train 0.3052, Val 0.2900, Test 0.2914
          RMSE             : Train 8.4168, Val 8.5219, Test 8.3604
          MAE              : Train 5.9167, Val 5.9323, Test 5.8734
Epoch 9: Loss:            : Train 0.0000, Val 0.0090, Test 0.0087
          R2_Score         : Train 0.3210, Val 0.3004, Test 0.3025
          RMSE             : Train 8.3205, Val 8.4588, Test 8.2949
          MAE              : Train 5.8372, Val 5.8156, Test 5.7593
Best:
          R2_Score         : Train 0.3210, Val 0.3004, Test 0.3025
          RMSE             : Train 8.3205, Val 8.4588, Test 8.2949
          MAE              : Train 5.8372, Val 5.8156, Test 5.7593
Epoch 10: Loss:            : Train 0.0000, Val 0.0089, Test 0.0086
          R2_Score         : Train 0.3333, Val 0.3064, Test 0.3077
          RMSE             : Train 8.2445, Val 8.4228, Test 8.2636
          MAE              : Train 5.7723, Val 5.9205, Test 5.8635
Best:
          R2_Score         : Train 0.3333, Val 0.3064, Test 0.3077
          RMSE             : Train 8.2445, Val 8.4228, Test 8.2636
          MAE              : Train 5.7723, Val 5.9205, Test 5.8635
Epoch 11: Loss:            : Train 0.0000, Val 0.0089, Test 0.0086
          R2_Score         : Train 0.3428, Val 0.3110, Test 0.3145
          RMSE             : Train 8.1855, Val 8.3945, Test 8.2229
          MAE              : Train 5.7300, Val 5.7785, Test 5.7168
Best:
          R2_Score         : Train 0.3428, Val 0.3110, Test 0.3145
          RMSE             : Train 8.1855, Val 8.3945, Test 8.2229
          MAE              : Train 5.7300, Val 5.7785, Test 5.7168
Epoch 12: Loss:            : Train 0.0000, Val 0.0088, Test 0.0085
          R2_Score         : Train 0.3504, Val 0.3155, Test 0.3171
          RMSE             : Train 8.1380, Val 8.3675, Test 8.2075
          MAE              : Train 5.6942, Val 5.8011, Test 5.7451
Best:
          R2_Score         : Train 0.3504, Val 0.3155, Test 0.3171
          RMSE             : Train 8.1380, Val 8.3675, Test 8.2075
          MAE              : Train 5.6942, Val 5.8011, Test 5.7451
Epoch 13: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.3566, Val 0.3136, Test 0.3149
          RMSE             : Train 8.0992, Val 8.3791, Test 8.2206
          MAE              : Train 5.6696, Val 5.8969, Test 5.8325
Best:
          R2_Score         : Train 0.3504, Val 0.3155, Test 0.3171
          RMSE             : Train 8.1380, Val 8.3675, Test 8.2075
          MAE              : Train 5.6942, Val 5.8011, Test 5.7451
Epoch 14: Loss:            : Train 0.0000, Val 0.0088, Test 0.0085
          R2_Score         : Train 0.3627, Val 0.3181, Test 0.3177
          RMSE             : Train 8.0611, Val 8.3516, Test 8.2036
          MAE              : Train 5.6405, Val 5.7535, Test 5.6937
Best:
          R2_Score         : Train 0.3627, Val 0.3181, Test 0.3177
          RMSE             : Train 8.0611, Val 8.3516, Test 8.2036
          MAE              : Train 5.6405, Val 5.7535, Test 5.6937
Epoch 15: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3677, Val 0.3201, Test 0.3222
          RMSE             : Train 8.0290, Val 8.3392, Test 8.1764
          MAE              : Train 5.6195, Val 5.7459, Test 5.6849
Best:
          R2_Score         : Train 0.3677, Val 0.3201, Test 0.3222
          RMSE             : Train 8.0290, Val 8.3392, Test 8.1764
          MAE              : Train 5.6195, Val 5.7459, Test 5.6849
Epoch 16: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3728, Val 0.3195, Test 0.3196
          RMSE             : Train 7.9969, Val 8.3426, Test 8.1923
          MAE              : Train 5.5979, Val 5.8063, Test 5.7474
Best:
          R2_Score         : Train 0.3677, Val 0.3201, Test 0.3222
          RMSE             : Train 8.0290, Val 8.3392, Test 8.1764
          MAE              : Train 5.6195, Val 5.7459, Test 5.6849
Epoch 17: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3774, Val 0.3200, Test 0.3198
          RMSE             : Train 7.9675, Val 8.3395, Test 8.1914
          MAE              : Train 5.5782, Val 5.8418, Test 5.7803
Best:
          R2_Score         : Train 0.3677, Val 0.3201, Test 0.3222
          RMSE             : Train 8.0290, Val 8.3392, Test 8.1764
          MAE              : Train 5.6195, Val 5.7459, Test 5.6849
Epoch 18: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 19: Loss:            : Train 0.0000, Val 0.0088, Test 0.0085
          R2_Score         : Train 0.3866, Val 0.3176, Test 0.3169
          RMSE             : Train 7.9085, Val 8.3542, Test 8.2085
          MAE              : Train 5.5436, Val 5.7989, Test 5.7403
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 20: Loss:            : Train 0.0000, Val 0.0088, Test 0.0085
          R2_Score         : Train 0.3911, Val 0.3192, Test 0.3180
          RMSE             : Train 7.8793, Val 8.3444, Test 8.2017
          MAE              : Train 5.5283, Val 5.8025, Test 5.7491
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 21: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3945, Val 0.3198, Test 0.3193
          RMSE             : Train 7.8569, Val 8.3409, Test 8.1944
          MAE              : Train 5.5122, Val 5.7091, Test 5.6587
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 22: Loss:            : Train 0.0000, Val 0.0088, Test 0.0085
          R2_Score         : Train 0.3988, Val 0.3195, Test 0.3187
          RMSE             : Train 7.8291, Val 8.3425, Test 8.1979
          MAE              : Train 5.4939, Val 5.7369, Test 5.6830
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 23: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.4031, Val 0.3206, Test 0.3178
          RMSE             : Train 7.8010, Val 8.3360, Test 8.2033
          MAE              : Train 5.4804, Val 5.7270, Test 5.6794
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 24: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4071, Val 0.3183, Test 0.3158
          RMSE             : Train 7.7751, Val 8.3499, Test 8.2153
          MAE              : Train 5.4567, Val 5.8152, Test 5.7574
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 25: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4112, Val 0.3177, Test 0.3157
          RMSE             : Train 7.7480, Val 8.3538, Test 8.2160
          MAE              : Train 5.4449, Val 5.7544, Test 5.7032
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.96it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.03it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.15it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.60it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.50it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.87it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.19it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.34it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.89it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.75it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.70it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 22.24it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.27it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 25.16it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.35it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 25.52it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.87it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.56it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.06it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.18it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 42.40it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.37it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.67it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.92it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.26it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.68it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.27it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.24it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 25.93it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.00it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.00it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.62it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.96it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.77it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.06it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 23.15it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.38it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.08it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.76it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.32it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.27it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 39.45it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.11it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.27it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.27it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.47it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.42it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.58it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.91it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.43it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.20it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.20it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.98it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 29.02it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 25.32it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.25it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.38it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.99it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.76it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.06it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.08it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 40.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.40it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.49it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.32it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.76it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.62it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.38it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 28.07it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.60it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 28.11it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.24it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.39it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.94it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.41it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 22.42it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.51it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.71it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 21.82it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.03it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.91it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.23it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.03it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.41it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.46it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 21.85it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.83it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 21.73it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.09it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 21.56it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.89it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 19.78it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.71it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 20.54it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 23.92it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.56it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.33it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 22.24it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.47it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.11it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.63it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 42.93it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.65it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.10it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.15it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.94it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.43it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.13it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.04it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.05it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.66it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.66it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.58it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.40it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 23.37it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.42it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.82it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.66it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.64it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.45it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.83it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 40.07it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.23it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.35it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.41it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.36it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.18it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.46it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.58it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.47it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.43it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.62it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.97it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.97it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.03it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 22.64it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.01it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.26it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.78it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.40it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.91it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.99it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.26it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 19.01it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 23.00it/s]Train:  18%|█▊        | 11/60 [00:00<00:03, 15.75it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 18.44it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 19.56it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 15.99it/s]Train:  40%|████      | 24/60 [00:01<00:01, 19.62it/s]Train:  45%|████▌     | 27/60 [00:01<00:02, 15.87it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 18.38it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 16.87it/s]Train:  62%|██████▏   | 37/60 [00:02<00:01, 20.29it/s]Train:  67%|██████▋   | 40/60 [00:02<00:01, 18.06it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 21.42it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 18.81it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.22it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 19.82it/s]Train:  97%|█████████▋| 58/60 [00:03<00:00, 22.55it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 19.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 16.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.93it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.98it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.32it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.60it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.84it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.91it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.96it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.46it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.83it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.33it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 22.64it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.59it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.32it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.54it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.28it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.57it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 22.47it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 25.61it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.97it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.68it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.69it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 40.17it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.61it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.93it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.79it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.18it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.63it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.27it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.18it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 25.89it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.06it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.25it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.60it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.02it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.98it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 21.17it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.40it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.88it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.06it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.85it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.31it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.23it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.63it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.93it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.69it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 18.37it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.20it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.20it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.12it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 21.38it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.39it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 21.32it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.88it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.57it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.56it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 22.39it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 25.50it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.92it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.88it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.88it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 44.00it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.02it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.64it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.95it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.46it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 23.28it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.72it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 27.00it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.28it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 28.16it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.57it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 28.84it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.19it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 28.43it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.68it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.48it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 21.66it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.99it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 23.74it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 21.78it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 16.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.99it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.66it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.58it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.71it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.12it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.20it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.40it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.46it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.85it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.33it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.45it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.95it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.26it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.17it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 20.35it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 22.28it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 23.57it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 20.74it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.03it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 19.81it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.70it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.12it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 37.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.36it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.17it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.55it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.46it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 20.46it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.24it/s]Train:  40%|████      | 24/60 [00:01<00:01, 25.60it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 21.67it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 24.55it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 21.31it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.02it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 20.96it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 22.66it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 20.38it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.65it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.10it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.54it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.05it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.73it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.05it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.12it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.55it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.99it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 19.48it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 21.98it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 19.84it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.67it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 21.05it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.25it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.09it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.42it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 22.38it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 25.27it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.31it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.12it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.92it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.94it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.30it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 37.57it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.89it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.52it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.42it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.83it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.95it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.68it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.85it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.74it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 21.06it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.30it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 21.92it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.89it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 23.90it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 19.10it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 20.23it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 19.64it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 22.75it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 14.43it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.49it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.85it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.80it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 28.87it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.10it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.96it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.28it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.65it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.96it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 21.34it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.62it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.12it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.72it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.59it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.10it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 20.65it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 21.02it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 22.82it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 19.79it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.74it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 19.92it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.68it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.63it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.86it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.95it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.88it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.79it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 18.35it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.07it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 20.19it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 23.61it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.93it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.73it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.26it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.83it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.24it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 20.39it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 23.16it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 19.94it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.97it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 20.20it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.11it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.69it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.08it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.66it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.57it/s]
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 26: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4152, Val 0.3167, Test 0.3140
          RMSE             : Train 7.7217, Val 8.3597, Test 8.2262
          MAE              : Train 5.4291, Val 5.7955, Test 5.7451
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 27: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4196, Val 0.3172, Test 0.3130
          RMSE             : Train 7.6927, Val 8.3569, Test 8.2319
          MAE              : Train 5.4074, Val 5.7696, Test 5.7201
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 28: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4230, Val 0.3124, Test 0.3072
          RMSE             : Train 7.6701, Val 8.3860, Test 8.2668
          MAE              : Train 5.3931, Val 5.7956, Test 5.7526
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 29: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4276, Val 0.3147, Test 0.3093
          RMSE             : Train 7.6392, Val 8.3720, Test 8.2539
          MAE              : Train 5.3761, Val 5.7458, Test 5.6996
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 30: Loss:            : Train 0.0000, Val 0.0089, Test 0.0087
          R2_Score         : Train 0.4315, Val 0.3093, Test 0.3030
          RMSE             : Train 7.6134, Val 8.4051, Test 8.2919
          MAE              : Train 5.3569, Val 5.8270, Test 5.7863
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 31: Loss:            : Train 0.0000, Val 0.0089, Test 0.0087
          R2_Score         : Train 0.4359, Val 0.3071, Test 0.3044
          RMSE             : Train 7.5839, Val 8.4182, Test 8.2831
          MAE              : Train 5.3380, Val 5.7811, Test 5.7309
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 32: Loss:            : Train 0.0000, Val 0.0089, Test 0.0087
          R2_Score         : Train 0.4401, Val 0.3056, Test 0.3025
          RMSE             : Train 7.5555, Val 8.4277, Test 8.2948
          MAE              : Train 5.3172, Val 5.8073, Test 5.7588
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 33: Loss:            : Train 0.0000, Val 0.0089, Test 0.0087
          R2_Score         : Train 0.4438, Val 0.3050, Test 0.3001
          RMSE             : Train 7.5303, Val 8.4312, Test 8.3088
          MAE              : Train 5.3015, Val 5.8233, Test 5.7710
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 34: Loss:            : Train 0.0000, Val 0.0090, Test 0.0087
          R2_Score         : Train 0.4475, Val 0.3036, Test 0.3004
          RMSE             : Train 7.5051, Val 8.4395, Test 8.3071
          MAE              : Train 5.2887, Val 5.7574, Test 5.7091
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 35: Loss:            : Train 0.0000, Val 0.0090, Test 0.0088
          R2_Score         : Train 0.4509, Val 0.3007, Test 0.2950
          RMSE             : Train 7.4825, Val 8.4573, Test 8.3389
          MAE              : Train 5.2652, Val 5.8469, Test 5.7988
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 36: Loss:            : Train 0.0000, Val 0.0090, Test 0.0088
          R2_Score         : Train 0.4558, Val 0.3001, Test 0.2928
          RMSE             : Train 7.4490, Val 8.4609, Test 8.3523
          MAE              : Train 5.2482, Val 5.8431, Test 5.8043
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 37: Loss:            : Train 0.0000, Val 0.0090, Test 0.0088
          R2_Score         : Train 0.4588, Val 0.3011, Test 0.2966
          RMSE             : Train 7.4285, Val 8.4547, Test 8.3297
          MAE              : Train 5.2356, Val 5.7732, Test 5.7269
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 38: Loss:            : Train 0.0000, Val 0.0091, Test 0.0089
          R2_Score         : Train 0.4632, Val 0.2906, Test 0.2863
          RMSE             : Train 7.3978, Val 8.5179, Test 8.3907
          MAE              : Train 5.2130, Val 5.8523, Test 5.8067
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 39: Loss:            : Train 0.0000, Val 0.0090, Test 0.0088
          R2_Score         : Train 0.4671, Val 0.2981, Test 0.2916
          RMSE             : Train 7.3707, Val 8.4729, Test 8.3591
          MAE              : Train 5.1959, Val 5.8069, Test 5.7686
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 40: Loss:            : Train 0.0000, Val 0.0092, Test 0.0090
          R2_Score         : Train 0.4712, Val 0.2881, Test 0.2795
          RMSE             : Train 7.3426, Val 8.5334, Test 8.4306
          MAE              : Train 5.1797, Val 5.8921, Test 5.8562
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 41: Loss:            : Train 0.0000, Val 0.0091, Test 0.0089
          R2_Score         : Train 0.4738, Val 0.2921, Test 0.2848
          RMSE             : Train 7.3249, Val 8.5093, Test 8.3994
          MAE              : Train 5.1647, Val 5.8260, Test 5.7882
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 42: Loss:            : Train 0.0000, Val 0.0091, Test 0.0089
          R2_Score         : Train 0.4777, Val 0.2914, Test 0.2848
          RMSE             : Train 7.2974, Val 8.5134, Test 8.3992
          MAE              : Train 5.1449, Val 5.8343, Test 5.7934
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 43: Loss:            : Train 0.0000, Val 0.0091, Test 0.0089
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.33it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.28it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.72it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.67it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 20.65it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.67it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 20.51it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.12it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 20.63it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.26it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.16it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 19.33it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 21.02it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 19.01it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.09it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 20.52it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 22.29it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.61it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.19it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 27.44it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.10it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.95it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.39it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.21it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.58it/s]Train:  20%|██        | 12/60 [00:00<00:02, 18.11it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.36it/s]Train:  30%|███       | 18/60 [00:00<00:02, 18.44it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 20.56it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 18.66it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 20.34it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.62it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 20.85it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.13it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 21.36it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 22.84it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 19.62it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.04it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.90it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.98it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.51it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.06it/s]Train:  10%|█         | 6/60 [00:00<00:03, 14.24it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 18.65it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 17.74it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 19.73it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 21.97it/s]Train:  37%|███▋      | 22/60 [00:01<00:02, 18.35it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.72it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 18.10it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 21.87it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 20.13it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.02it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 20.91it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 22.39it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.54it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 21.29it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.34it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.76it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.09it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.87it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.27it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 40.44it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.50it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.47it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.29it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.09it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.57it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 20.36it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.78it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.78it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 21.74it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.01it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 21.85it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.98it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 22.28it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 25.18it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.31it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.16it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.19it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.33it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.99it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.56it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.08it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.22it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.76it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 23.84it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 21.74it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.87it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 22.65it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 25.91it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.46it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.36it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.27it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.22it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 22.02it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 24.31it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 20.68it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 22.17it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.62it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.23it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:07,  8.10it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 14.21it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 18.78it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 16.66it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 18.78it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 21.47it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 18.22it/s]Train:  40%|████      | 24/60 [00:01<00:01, 22.48it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 20.65it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 24.16it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 21.31it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.51it/s]Train:  68%|██████▊   | 41/60 [00:02<00:00, 22.23it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 25.69it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.71it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.80it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.21it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 16.98it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.88it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.29it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.78it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.65it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.69it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.63it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.59it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 18.88it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.26it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 21.66it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.78it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.42it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 21.80it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 22.83it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 20.13it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.91it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 21.34it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 22.94it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 23.31it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 19.69it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.65it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.44it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.79it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.32it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 25.36it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.86it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.82it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.86it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.12it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.21it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 20.44it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.50it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.81it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 20.09it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.81it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 19.90it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.74it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 19.76it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 21.81it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 19.45it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 20.40it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 23.35it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 20.49it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 16.76it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.25it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 20.92it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 33.88it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 28.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.63it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.26it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.82it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.97it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.57it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.62it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.11it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.97it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.93it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.32it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.03it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 22.92it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.09it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.46it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.21it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 25.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.72it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.19it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.48it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.61it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.16it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.46it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.02it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.40it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.53it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.92it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.06it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.04it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.61it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.07it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.72it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 21.22it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 24.73it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 20.81it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 21.98it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 19.45it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.03it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.86it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.91it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.49it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.92it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.22it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.83it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.34it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.77it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.24it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.87it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.61it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.50it/s]Train:  40%|████      | 24/60 [00:01<00:01, 22.47it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.57it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 21.18it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.86it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.15it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.05it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 21.50it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 22.57it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.24it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.52it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 22.26it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.39it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 27.82it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 23.48it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 29.33it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.61it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.05it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 17.50it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.06it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.48it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.63it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 20.96it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.93it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.39it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.54it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.82it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.66it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 21.83it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.41it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 21.48it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.63it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.32it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 19.76it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 21.46it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.93it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.92it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.99it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.67it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.53it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.72it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 18.30it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.37it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.21it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.12it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 19.68it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.31it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 21.41it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.77it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.79it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.31it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.97it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 21.36it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 23.47it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 20.80it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 23.85it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 21.20it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.66it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.75it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 39.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.08it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:07,  7.43it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 14.69it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.52it/s]Train:  20%|██        | 12/60 [00:00<00:02, 18.72it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.70it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 19.49it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.44it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.09it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.70it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 19.67it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.44it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 21.47it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 24.91it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 22.12it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 22.71it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.13it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.15it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.21it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.66it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.17it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.66it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.70it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.38it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.19it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.09it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.11it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.17it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.60it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.80it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.48it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.59it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.01it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.65it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.50it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.49it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.64it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.30it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.07it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.82it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.35it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 45.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.34it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.60it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.68it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.10it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 17.89it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.98it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.80it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 22.20it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.51it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 23.06it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 19.68it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.94it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.01it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.38it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 20.24it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 21.98it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 23.47it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 20.25it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.17it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 20.21it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.85it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.30it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.22it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.09it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.54it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.02it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.53it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.85it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.51it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.33it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.42it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.51it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.86it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.39it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 21.46it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.64it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 21.29it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 24.16it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 20.12it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 22.96it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 20.60it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 23.88it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 21.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.23it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.33it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.06it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.12it/s]
          R2_Score         : Train 0.4814, Val 0.2928, Test 0.2864
          RMSE             : Train 7.2718, Val 8.5048, Test 8.3900
          MAE              : Train 5.1327, Val 5.8133, Test 5.7757
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 44: Loss:            : Train 0.0000, Val 0.0093, Test 0.0091
          R2_Score         : Train 0.4849, Val 0.2805, Test 0.2748
          RMSE             : Train 7.2468, Val 8.5784, Test 8.4575
          MAE              : Train 5.1101, Val 5.8606, Test 5.8206
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 45: Loss:            : Train 0.0000, Val 0.0091, Test 0.0090
          R2_Score         : Train 0.4878, Val 0.2897, Test 0.2814
          RMSE             : Train 7.2268, Val 8.5236, Test 8.4191
          MAE              : Train 5.1027, Val 5.7769, Test 5.7417
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 46: Loss:            : Train 0.0000, Val 0.0093, Test 0.0091
          R2_Score         : Train 0.4922, Val 0.2769, Test 0.2721
          RMSE             : Train 7.1950, Val 8.6002, Test 8.4735
          MAE              : Train 5.0792, Val 5.8412, Test 5.8005
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 47: Loss:            : Train 0.0000, Val 0.0093, Test 0.0091
          R2_Score         : Train 0.4952, Val 0.2794, Test 0.2708
          RMSE             : Train 7.1740, Val 8.5853, Test 8.4811
          MAE              : Train 5.0657, Val 5.8213, Test 5.7975
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 48: Loss:            : Train 0.0000, Val 0.0092, Test 0.0090
          R2_Score         : Train 0.4981, Val 0.2841, Test 0.2749
          RMSE             : Train 7.1536, Val 8.5573, Test 8.4572
          MAE              : Train 5.0544, Val 5.7473, Test 5.7236
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 49: Loss:            : Train 0.0000, Val 0.0093, Test 0.0092
          R2_Score         : Train 0.5022, Val 0.2750, Test 0.2630
          RMSE             : Train 7.1239, Val 8.6111, Test 8.5265
          MAE              : Train 5.0333, Val 5.8390, Test 5.8210
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 50: Loss:            : Train 0.0000, Val 0.0094, Test 0.0092
          R2_Score         : Train 0.5057, Val 0.2728, Test 0.2640
          RMSE             : Train 7.0990, Val 8.6243, Test 8.5206
          MAE              : Train 5.0181, Val 5.8726, Test 5.8412
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 51: Loss:            : Train 0.0000, Val 0.0095, Test 0.0093
          R2_Score         : Train 0.5086, Val 0.2608, Test 0.2507
          RMSE             : Train 7.0782, Val 8.6952, Test 8.5971
          MAE              : Train 5.0072, Val 5.9036, Test 5.8804
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 52: Loss:            : Train 0.0000, Val 0.0095, Test 0.0092
          R2_Score         : Train 0.5121, Val 0.2650, Test 0.2580
          RMSE             : Train 7.0531, Val 8.6705, Test 8.5551
          MAE              : Train 4.9882, Val 5.8462, Test 5.8157
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 53: Loss:            : Train 0.0000, Val 0.0097, Test 0.0095
          R2_Score         : Train 0.5147, Val 0.2476, Test 0.2378
          RMSE             : Train 7.0341, Val 8.7722, Test 8.6710
          MAE              : Train 4.9789, Val 5.9760, Test 5.9512
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 54: Loss:            : Train 0.0000, Val 0.0095, Test 0.0094
          R2_Score         : Train 0.5171, Val 0.2573, Test 0.2477
          RMSE             : Train 7.0166, Val 8.7155, Test 8.6141
          MAE              : Train 4.9634, Val 5.9232, Test 5.8998
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 55: Loss:            : Train 0.0000, Val 0.0095, Test 0.0093
          R2_Score         : Train 0.5218, Val 0.2633, Test 0.2512
          RMSE             : Train 6.9825, Val 8.6803, Test 8.5943
          MAE              : Train 4.9435, Val 5.9137, Test 5.8898
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 56: Loss:            : Train 0.0000, Val 0.0096, Test 0.0094
          R2_Score         : Train 0.5241, Val 0.2556, Test 0.2456
          RMSE             : Train 6.9657, Val 8.7257, Test 8.6261
          MAE              : Train 4.9341, Val 5.8224, Test 5.8090
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 57: Loss:            : Train 0.0000, Val 0.0095, Test 0.0093
          R2_Score         : Train 0.5272, Val 0.2576, Test 0.2508
          RMSE             : Train 6.9433, Val 8.7142, Test 8.5965
          MAE              : Train 4.9202, Val 5.8313, Test 5.8011
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 58: Loss:            : Train 0.0000, Val 0.0096, Test 0.0094
          R2_Score         : Train 0.5297, Val 0.2527, Test 0.2425
          RMSE             : Train 6.9245, Val 8.7426, Test 8.6440
          MAE              : Train 4.9064, Val 5.8774, Test 5.8638
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 59: Loss:            : Train 0.0000, Val 0.0095, Test 0.0093
          R2_Score         : Train 0.5329, Val 0.2618, Test 0.2508
          RMSE             : Train 6.9014, Val 8.6891, Test 8.5967
          MAE              : Train 4.8883, Val 5.8330, Test 5.8182
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 60: Loss:            : Train 0.0000, Val 0.0098, Test 0.0095
          R2_Score         : Train 0.5361, Val 0.2410, Test 0.2335
          RMSE             : Train 6.8777, Val 8.8106, Test 8.6955
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.22it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.45it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.70it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.04it/s]Train:  30%|███       | 18/60 [00:00<00:02, 20.59it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.38it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.30it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.13it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.31it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.64it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.19it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 25.77it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.71it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.18it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.08it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.51it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.46it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.02it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.94it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 13.23it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 19.25it/s]Train:  12%|█▏        | 7/60 [00:00<00:03, 15.35it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.98it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 17.83it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.72it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 18.92it/s]Train:  40%|████      | 24/60 [00:01<00:01, 21.15it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.05it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 19.19it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.40it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 19.35it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.55it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 20.27it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 21.50it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.29it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 20.69it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 23.87it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.21it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.20it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.55it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.39it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.75it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.36it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 18.91it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.38it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 20.06it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.67it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.99it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.80it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 19.74it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.15it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.12it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 20.37it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 23.36it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 19.75it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.65it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 20.57it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.06it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 24.44it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.95it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.29it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.37it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.85it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.64it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.63it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.40it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.59it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 20.59it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.69it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.41it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 19.24it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 20.74it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 18.18it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 21.58it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 18.98it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 20.54it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.56it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 18.85it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 19.71it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 17.00it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.83it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 39.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 38.73it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 41.63it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.53it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  8.68it/s]Train:   3%|▎         | 2/60 [00:00<00:07,  7.52it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 15.52it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.81it/s]Train:  20%|██        | 12/60 [00:00<00:02, 16.57it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 18.25it/s]Train:  30%|███       | 18/60 [00:01<00:02, 16.34it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 18.93it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 18.45it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 21.39it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 19.41it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 20.71it/s]Train:  65%|██████▌   | 39/60 [00:02<00:01, 20.30it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 23.40it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 20.67it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 22.57it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.21it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 20.95it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.48it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 13.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.95it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.51it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.58it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.66it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.86it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.00it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.64it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.44it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.50it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 24.23it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 21.36it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.70it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 21.65it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.91it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 21.18it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.36it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 20.73it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 24.02it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 20.73it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.20it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 24.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.83it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 40.32it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.32it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.68it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.11it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 18.11it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 24.06it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.00it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.76it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.55it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 23.36it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.35it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 21.39it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.19it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 21.14it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.55it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 21.34it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 24.11it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 20.46it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.27it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 20.56it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.55it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.19it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.45it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.70it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.22it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.07it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.55it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.11it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.58it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.50it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.76it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.40it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 19.44it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.26it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 21.82it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.00it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 22.42it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 25.36it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.45it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.88it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.48it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.42it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.45it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:03, 15.92it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 24.94it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.30it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.80it/s]Train:  30%|███       | 18/60 [00:00<00:02, 20.41it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 23.95it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 19.87it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.55it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.23it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 21.48it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.71it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 21.87it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.34it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 20.79it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.16it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.03it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 21.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.96it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.30it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 17.87it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 33.24it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 31.20it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.33it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.04it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.50it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.24it/s]Train:  20%|██        | 12/60 [00:00<00:02, 23.11it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 19.16it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.10it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 20.05it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.32it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 18.77it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 20.27it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 21.89it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 19.36it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 22.24it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 19.62it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 20.95it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 19.01it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 21.01it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 19.69it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.18it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.05it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.03it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.84it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 17.01it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.48it/s]Train:  20%|██        | 12/60 [00:00<00:02, 18.79it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.16it/s]Train:  32%|███▏      | 19/60 [00:00<00:02, 20.10it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 22.27it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 18.58it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 20.71it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 18.95it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 20.53it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.14it/s]Train:  68%|██████▊   | 41/60 [00:02<00:00, 19.33it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 20.92it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 18.17it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.32it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 19.76it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 21.56it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.56it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.84it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.04it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.70it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.04it/s]Train:  10%|█         | 6/60 [00:00<00:03, 14.79it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.18it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 23.09it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 18.84it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 20.99it/s]Train:  37%|███▋      | 22/60 [00:01<00:02, 18.82it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.44it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 20.34it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.41it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 20.67it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.88it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 21.78it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 24.74it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.87it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.04it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.60it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.58it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.69it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.85it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.53it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.46it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.37it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.09it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.98it/s]Train:  30%|███       | 18/60 [00:00<00:02, 18.63it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 22.77it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.25it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.24it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 20.54it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.81it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 20.98it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 22.47it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 20.27it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.95it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 20.90it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.89it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.88it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 16.66it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 28.77it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 29.87it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 29.17it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.64it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.65it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.42it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 21.73it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.25it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.24it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.47it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 20.75it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.23it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 21.49it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.69it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 22.09it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 23.98it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.68it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.69it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.68it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.30it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.26it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 42.61it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.57it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.16it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 17.17it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.60it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 17.42it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 19.99it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 17.53it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 20.89it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 19.73it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.64it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.31it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.09it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 21.50it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 24.06it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 21.09it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.35it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.88it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.04it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.53it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.48it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.73it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.32it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.44it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.04it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.17it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.33it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.54it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.57it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.52it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.11it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.30it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.52it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.52it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.42it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.40it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.39it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.38it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.76it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 42.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.16it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.34it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.88it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.77it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.05it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.63it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.31it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.93it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.10it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.34it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.64it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.48it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.39it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 25.30it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 21.06it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.11it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 19.82it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 21.32it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.01it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.64it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.14it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 29.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.37it/s]
          MAE              : Train 4.8779, Val 5.9703, Test 5.9457
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 61: Loss:            : Train 0.0000, Val 0.0096, Test 0.0094
          R2_Score         : Train 0.5384, Val 0.2543, Test 0.2425
          RMSE             : Train 6.8602, Val 8.7335, Test 8.6441
          MAE              : Train 4.8677, Val 5.8317, Test 5.8140
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 62: Loss:            : Train 0.0000, Val 0.0097, Test 0.0095
          R2_Score         : Train 0.5414, Val 0.2460, Test 0.2376
          RMSE             : Train 6.8376, Val 8.7816, Test 8.6720
          MAE              : Train 4.8547, Val 5.8713, Test 5.8505
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 63: Loss:            : Train 0.0000, Val 0.0098, Test 0.0095
          R2_Score         : Train 0.5443, Val 0.2411, Test 0.2321
          RMSE             : Train 6.8163, Val 8.8105, Test 8.7031
          MAE              : Train 4.8341, Val 5.9269, Test 5.9118
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 64: Loss:            : Train 0.0000, Val 0.0096, Test 0.0095
          R2_Score         : Train 0.5465, Val 0.2493, Test 0.2380
          RMSE             : Train 6.8000, Val 8.7623, Test 8.6695
          MAE              : Train 4.8258, Val 5.8682, Test 5.8564
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 65: Loss:            : Train 0.0000, Val 0.0099, Test 0.0097
          R2_Score         : Train 0.5495, Val 0.2303, Test 0.2218
          RMSE             : Train 6.7776, Val 8.8728, Test 8.7614
          MAE              : Train 4.8125, Val 5.9670, Test 5.9458
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 66: Loss:            : Train 0.0000, Val 0.0098, Test 0.0096
          R2_Score         : Train 0.5522, Val 0.2368, Test 0.2250
          RMSE             : Train 6.7569, Val 8.8351, Test 8.7436
          MAE              : Train 4.7986, Val 5.8849, Test 5.8752
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 67: Loss:            : Train 0.0000, Val 0.0097, Test 0.0095
          R2_Score         : Train 0.5555, Val 0.2468, Test 0.2381
          RMSE             : Train 6.7321, Val 8.7771, Test 8.6690
          MAE              : Train 4.7847, Val 5.8489, Test 5.8329
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 68: Loss:            : Train 0.0000, Val 0.0098, Test 0.0096
          R2_Score         : Train 0.5580, Val 0.2365, Test 0.2241
          RMSE             : Train 6.7132, Val 8.8371, Test 8.7483
          MAE              : Train 4.7739, Val 5.8776, Test 5.8711
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 69: Loss:            : Train 0.0000, Val 0.0100, Test 0.0099
          R2_Score         : Train 0.5609, Val 0.2182, Test 0.2039
          RMSE             : Train 6.6910, Val 8.9420, Test 8.8615
          MAE              : Train 4.7580, Val 5.9854, Test 5.9729
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 70: Loss:            : Train 0.0000, Val 0.0099, Test 0.0097
          R2_Score         : Train 0.5636, Val 0.2319, Test 0.2201
          RMSE             : Train 6.6704, Val 8.8634, Test 8.7708
          MAE              : Train 4.7456, Val 5.9227, Test 5.9097
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 71: Loss:            : Train 0.0000, Val 0.0101, Test 0.0099
          R2_Score         : Train 0.5658, Val 0.2153, Test 0.2011
          RMSE             : Train 6.6538, Val 8.9587, Test 8.8773
          MAE              : Train 4.7336, Val 6.0248, Test 6.0174
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 72: Loss:            : Train 0.0000, Val 0.0101, Test 0.0099
          R2_Score         : Train 0.5687, Val 0.2155, Test 0.2002
          RMSE             : Train 6.6314, Val 8.9578, Test 8.8822
          MAE              : Train 4.7193, Val 5.9802, Test 5.9781
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 73: Loss:            : Train 0.0000, Val 0.0101, Test 0.0099
          R2_Score         : Train 0.5709, Val 0.2165, Test 0.2036
          RMSE             : Train 6.6141, Val 8.9521, Test 8.8632
          MAE              : Train 4.7093, Val 5.9562, Test 5.9493
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 74: Loss:            : Train 0.0000, Val 0.0102, Test 0.0100
          R2_Score         : Train 0.5728, Val 0.2026, Test 0.1897
          RMSE             : Train 6.5995, Val 9.0312, Test 8.9401
          MAE              : Train 4.6891, Val 6.0930, Test 6.0885
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 75: Loss:            : Train 0.0000, Val 0.0100, Test 0.0099
          R2_Score         : Train 0.5748, Val 0.2197, Test 0.2048
          RMSE             : Train 6.5845, Val 8.9339, Test 8.8567
          MAE              : Train 4.6885, Val 5.9386, Test 5.9353
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 76: Loss:            : Train 0.0000, Val 0.0100, Test 0.0098
          R2_Score         : Train 0.5776, Val 0.2187, Test 0.2066
          RMSE             : Train 6.5628, Val 8.9396, Test 8.8467
          MAE              : Train 4.6697, Val 5.9314, Test 5.9255
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 77: Loss:            : Train 0.0000, Val 0.0103, Test 0.0100
          R2_Score         : Train 0.5799, Val 0.2010, Test 0.1906
          RMSE             : Train 6.5444, Val 9.0399, Test 8.9352
          MAE              : Train 4.6574, Val 6.0243, Test 6.0133
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.64it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.49it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.54it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 18.68it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.06it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 19.85it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.15it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 21.07it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.36it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.99it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 21.14it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 22.28it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 19.39it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 21.09it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 21.98it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 18.52it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 20.64it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 18.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.86it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.47it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 40.98it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.75it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.92it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.93it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.85it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 18.70it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.22it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 19.98it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 22.93it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.53it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.68it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 21.37it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.62it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.28it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.29it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 25.22it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.23it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.50it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 21.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.50it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 39.57it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.61it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.36it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.86it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.28it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.92it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.29it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.74it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.42it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.26it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.12it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.70it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.87it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.73it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.15it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.02it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.37it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 54.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.24it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.86it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.89it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.27it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.01it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.89it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.23it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.20it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.86it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.62it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.22it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.42it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 20.60it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.84it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 21.42it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.69it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 20.55it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 22.23it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.85it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.19it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.61it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.73it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.28it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.21it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 28.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 31.71it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.34it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.77it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.31it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.20it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.70it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.87it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.47it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.95it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.46it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.45it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.47it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.77it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 20.80it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 23.79it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.69it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 21.29it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.42it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 19.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.47it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.02it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.18it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.60it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.14it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.36it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.84it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.17it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 21.51it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.26it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.79it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.83it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.57it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.13it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.71it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.36it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 22.28it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 23.34it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 26.52it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 23.36it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.70it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.98it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.38it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 39.19it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 23.85it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 37.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.36it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.27it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.31it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.73it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.67it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.27it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.59it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.23it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.01it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.67it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.96it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.08it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.59it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 21.35it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 22.50it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.91it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.52it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.74it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.22it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.01it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.01it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 36.38it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.23it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.75it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.17it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.40it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.45it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.51it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 19.53it/s]Train:  40%|████      | 24/60 [00:01<00:01, 22.30it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 20.17it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 21.49it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 19.78it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.83it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.39it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 21.75it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 25.05it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.10it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.20it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 21.97it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.39it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.82it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.72it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.95it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.34it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.88it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.28it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.54it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.94it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.10it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.84it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 21.82it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.27it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.21it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.46it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 22.04it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 23.41it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 26.37it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 21.82it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.79it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.39it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.29it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.85it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.21it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 42.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.18it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 16.34it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.96it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 18.51it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 23.03it/s]Train:  30%|███       | 18/60 [00:00<00:02, 20.05it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 20.98it/s]Train:  40%|████      | 24/60 [00:01<00:01, 22.95it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 19.61it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.22it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 20.28it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 23.79it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 21.56it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 23.46it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 20.47it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.85it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.13it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.27it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.84it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.98it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.14it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.60it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.62it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.77it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 24.68it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 21.77it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.00it/s]Train:  37%|███▋      | 22/60 [00:01<00:02, 18.36it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.45it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 19.56it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 21.34it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 21.86it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 19.59it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.58it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 19.51it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 20.21it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 18.32it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.60it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 20.32it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.27it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.64it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.42it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.71it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.21it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.61it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.04it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.80it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.07it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.70it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.17it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.41it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.30it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.55it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 22.31it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.60it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.62it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.10it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.18it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.82it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.09it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 24.64it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 15.94it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.48it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 27.29it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 27.91it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 20.94it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.63it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.78it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.62it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.36it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.66it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.93it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.68it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.41it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.85it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.27it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 25.57it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 20.26it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 22.89it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 19.12it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.22it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 54.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.83it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.07it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.40it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.57it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 17.02it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.60it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 18.00it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.99it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 18.27it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 22.22it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.14it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.74it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 20.92it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.77it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 22.35it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 20.36it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 23.76it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.62it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.81it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.11it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.30it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 16.78it/s]Val:  78%|███████▊  | 7/9 [00:00<00:00, 27.07it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 27.61it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.04it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.78it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.93it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.36it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.46it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.24it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 20.57it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.99it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 21.70it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.04it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 21.83it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.08it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 21.37it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 23.79it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 20.73it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.32it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 21.66it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 51.22it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 38.65it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.65it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 39.71it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.76it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.22it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 21.83it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.86it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.00it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.00it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.33it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.38it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.57it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.48it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.19it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.98it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.09it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 26.22it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 23.47it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 26.62it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 23.82it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.08it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.66it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.43it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.83it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 19.59it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.34it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.86it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 17.66it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 21.52it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 19.49it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.01it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 19.81it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.78it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.80it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.79it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 21.88it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 25.14it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.92it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.06it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 21.18it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.23it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.11it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.48it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.45it/s]
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 78: Loss:            : Train 0.0000, Val 0.0103, Test 0.0101
          R2_Score         : Train 0.5825, Val 0.2013, Test 0.1875
          RMSE             : Train 6.5247, Val 9.0384, Test 8.9521
          MAE              : Train 4.6427, Val 6.0207, Test 6.0154
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 79: Loss:            : Train 0.0000, Val 0.0101, Test 0.0098
          R2_Score         : Train 0.5850, Val 0.2152, Test 0.2044
          RMSE             : Train 6.5044, Val 8.9592, Test 8.8588
          MAE              : Train 4.6302, Val 5.9682, Test 5.9625
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 80: Loss:            : Train 0.0000, Val 0.0102, Test 0.0100
          R2_Score         : Train 0.5867, Val 0.2100, Test 0.1958
          RMSE             : Train 6.4914, Val 8.9891, Test 8.9065
          MAE              : Train 4.6255, Val 6.0087, Test 6.0048
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 81: Loss:            : Train 0.0000, Val 0.0103, Test 0.0101
          R2_Score         : Train 0.5897, Val 0.1956, Test 0.1843
          RMSE             : Train 6.4679, Val 9.0703, Test 8.9701
          MAE              : Train 4.6075, Val 6.0531, Test 6.0410
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 82: Loss:            : Train 0.0000, Val 0.0103, Test 0.0101
          R2_Score         : Train 0.5919, Val 0.1970, Test 0.1846
          RMSE             : Train 6.4502, Val 9.0625, Test 8.9685
          MAE              : Train 4.5979, Val 6.0011, Test 5.9970
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 83: Loss:            : Train 0.0000, Val 0.0104, Test 0.0102
          R2_Score         : Train 0.5936, Val 0.1907, Test 0.1747
          RMSE             : Train 6.4367, Val 9.0983, Test 9.0225
          MAE              : Train 4.5883, Val 6.0172, Test 6.0134
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 84: Loss:            : Train 0.0000, Val 0.0104, Test 0.0102
          R2_Score         : Train 0.5968, Val 0.1930, Test 0.1771
          RMSE             : Train 6.4115, Val 9.0855, Test 9.0094
          MAE              : Train 4.5678, Val 6.0442, Test 6.0395
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 85: Loss:            : Train 0.0000, Val 0.0104, Test 0.0102
          R2_Score         : Train 0.5995, Val 0.1929, Test 0.1754
          RMSE             : Train 6.3902, Val 9.0860, Test 9.0189
          MAE              : Train 4.5581, Val 6.0552, Test 6.0574
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 86: Loss:            : Train 0.0000, Val 0.0106, Test 0.0104
          R2_Score         : Train 0.6018, Val 0.1722, Test 0.1567
          RMSE             : Train 6.3720, Val 9.2016, Test 9.1205
          MAE              : Train 4.5442, Val 6.1194, Test 6.1181
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 87: Loss:            : Train 0.0000, Val 0.0105, Test 0.0103
          R2_Score         : Train 0.6041, Val 0.1793, Test 0.1640
          RMSE             : Train 6.3533, Val 9.1622, Test 9.0808
          MAE              : Train 4.5330, Val 6.0326, Test 6.0367
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 88: Loss:            : Train 0.0000, Val 0.0105, Test 0.0103
          R2_Score         : Train 0.6063, Val 0.1856, Test 0.1690
          RMSE             : Train 6.3357, Val 9.1267, Test 9.0539
          MAE              : Train 4.5245, Val 6.0286, Test 6.0285
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 89: Loss:            : Train 0.0000, Val 0.0105, Test 0.0103
          R2_Score         : Train 0.6078, Val 0.1801, Test 0.1632
          RMSE             : Train 6.3238, Val 9.1577, Test 9.0855
          MAE              : Train 4.5113, Val 6.0732, Test 6.0720
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 90: Loss:            : Train 0.0000, Val 0.0104, Test 0.0102
          R2_Score         : Train 0.6091, Val 0.1901, Test 0.1708
          RMSE             : Train 6.3132, Val 9.1015, Test 9.0442
          MAE              : Train 4.5039, Val 6.0387, Test 6.0500
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 91: Loss:            : Train 0.0000, Val 0.0105, Test 0.0103
          R2_Score         : Train 0.6112, Val 0.1866, Test 0.1698
          RMSE             : Train 6.2962, Val 9.1214, Test 9.0495
          MAE              : Train 4.5008, Val 6.0229, Test 6.0275
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 92: Loss:            : Train 0.0000, Val 0.0108, Test 0.0106
          R2_Score         : Train 0.6140, Val 0.1639, Test 0.1441
          RMSE             : Train 6.2734, Val 9.2476, Test 9.1881
          MAE              : Train 4.4798, Val 6.1516, Test 6.1596
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 93: Loss:            : Train 0.0000, Val 0.0107, Test 0.0105
          R2_Score         : Train 0.6166, Val 0.1647, Test 0.1498
          RMSE             : Train 6.2525, Val 9.2432, Test 9.1579
          MAE              : Train 4.4661, Val 6.0717, Test 6.0674
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 94: Loss:            : Train 0.0000, Val 0.0106, Test 0.0104
          R2_Score         : Train 0.6190, Val 0.1735, Test 0.1571
          RMSE             : Train 6.2329, Val 9.1944, Test 9.1183
          MAE              : Train 4.4527, Val 6.0508, Test 6.0558
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.49it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.88it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.80it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.53it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.82it/s]Train:  32%|███▏      | 19/60 [00:00<00:02, 19.49it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.10it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 20.91it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.22it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.08it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.72it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 20.38it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 21.85it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 22.72it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 19.36it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.40it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 19.64it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 21.20it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  11%|█         | 1/9 [00:00<00:00,  9.53it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 16.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.54it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 38.38it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.92it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.67it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.51it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.82it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.37it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 20.92it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.50it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.90it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.72it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.39it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.97it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 20.89it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 22.67it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.81it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 19.37it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 21.54it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 18.94it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.37it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 20.82it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.11it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.72it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 36.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.83it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.30it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.92it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.32it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.39it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.54it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.08it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.34it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.00it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.19it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 21.53it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.90it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.77it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 21.12it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.95it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.32it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 21.12it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 29.56it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 16.48it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 29.21it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 28.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.10it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.90it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.02it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.02it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.90it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.26it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.52it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 27.00it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.74it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.86it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.90it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.72it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.90it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.61it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.40it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.50it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 25.07it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.50it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.72it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 39.00it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.55it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.64it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.03it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.32it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.33it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 20.18it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.00it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.48it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 20.14it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 23.54it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 20.59it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.61it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.40it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 21.02it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 24.59it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.21it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 22.45it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.68it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.22it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 16.85it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.93it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.23it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.00it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.18it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.18it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.18it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 23.04it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 21.18it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 25.19it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 22.54it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.03it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.92it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.41it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.44it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 22.73it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.69it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 21.14it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.11it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.21it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 25.27it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.60it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.97it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.39it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.23it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 41.79it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.71it/s]

Epoch 95: Loss:            : Train 0.0000, Val 0.0106, Test 0.0103
          R2_Score         : Train 0.6207, Val 0.1780, Test 0.1631
          RMSE             : Train 6.2185, Val 9.1690, Test 9.0860
          MAE              : Train 4.4433, Val 6.0766, Test 6.0746
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 96: Loss:            : Train 0.0000, Val 0.0107, Test 0.0105
          R2_Score         : Train 0.6220, Val 0.1668, Test 0.1523
          RMSE             : Train 6.2082, Val 9.2315, Test 9.1442
          MAE              : Train 4.4394, Val 6.0825, Test 6.0791
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 97: Loss:            : Train 0.0000, Val 0.0108, Test 0.0106
          R2_Score         : Train 0.6243, Val 0.1585, Test 0.1439
          RMSE             : Train 6.1889, Val 9.2771, Test 9.1896
          MAE              : Train 4.4261, Val 6.0884, Test 6.0886
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 98: Loss:            : Train 0.0000, Val 0.0108, Test 0.0106
          R2_Score         : Train 0.6264, Val 0.1579, Test 0.1452
          RMSE             : Train 6.1720, Val 9.2804, Test 9.1827
          MAE              : Train 4.4131, Val 6.1363, Test 6.1286
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 99: Loss:            : Train 0.0000, Val 0.0110, Test 0.0108
          R2_Score         : Train 0.6286, Val 0.1448, Test 0.1234
          RMSE             : Train 6.1538, Val 9.3528, Test 9.2989
          MAE              : Train 4.4013, Val 6.1255, Test 6.1370
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Epoch 100: Loss:            : Train 0.0000, Val 0.0110, Test 0.0108
          R2_Score         : Train 0.6300, Val 0.1463, Test 0.1301
          RMSE             : Train 6.1418, Val 9.3441, Test 9.2630
          MAE              : Train 4.3912, Val 6.1585, Test 6.1603
Best:
          R2_Score         : Train 0.3814, Val 0.3222, Test 0.3217
          RMSE             : Train 7.9416, Val 8.3261, Test 8.1797
          MAE              : Train 5.5678, Val 5.7673, Test 5.7110
Training time (sec): 358
