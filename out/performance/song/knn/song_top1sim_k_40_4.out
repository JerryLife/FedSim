  0%|          | 0/244489 [00:00<?, ?it/s]  0%|          | 321/244489 [00:00<01:16, 3206.78it/s]  0%|          | 642/244489 [00:00<01:18, 3101.81it/s]  0%|          | 975/244489 [00:00<01:16, 3200.67it/s]  1%|          | 1310/244489 [00:00<01:14, 3249.04it/s]  1%|          | 1636/244489 [00:00<01:16, 3190.33it/s]  1%|          | 1961/244489 [00:00<01:16, 3183.23it/s]  1%|          | 2310/244489 [00:00<01:13, 3280.96it/s]  1%|          | 2639/244489 [00:00<01:14, 3239.46it/s]  1%|          | 2964/244489 [00:00<01:15, 3200.61it/s]  1%|▏         | 3291/244489 [00:01<01:14, 3220.35it/s]  1%|▏         | 3614/244489 [00:01<01:16, 3141.42it/s]  2%|▏         | 3941/244489 [00:01<01:15, 3177.88it/s]  2%|▏         | 4293/244489 [00:01<01:13, 3278.06it/s]  2%|▏         | 4643/244489 [00:01<01:11, 3343.17it/s]  2%|▏         | 4978/244489 [00:01<01:11, 3343.66it/s]  2%|▏         | 5313/244489 [00:01<01:11, 3329.89it/s]  2%|▏         | 5648/244489 [00:01<01:11, 3334.72it/s]  2%|▏         | 6009/244489 [00:01<01:09, 3415.73it/s]  3%|▎         | 6371/244489 [00:01<01:08, 3476.33it/s]  3%|▎         | 6719/244489 [00:02<01:08, 3463.06it/s]  3%|▎         | 7076/244489 [00:02<01:07, 3492.35it/s]  3%|▎         | 7426/244489 [00:02<01:07, 3494.01it/s]  3%|▎         | 7776/244489 [00:02<01:07, 3493.12it/s]  3%|▎         | 8129/244489 [00:02<01:07, 3501.66it/s]  3%|▎         | 8480/244489 [00:02<01:07, 3486.45it/s]  4%|▎         | 8838/244489 [00:02<01:07, 3482.44it/s]  4%|▍         | 9189/244489 [00:02<01:07, 3490.02it/s]  4%|▍         | 9573/244489 [00:02<01:05, 3593.35it/s]  4%|▍         | 9952/244489 [00:02<01:04, 3651.77it/s]  4%|▍         | 10329/244489 [00:03<01:03, 3685.83it/s]  4%|▍         | 10722/244489 [00:03<01:02, 3756.33it/s]  5%|▍         | 11098/244489 [00:03<01:02, 3746.66it/s]  5%|▍         | 11477/244489 [00:03<01:02, 3756.78it/s]  5%|▍         | 11869/244489 [00:03<01:01, 3805.25it/s]  5%|▌         | 12250/244489 [00:03<01:01, 3780.65it/s]  5%|▌         | 12629/244489 [00:03<01:02, 3695.20it/s]  5%|▌         | 13010/244489 [00:03<01:02, 3725.53it/s]  5%|▌         | 13388/244489 [00:03<01:01, 3740.14it/s]  6%|▌         | 13763/244489 [00:03<01:01, 3730.61it/s]  6%|▌         | 14137/244489 [00:04<01:01, 3729.23it/s]  6%|▌         | 14511/244489 [00:04<01:02, 3702.78it/s]  6%|▌         | 14882/244489 [00:04<01:02, 3689.37it/s]  6%|▌         | 15262/244489 [00:04<01:01, 3719.86it/s]  6%|▋         | 15642/244489 [00:04<01:01, 3742.60it/s]  7%|▋         | 16017/244489 [00:04<01:04, 3525.15it/s]  7%|▋         | 16373/244489 [00:04<01:21, 2803.71it/s]  7%|▋         | 16678/244489 [00:04<01:25, 2656.16it/s]  7%|▋         | 16961/244489 [00:05<01:46, 2128.84it/s]  7%|▋         | 17270/244489 [00:05<01:37, 2335.40it/s]  7%|▋         | 17583/244489 [00:05<01:29, 2522.78it/s]  7%|▋         | 17877/244489 [00:05<01:26, 2627.13it/s]  7%|▋         | 18167/244489 [00:05<01:23, 2698.82it/s]  8%|▊         | 18451/244489 [00:05<01:30, 2484.40it/s]  8%|▊         | 18712/244489 [00:05<01:30, 2496.60it/s]  8%|▊         | 18995/244489 [00:05<01:27, 2585.52it/s]  8%|▊         | 19299/244489 [00:05<01:23, 2711.32it/s]  8%|▊         | 19608/244489 [00:06<01:19, 2818.22it/s]  8%|▊         | 19908/244489 [00:06<01:18, 2870.57it/s]  8%|▊         | 20199/244489 [00:06<01:18, 2839.51it/s]  8%|▊         | 20514/244489 [00:06<01:16, 2929.06it/s]  9%|▊         | 20817/244489 [00:06<01:15, 2958.45it/s]  9%|▊         | 21115/244489 [00:06<01:19, 2798.52it/s]  9%|▉         | 21430/244489 [00:06<01:16, 2897.35it/s]  9%|▉         | 21772/244489 [00:06<01:13, 3048.48it/s]  9%|▉         | 22080/244489 [00:06<01:17, 2877.71it/s]  9%|▉         | 22441/244489 [00:07<01:12, 3082.53it/s]  9%|▉         | 22805/244489 [00:07<01:08, 3240.43it/s]  9%|▉         | 23133/244489 [00:07<01:10, 3154.11it/s] 10%|▉         | 23451/244489 [00:07<01:12, 3042.21it/s] 10%|▉         | 23758/244489 [00:07<01:17, 2849.02it/s] 10%|▉         | 24049/244489 [00:07<01:16, 2863.21it/s] 10%|▉         | 24378/244489 [00:07<01:13, 2974.52it/s] 10%|█         | 24678/244489 [00:07<01:31, 2408.21it/s] 10%|█         | 24959/244489 [00:07<01:27, 2506.20it/s] 10%|█         | 25225/244489 [00:08<01:29, 2442.07it/s] 10%|█         | 25529/244489 [00:08<01:24, 2598.79it/s] 11%|█         | 25824/244489 [00:08<01:21, 2693.98it/s] 11%|█         | 26132/244489 [00:08<01:17, 2801.41it/s] 11%|█         | 26419/244489 [00:08<01:18, 2791.69it/s] 11%|█         | 26703/244489 [00:08<01:18, 2783.12it/s] 11%|█         | 26985/244489 [00:09<02:56, 1231.95it/s] 11%|█         | 27198/244489 [00:09<02:54, 1245.10it/s] 11%|█         | 27386/244489 [00:09<02:55, 1233.78it/s] 11%|█▏        | 27554/244489 [00:09<02:51, 1267.36it/s] 11%|█▏        | 27713/244489 [00:09<02:45, 1310.48it/s] 11%|█▏        | 27873/244489 [00:09<02:37, 1372.01it/s] 11%|█▏        | 28030/244489 [00:09<02:41, 1336.46it/s] 12%|█▏        | 28185/244489 [00:09<02:35, 1386.96it/s] 12%|█▏        | 28338/244489 [00:10<02:31, 1422.18it/s] 12%|█▏        | 28507/244489 [00:10<02:24, 1492.91it/s] 12%|█▏        | 28721/244489 [00:10<02:09, 1670.79it/s] 12%|█▏        | 28996/244489 [00:10<01:49, 1975.17it/s] 12%|█▏        | 29249/244489 [00:10<01:40, 2134.52it/s] 12%|█▏        | 29474/244489 [00:10<01:39, 2166.33it/s] 12%|█▏        | 29713/244489 [00:10<01:36, 2230.32it/s] 12%|█▏        | 29939/244489 [00:10<01:45, 2038.18it/s] 12%|█▏        | 30160/244489 [00:10<01:42, 2084.00it/s] 12%|█▏        | 30373/244489 [00:11<02:11, 1633.32it/s] 12%|█▏        | 30554/244489 [00:11<02:14, 1594.92it/s] 13%|█▎        | 30726/244489 [00:11<02:12, 1616.10it/s] 13%|█▎        | 30897/244489 [00:11<02:10, 1638.38it/s] 13%|█▎        | 31088/244489 [00:11<02:04, 1710.52it/s] 13%|█▎        | 31265/244489 [00:11<02:04, 1715.15it/s] 13%|█▎        | 31441/244489 [00:11<02:45, 1289.19it/s] 13%|█▎        | 31657/244489 [00:11<02:22, 1490.91it/s] 13%|█▎        | 31866/244489 [00:12<02:09, 1638.96it/s] 13%|█▎        | 32092/244489 [00:12<01:57, 1801.23it/s] 13%|█▎        | 32305/244489 [00:12<01:52, 1889.89it/s] 13%|█▎        | 32505/244489 [00:12<01:52, 1879.23it/s] 13%|█▎        | 32707/244489 [00:12<01:50, 1916.48it/s] 13%|█▎        | 32914/244489 [00:12<01:48, 1955.50it/s] 14%|█▎        | 33114/244489 [00:12<02:04, 1700.59it/s] 14%|█▎        | 33293/244489 [00:12<02:23, 1470.94it/s] 14%|█▎        | 33472/244489 [00:12<02:16, 1548.31it/s] 14%|█▍        | 33694/244489 [00:13<02:02, 1720.49it/s] 14%|█▍        | 33876/244489 [00:13<02:03, 1707.20it/s] 14%|█▍        | 34077/244489 [00:13<01:57, 1788.49it/s] 14%|█▍        | 34262/244489 [00:13<01:57, 1795.07it/s] 14%|█▍        | 34486/244489 [00:13<01:49, 1920.60it/s] 14%|█▍        | 34699/244489 [00:13<01:46, 1977.32it/s] 14%|█▍        | 34926/244489 [00:13<01:41, 2061.11it/s] 14%|█▍        | 35152/244489 [00:13<01:38, 2117.44it/s] 14%|█▍        | 35373/244489 [00:13<01:37, 2143.13it/s] 15%|█▍        | 35600/244489 [00:13<01:35, 2178.40it/s] 15%|█▍        | 35819/244489 [00:14<01:40, 2080.56it/s] 15%|█▍        | 36036/244489 [00:14<01:39, 2103.67it/s] 15%|█▍        | 36248/244489 [00:14<02:00, 1733.28it/s] 15%|█▍        | 36433/244489 [00:14<01:59, 1739.26it/s] 15%|█▍        | 36615/244489 [00:14<02:02, 1696.78it/s] 15%|█▌        | 36911/244489 [00:14<01:42, 2032.44it/s] 15%|█▌        | 37123/244489 [00:14<01:57, 1761.90it/s] 15%|█▌        | 37335/244489 [00:14<01:51, 1851.03it/s] 15%|█▌        | 37530/244489 [00:15<01:51, 1860.77it/s] 15%|█▌        | 37723/244489 [00:15<01:50, 1869.99it/s] 16%|█▌        | 37962/244489 [00:15<01:42, 2013.56it/s] 16%|█▌        | 38168/244489 [00:15<01:44, 1983.39it/s] 16%|█▌        | 38413/244489 [00:15<01:37, 2115.50it/s] 16%|█▌        | 38653/244489 [00:15<01:33, 2195.87it/s] 16%|█▌        | 38875/244489 [00:15<02:02, 1680.86it/s] 16%|█▌        | 39063/244489 [00:15<02:06, 1618.53it/s] 16%|█▌        | 39289/244489 [00:16<01:55, 1774.48it/s] 16%|█▌        | 39511/244489 [00:16<01:48, 1888.41it/s] 16%|█▋        | 39739/244489 [00:16<01:42, 1993.49it/s] 16%|█▋        | 39956/244489 [00:16<01:40, 2042.50it/s] 16%|█▋        | 40178/244489 [00:16<01:37, 2091.45it/s] 17%|█▋        | 40392/244489 [00:16<01:39, 2058.57it/s] 17%|█▋        | 40677/244489 [00:16<01:29, 2284.03it/s] 17%|█▋        | 40909/244489 [00:16<01:48, 1868.87it/s] 17%|█▋        | 41111/244489 [00:16<01:46, 1903.69it/s] 17%|█▋        | 41338/244489 [00:17<01:41, 2000.67it/s] 17%|█▋        | 41557/244489 [00:17<01:38, 2050.98it/s] 17%|█▋        | 41783/244489 [00:17<01:36, 2107.55it/s] 17%|█▋        | 41999/244489 [00:17<01:48, 1866.02it/s] 17%|█▋        | 42194/244489 [00:17<01:48, 1860.53it/s] 17%|█▋        | 42389/244489 [00:17<01:47, 1881.76it/s] 17%|█▋        | 42589/244489 [00:17<01:45, 1911.86it/s] 17%|█▋        | 42784/244489 [00:17<01:45, 1918.15it/s] 18%|█▊        | 42997/244489 [00:17<01:41, 1977.77it/s] 18%|█▊        | 43206/244489 [00:17<01:40, 2008.26it/s] 18%|█▊        | 43409/244489 [00:18<01:39, 2013.03it/s] 18%|█▊        | 43612/244489 [00:18<01:42, 1957.46it/s] 18%|█▊        | 43809/244489 [00:18<01:44, 1919.83it/s] 18%|█▊        | 44013/244489 [00:18<01:42, 1953.91it/s] 18%|█▊        | 44218/244489 [00:18<01:41, 1981.20it/s] 18%|█▊        | 44423/244489 [00:18<01:39, 2000.71it/s] 18%|█▊        | 44624/244489 [00:18<01:44, 1915.81it/s] 18%|█▊        | 44817/244489 [00:18<02:26, 1360.11it/s] 18%|█▊        | 45008/244489 [00:19<02:16, 1458.04it/s] 18%|█▊        | 45191/244489 [00:19<02:09, 1533.51it/s] 19%|█▊        | 45435/244489 [00:19<01:52, 1762.27it/s] 19%|█▊        | 45713/244489 [00:19<01:37, 2032.25it/s] 19%|█▉        | 45930/244489 [00:19<01:37, 2040.89it/s] 19%|█▉        | 46144/244489 [00:19<01:38, 2009.24it/s] 19%|█▉        | 46353/244489 [00:19<01:37, 2030.67it/s] 19%|█▉        | 46561/244489 [00:19<01:38, 2014.16it/s] 19%|█▉        | 46767/244489 [00:19<01:37, 2026.38it/s] 19%|█▉        | 46973/244489 [00:20<01:44, 1881.37it/s] 19%|█▉        | 47170/244489 [00:20<01:43, 1904.65it/s] 19%|█▉        | 47381/244489 [00:20<01:40, 1960.74it/s] 19%|█▉        | 47580/244489 [00:20<01:42, 1913.21it/s] 20%|█▉        | 47773/244489 [00:20<01:58, 1661.80it/s] 20%|█▉        | 47982/244489 [00:20<01:50, 1772.51it/s] 20%|█▉        | 48178/244489 [00:20<01:47, 1822.33it/s] 20%|█▉        | 48380/244489 [00:20<01:44, 1875.23it/s] 20%|█▉        | 48572/244489 [00:20<01:56, 1677.37it/s] 20%|█▉        | 48776/244489 [00:21<01:50, 1771.44it/s] 20%|██        | 48962/244489 [00:21<01:48, 1795.51it/s] 20%|██        | 49146/244489 [00:21<01:48, 1793.39it/s] 20%|██        | 49329/244489 [00:21<01:50, 1768.79it/s] 20%|██        | 49528/244489 [00:21<01:46, 1830.85it/s] 20%|██        | 49713/244489 [00:21<01:46, 1831.38it/s] 20%|██        | 49905/244489 [00:21<01:44, 1856.50it/s] 20%|██        | 50113/244489 [00:21<01:41, 1921.29it/s] 21%|██        | 50341/244489 [00:21<01:35, 2025.29it/s] 21%|██        | 50612/244489 [00:21<01:27, 2227.71it/s] 21%|██        | 50836/244489 [00:22<01:36, 2002.52it/s] 21%|██        | 51071/244489 [00:22<01:32, 2097.67it/s] 21%|██        | 51296/244489 [00:22<01:30, 2139.24it/s] 21%|██        | 51514/244489 [00:22<01:34, 2035.44it/s] 21%|██        | 51721/244489 [00:22<01:36, 2006.38it/s] 21%|██▏       | 51956/244489 [00:22<01:31, 2101.59it/s] 21%|██▏       | 52174/244489 [00:22<01:30, 2123.60it/s] 21%|██▏       | 52403/244489 [00:22<01:28, 2171.91it/s] 22%|██▏       | 52649/244489 [00:22<01:25, 2256.08it/s] 22%|██▏       | 52964/244489 [00:22<01:16, 2517.78it/s] 22%|██▏       | 53217/244489 [00:23<01:23, 2279.32it/s] 22%|██▏       | 53450/244489 [00:23<01:45, 1807.49it/s] 22%|██▏       | 53649/244489 [00:23<01:44, 1828.69it/s] 22%|██▏       | 53845/244489 [00:23<01:57, 1618.92it/s] 22%|██▏       | 54078/244489 [00:23<01:46, 1787.32it/s] 22%|██▏       | 54270/244489 [00:23<01:50, 1723.96it/s] 22%|██▏       | 54488/244489 [00:23<01:43, 1838.86it/s] 22%|██▏       | 54681/244489 [00:24<01:42, 1856.79it/s] 22%|██▏       | 54873/244489 [00:24<01:43, 1829.53it/s] 23%|██▎       | 55097/244489 [00:24<01:37, 1942.34it/s] 23%|██▎       | 55361/244489 [00:24<01:28, 2138.21it/s] 23%|██▎       | 55621/244489 [00:24<01:23, 2270.07it/s] 23%|██▎       | 55852/244489 [00:24<01:22, 2274.42it/s] 23%|██▎       | 56082/244489 [00:24<01:22, 2273.01it/s] 23%|██▎       | 56327/244489 [00:24<01:20, 2323.90it/s] 23%|██▎       | 56561/244489 [00:24<01:22, 2291.28it/s] 23%|██▎       | 56792/244489 [00:24<01:23, 2251.32it/s] 23%|██▎       | 57043/244489 [00:25<01:20, 2325.97it/s] 23%|██▎       | 57277/244489 [00:25<01:39, 1879.66it/s] 24%|██▎       | 57533/244489 [00:25<01:31, 2051.14it/s] 24%|██▎       | 57752/244489 [00:25<01:34, 1973.49it/s] 24%|██▎       | 57959/244489 [00:25<01:34, 1973.85it/s] 24%|██▍       | 58187/244489 [00:25<01:30, 2056.40it/s] 24%|██▍       | 58436/244489 [00:25<01:25, 2176.05it/s] 24%|██▍       | 58659/244489 [00:25<01:28, 2100.39it/s] 24%|██▍       | 58873/244489 [00:25<01:34, 1955.00it/s] 24%|██▍       | 59099/244489 [00:26<01:31, 2035.96it/s] 24%|██▍       | 59350/244489 [00:26<01:25, 2167.19it/s] 24%|██▍       | 59589/244489 [00:26<01:22, 2230.49it/s] 24%|██▍       | 59815/244489 [00:26<01:22, 2236.86it/s] 25%|██▍       | 60079/244489 [00:26<01:18, 2354.26it/s] 25%|██▍       | 60327/244489 [00:26<01:17, 2389.48it/s] 25%|██▍       | 60568/244489 [00:26<01:25, 2151.33it/s] 25%|██▍       | 60826/244489 [00:26<01:20, 2267.85it/s] 25%|██▍       | 61084/244489 [00:26<01:17, 2355.66it/s] 25%|██▌       | 61324/244489 [00:27<01:28, 2064.63it/s] 25%|██▌       | 61559/244489 [00:27<01:25, 2137.98it/s] 25%|██▌       | 61807/244489 [00:27<01:21, 2230.95it/s] 25%|██▌       | 62043/244489 [00:27<01:20, 2264.64it/s] 25%|██▌       | 62274/244489 [00:27<01:20, 2276.38it/s] 26%|██▌       | 62522/244489 [00:27<01:17, 2333.46it/s] 26%|██▌       | 62758/244489 [00:27<01:22, 2204.27it/s] 26%|██▌       | 62998/244489 [00:27<01:20, 2258.88it/s] 26%|██▌       | 63236/244489 [00:27<01:19, 2292.84it/s] 26%|██▌       | 63474/244489 [00:28<01:18, 2316.45it/s] 26%|██▌       | 63707/244489 [00:28<01:19, 2286.17it/s] 26%|██▌       | 63937/244489 [00:28<01:19, 2260.55it/s] 26%|██▋       | 64180/244489 [00:28<01:18, 2307.48it/s] 26%|██▋       | 64412/244489 [00:28<01:32, 1940.14it/s] 26%|██▋       | 64670/244489 [00:28<01:25, 2105.04it/s] 27%|██▋       | 64891/244489 [00:28<01:25, 2101.11it/s] 27%|██▋       | 65108/244489 [00:28<01:27, 2044.28it/s] 27%|██▋       | 65318/244489 [00:28<01:28, 2013.52it/s] 27%|██▋       | 65523/244489 [00:29<01:28, 2010.97it/s] 27%|██▋       | 65730/244489 [00:29<01:28, 2026.62it/s] 27%|██▋       | 65939/244489 [00:29<01:27, 2043.17it/s] 27%|██▋       | 66165/244489 [00:29<01:24, 2104.82it/s] 27%|██▋       | 66377/244489 [00:29<01:26, 2064.95it/s] 27%|██▋       | 66609/244489 [00:29<01:23, 2138.51it/s] 27%|██▋       | 66856/244489 [00:29<01:19, 2234.33it/s] 27%|██▋       | 67126/244489 [00:29<01:14, 2369.58it/s] 28%|██▊       | 67381/244489 [00:29<01:13, 2422.03it/s] 28%|██▊       | 67638/244489 [00:29<01:11, 2465.61it/s] 28%|██▊       | 67885/244489 [00:30<01:54, 1540.36it/s] 28%|██▊       | 68083/244489 [00:30<01:50, 1589.90it/s] 28%|██▊       | 68274/244489 [00:30<01:52, 1566.02it/s] 28%|██▊       | 68454/244489 [00:30<01:48, 1619.17it/s] 28%|██▊       | 68633/244489 [00:30<01:45, 1660.58it/s] 28%|██▊       | 68815/244489 [00:30<01:44, 1684.80it/s] 28%|██▊       | 69043/244489 [00:30<01:35, 1845.08it/s] 28%|██▊       | 69267/244489 [00:30<01:29, 1951.60it/s] 28%|██▊       | 69493/244489 [00:31<01:25, 2035.46it/s] 29%|██▊       | 69734/244489 [00:31<01:21, 2141.49it/s] 29%|██▊       | 69952/244489 [00:31<01:22, 2115.54it/s] 29%|██▊       | 70196/244489 [00:31<01:18, 2208.96it/s] 29%|██▉       | 70439/244489 [00:31<01:16, 2272.90it/s] 29%|██▉       | 70668/244489 [00:31<01:27, 1981.73it/s] 29%|██▉       | 70876/244489 [00:31<01:26, 2006.81it/s] 29%|██▉       | 71083/244489 [00:31<01:26, 2013.60it/s] 29%|██▉       | 71289/244489 [00:31<01:25, 2025.25it/s] 29%|██▉       | 71540/244489 [00:32<01:19, 2164.11it/s] 29%|██▉       | 71769/244489 [00:32<01:18, 2198.95it/s] 29%|██▉       | 72024/244489 [00:32<01:15, 2299.36it/s] 30%|██▉       | 72266/244489 [00:32<01:13, 2332.55it/s] 30%|██▉       | 72512/244489 [00:32<01:12, 2369.74it/s] 30%|██▉       | 72757/244489 [00:32<01:11, 2391.30it/s] 30%|██▉       | 72997/244489 [00:32<01:11, 2387.00it/s] 30%|██▉       | 73237/244489 [00:32<01:12, 2377.14it/s] 30%|███       | 73488/244489 [00:32<01:10, 2415.17it/s] 30%|███       | 73730/244489 [00:32<01:13, 2325.30it/s] 30%|███       | 73964/244489 [00:33<01:16, 2226.87it/s] 30%|███       | 74188/244489 [00:33<01:26, 1975.75it/s] 30%|███       | 74415/244489 [00:33<01:22, 2052.00it/s] 31%|███       | 74625/244489 [00:33<01:26, 1962.16it/s] 31%|███       | 74825/244489 [00:33<01:26, 1958.83it/s] 31%|███       | 75024/244489 [00:33<01:27, 1933.76it/s] 31%|███       | 75236/244489 [00:33<01:25, 1984.17it/s] 31%|███       | 75437/244489 [00:33<01:24, 1989.60it/s] 31%|███       | 75638/244489 [00:33<01:24, 1992.90it/s] 31%|███       | 75872/244489 [00:34<01:20, 2093.91it/s] 31%|███       | 76129/244489 [00:34<01:15, 2232.05it/s] 31%|███       | 76382/244489 [00:34<01:12, 2320.04it/s] 31%|███▏      | 76635/244489 [00:34<01:10, 2379.76it/s] 31%|███▏      | 76879/244489 [00:34<01:09, 2396.22it/s] 32%|███▏      | 77131/244489 [00:34<01:08, 2432.41it/s] 32%|███▏      | 77375/244489 [00:34<01:09, 2387.51it/s] 32%|███▏      | 77615/244489 [00:34<01:20, 2070.59it/s] 32%|███▏      | 77858/244489 [00:34<01:16, 2165.04it/s] 32%|███▏      | 78081/244489 [00:35<01:17, 2156.56it/s] 32%|███▏      | 78302/244489 [00:35<01:18, 2119.37it/s] 32%|███▏      | 78518/244489 [00:35<01:18, 2109.99it/s] 32%|███▏      | 78732/244489 [00:35<01:20, 2049.15it/s] 32%|███▏      | 78944/244489 [00:35<01:20, 2067.77it/s] 32%|███▏      | 79153/244489 [00:35<01:20, 2054.95it/s] 32%|███▏      | 79364/244489 [00:35<01:19, 2068.96it/s] 33%|███▎      | 79583/244489 [00:35<01:18, 2103.67it/s] 33%|███▎      | 79794/244489 [00:35<01:21, 2017.88it/s] 33%|███▎      | 79997/244489 [00:35<01:32, 1778.88it/s] 33%|███▎      | 80181/244489 [00:36<01:33, 1764.33it/s] 33%|███▎      | 80362/244489 [00:36<01:56, 1414.00it/s] 33%|███▎      | 80516/244489 [00:36<01:58, 1380.52it/s] 33%|███▎      | 80705/244489 [00:36<01:48, 1502.96it/s] 33%|███▎      | 80903/244489 [00:36<01:40, 1625.57it/s] 33%|███▎      | 81096/244489 [00:36<01:35, 1706.31it/s] 33%|███▎      | 81302/244489 [00:36<01:30, 1803.90it/s] 33%|███▎      | 81488/244489 [00:36<01:36, 1684.75it/s] 33%|███▎      | 81693/244489 [00:37<01:31, 1782.75it/s] 33%|███▎      | 81876/244489 [00:37<01:33, 1737.09it/s] 34%|███▎      | 82053/244489 [00:37<01:37, 1667.71it/s] 34%|███▎      | 82377/244489 [00:37<01:17, 2101.04it/s] 34%|███▍      | 82593/244489 [00:37<01:24, 1927.09it/s] 34%|███▍      | 82808/244489 [00:37<01:21, 1984.84it/s] 34%|███▍      | 83012/244489 [00:37<01:27, 1853.00it/s] 34%|███▍      | 83203/244489 [00:37<01:41, 1593.53it/s] 34%|███▍      | 83394/244489 [00:38<01:40, 1605.85it/s] 34%|███▍      | 83561/244489 [00:38<01:52, 1428.18it/s] 34%|███▍      | 83711/244489 [00:38<01:55, 1398.03it/s] 34%|███▍      | 83917/244489 [00:38<01:42, 1562.25it/s] 34%|███▍      | 84080/244489 [00:38<01:44, 1542.08it/s] 34%|███▍      | 84246/244489 [00:38<01:41, 1571.88it/s] 35%|███▍      | 84425/244489 [00:38<01:38, 1628.37it/s] 35%|███▍      | 84591/244489 [00:38<01:42, 1558.75it/s] 35%|███▍      | 84789/244489 [00:38<01:35, 1673.77it/s] 35%|███▍      | 84959/244489 [00:39<01:40, 1583.36it/s] 35%|███▍      | 85125/244489 [00:39<01:39, 1602.98it/s] 35%|███▍      | 85288/244489 [00:39<01:46, 1499.54it/s] 35%|███▍      | 85453/244489 [00:39<01:43, 1538.10it/s] 35%|███▌      | 85645/244489 [00:39<01:36, 1642.60it/s] 35%|███▌      | 85812/244489 [00:39<01:42, 1549.56it/s] 35%|███▌      | 85983/244489 [00:39<01:39, 1593.81it/s] 35%|███▌      | 86145/244489 [00:39<01:53, 1394.73it/s] 35%|███▌      | 86313/244489 [00:39<01:47, 1467.47it/s] 35%|███▌      | 86465/244489 [00:40<01:48, 1460.26it/s] 35%|███▌      | 86660/244489 [00:40<01:38, 1595.28it/s] 36%|███▌      | 86828/244489 [00:40<01:37, 1617.46it/s] 36%|███▌      | 87006/244489 [00:40<01:34, 1660.23it/s] 36%|███▌      | 87209/244489 [00:40<01:28, 1767.68it/s] 36%|███▌      | 87388/244489 [00:40<01:44, 1507.41it/s] 36%|███▌      | 87547/244489 [00:40<01:51, 1405.47it/s] 36%|███▌      | 87694/244489 [00:40<01:50, 1414.53it/s] 36%|███▌      | 87924/244489 [00:40<01:34, 1649.98it/s] 36%|███▌      | 88143/244489 [00:41<01:26, 1798.62it/s] 36%|███▌      | 88352/244489 [00:41<01:23, 1879.10it/s] 36%|███▌      | 88545/244489 [00:41<01:22, 1884.89it/s] 36%|███▋      | 88737/244489 [00:41<01:22, 1880.84it/s] 36%|███▋      | 88941/244489 [00:41<01:20, 1924.59it/s] 36%|███▋      | 89144/244489 [00:41<01:19, 1954.14it/s] 37%|███▋      | 89352/244489 [00:41<01:17, 1990.58it/s] 37%|███▋      | 89569/244489 [00:41<01:15, 2042.40it/s] 37%|███▋      | 89836/244489 [00:41<01:09, 2227.90it/s] 37%|███▋      | 90182/244489 [00:41<00:59, 2593.02it/s] 37%|███▋      | 90442/244489 [00:42<01:02, 2460.17it/s] 37%|███▋      | 90690/244489 [00:42<01:05, 2342.91it/s] 37%|███▋      | 90927/244489 [00:42<01:17, 1992.38it/s] 37%|███▋      | 91136/244489 [00:42<01:26, 1778.12it/s] 37%|███▋      | 91354/244489 [00:42<01:21, 1873.17it/s] 37%|███▋      | 91570/244489 [00:42<01:18, 1945.23it/s] 38%|███▊      | 91785/244489 [00:42<01:16, 1999.75it/s] 38%|███▊      | 91998/244489 [00:42<01:14, 2033.66it/s] 38%|███▊      | 92213/244489 [00:43<01:13, 2065.73it/s] 38%|███▊      | 92423/244489 [00:43<01:24, 1804.57it/s] 38%|███▊      | 92612/244489 [00:43<01:30, 1677.65it/s] 38%|███▊      | 92787/244489 [00:43<01:30, 1671.09it/s] 38%|███▊      | 93129/244489 [00:43<01:10, 2133.56it/s] 38%|███▊      | 93352/244489 [00:43<01:11, 2126.60it/s] 38%|███▊      | 93571/244489 [00:43<01:10, 2129.23it/s] 38%|███▊      | 93789/244489 [00:43<01:11, 2096.58it/s] 38%|███▊      | 94002/244489 [00:43<01:23, 1811.33it/s] 39%|███▊      | 94192/244489 [00:44<01:30, 1659.39it/s] 39%|███▊      | 94393/244489 [00:44<01:25, 1746.99it/s] 39%|███▊      | 94594/244489 [00:44<01:22, 1814.95it/s] 39%|███▉      | 94782/244489 [00:44<01:24, 1762.35it/s] 39%|███▉      | 94963/244489 [00:44<01:27, 1710.63it/s] 39%|███▉      | 95137/244489 [00:44<01:38, 1512.99it/s] 39%|███▉      | 95294/244489 [00:44<01:53, 1318.18it/s] 39%|███▉      | 95443/244489 [00:44<01:49, 1358.48it/s] 39%|███▉      | 95585/244489 [00:45<01:56, 1277.40it/s] 39%|███▉      | 95808/244489 [00:45<01:37, 1517.87it/s] 39%|███▉      | 96026/244489 [00:45<01:27, 1691.67it/s] 39%|███▉      | 96240/244489 [00:45<01:21, 1812.70it/s] 39%|███▉      | 96440/244489 [00:45<01:19, 1865.18it/s] 40%|███▉      | 96656/244489 [00:45<01:15, 1947.86it/s] 40%|███▉      | 96873/244489 [00:45<01:13, 2011.85it/s] 40%|███▉      | 97077/244489 [00:45<01:17, 1906.50it/s] 40%|███▉      | 97271/244489 [00:45<01:17, 1892.32it/s] 40%|███▉      | 97479/244489 [00:46<01:15, 1944.77it/s] 40%|███▉      | 97703/244489 [00:46<01:12, 2029.98it/s] 40%|████      | 97924/244489 [00:46<01:10, 2080.27it/s] 40%|████      | 98144/244489 [00:46<01:09, 2114.70it/s] 40%|████      | 98371/244489 [00:46<01:07, 2159.62it/s] 40%|████      | 98596/244489 [00:46<01:06, 2184.02it/s] 40%|████      | 98815/244489 [00:46<01:07, 2142.91it/s] 41%|████      | 99037/244489 [00:46<01:07, 2163.59it/s] 41%|████      | 99254/244489 [00:46<01:10, 2073.19it/s] 41%|████      | 99463/244489 [00:46<01:17, 1880.76it/s] 41%|████      | 99655/244489 [00:47<01:18, 1851.09it/s] 41%|████      | 99844/244489 [00:47<01:17, 1860.59it/s] 41%|████      | 100038/244489 [00:47<01:16, 1882.52it/s] 41%|████      | 100351/244489 [00:47<01:04, 2240.24it/s] 41%|████      | 100691/244489 [00:47<00:55, 2575.59it/s] 41%|████▏     | 101050/244489 [00:47<00:49, 2872.57it/s] 41%|████▏     | 101412/244489 [00:47<00:46, 3092.20it/s] 42%|████▏     | 101724/244489 [00:47<00:58, 2456.35it/s] 42%|████▏     | 101992/244489 [00:48<01:08, 2084.29it/s] 42%|████▏     | 102244/244489 [00:48<01:05, 2183.00it/s] 42%|████▏     | 102614/244489 [00:48<00:55, 2556.55it/s] 42%|████▏     | 102892/244489 [00:48<00:57, 2470.10it/s] 42%|████▏     | 103155/244489 [00:48<01:01, 2303.58it/s] 42%|████▏     | 103398/244489 [00:48<01:03, 2210.48it/s] 42%|████▏     | 103628/244489 [00:48<01:08, 2068.48it/s] 42%|████▏     | 103841/244489 [00:48<01:10, 1997.86it/s] 43%|████▎     | 104045/244489 [00:49<01:23, 1684.45it/s] 43%|████▎     | 104245/244489 [00:49<01:19, 1757.13it/s] 43%|████▎     | 104430/244489 [00:49<01:18, 1779.69it/s] 43%|████▎     | 104634/244489 [00:49<01:15, 1846.61it/s] 43%|████▎     | 104824/244489 [00:49<01:16, 1819.92it/s] 43%|████▎     | 105020/244489 [00:49<01:15, 1857.68it/s] 43%|████▎     | 105234/244489 [00:49<01:11, 1936.00it/s] 43%|████▎     | 105431/244489 [00:49<01:13, 1882.86it/s] 43%|████▎     | 105649/244489 [00:49<01:10, 1966.98it/s] 43%|████▎     | 105859/244489 [00:49<01:09, 2002.88it/s] 43%|████▎     | 106070/244489 [00:50<01:08, 2032.65it/s] 43%|████▎     | 106292/244489 [00:50<01:06, 2085.94it/s] 44%|████▎     | 106512/244489 [00:50<01:05, 2118.74it/s] 44%|████▎     | 106725/244489 [00:50<01:05, 2089.58it/s] 44%|████▎     | 106937/244489 [00:50<01:05, 2097.14it/s] 44%|████▍     | 107159/244489 [00:50<01:04, 2131.37it/s] 44%|████▍     | 107379/244489 [00:50<01:03, 2150.15it/s] 44%|████▍     | 107599/244489 [00:50<01:03, 2164.95it/s] 44%|████▍     | 107816/244489 [00:50<01:06, 2069.69it/s] 44%|████▍     | 108024/244489 [00:51<01:15, 1806.29it/s] 44%|████▍     | 108246/244489 [00:51<01:11, 1915.60it/s] 44%|████▍     | 108470/244489 [00:51<01:07, 2003.38it/s] 44%|████▍     | 108690/244489 [00:51<01:06, 2056.75it/s] 45%|████▍     | 108900/244489 [00:51<01:05, 2054.43it/s] 45%|████▍     | 109139/244489 [00:51<01:02, 2150.83it/s] 45%|████▍     | 109383/244489 [00:51<01:00, 2234.07it/s] 45%|████▍     | 109625/244489 [00:51<00:58, 2287.03it/s] 45%|████▍     | 109877/244489 [00:51<00:57, 2353.80it/s] 45%|████▌     | 110126/244489 [00:51<00:56, 2391.37it/s] 45%|████▌     | 110366/244489 [00:52<01:04, 2068.83it/s] 45%|████▌     | 110615/244489 [00:52<01:01, 2180.50it/s] 45%|████▌     | 110866/244489 [00:52<00:58, 2271.27it/s] 45%|████▌     | 111109/244489 [00:52<00:57, 2313.39it/s] 46%|████▌     | 111362/244489 [00:52<00:56, 2374.26it/s] 46%|████▌     | 111616/244489 [00:52<00:54, 2421.40it/s] 46%|████▌     | 111861/244489 [00:52<00:55, 2394.56it/s] 46%|████▌     | 112107/244489 [00:52<00:54, 2411.90it/s] 46%|████▌     | 112356/244489 [00:52<00:54, 2433.49it/s] 46%|████▌     | 112601/244489 [00:53<00:54, 2434.21it/s] 46%|████▌     | 112850/244489 [00:53<00:53, 2447.27it/s] 46%|████▋     | 113108/244489 [00:53<00:52, 2485.71it/s] 46%|████▋     | 113362/244489 [00:53<00:52, 2499.79it/s] 46%|████▋     | 113613/244489 [00:53<00:52, 2497.51it/s] 47%|████▋     | 113864/244489 [00:53<00:52, 2500.82it/s] 47%|████▋     | 114115/244489 [00:53<00:54, 2377.19it/s] 47%|████▋     | 114355/244489 [00:53<00:54, 2380.36it/s] 47%|████▋     | 114605/244489 [00:53<00:53, 2412.56it/s] 47%|████▋     | 114854/244489 [00:53<00:53, 2433.30it/s] 47%|████▋     | 115102/244489 [00:54<00:52, 2446.53it/s] 47%|████▋     | 115354/244489 [00:54<00:52, 2468.04it/s] 47%|████▋     | 115605/244489 [00:54<00:51, 2479.98it/s] 47%|████▋     | 115856/244489 [00:54<00:51, 2487.84it/s] 47%|████▋     | 116105/244489 [00:54<00:52, 2464.10it/s] 48%|████▊     | 116359/244489 [00:54<00:51, 2486.16it/s] 48%|████▊     | 116610/244489 [00:54<00:51, 2490.77it/s] 48%|████▊     | 116860/244489 [00:54<00:51, 2492.44it/s] 48%|████▊     | 117273/244489 [00:54<00:42, 2978.49it/s] 48%|████▊     | 117571/244489 [00:54<00:44, 2833.84it/s] 48%|████▊     | 117856/244489 [00:55<00:45, 2768.91it/s] 48%|████▊     | 118135/244489 [00:55<00:46, 2729.53it/s] 48%|████▊     | 118409/244489 [00:55<00:46, 2712.99it/s] 49%|████▊     | 118681/244489 [00:55<00:46, 2711.92it/s] 49%|████▊     | 118953/244489 [00:55<00:46, 2713.54it/s] 49%|████▉     | 119228/244489 [00:55<00:45, 2723.46it/s] 49%|████▉     | 119501/244489 [00:55<00:46, 2674.29it/s] 49%|████▉     | 119769/244489 [00:55<00:46, 2673.43it/s] 49%|████▉     | 120037/244489 [00:55<00:46, 2665.16it/s] 49%|████▉     | 120304/244489 [00:55<00:49, 2531.83it/s] 49%|████▉     | 120559/244489 [00:56<00:56, 2210.11it/s] 49%|████▉     | 120814/244489 [00:56<00:53, 2297.72it/s] 50%|████▉     | 121088/244489 [00:56<00:51, 2415.37it/s] 50%|████▉     | 121367/244489 [00:56<00:48, 2519.26it/s] 50%|████▉     | 121629/244489 [00:56<00:48, 2546.18it/s] 50%|████▉     | 121909/244489 [00:56<00:46, 2617.34it/s] 50%|████▉     | 122186/244489 [00:56<00:45, 2660.38it/s] 50%|█████     | 122458/244489 [00:56<00:45, 2675.44it/s] 50%|█████     | 122727/244489 [00:56<00:47, 2548.96it/s] 50%|█████     | 122985/244489 [00:57<00:52, 2304.15it/s] 50%|█████     | 123231/244489 [00:57<00:51, 2344.82it/s] 51%|█████     | 123470/244489 [00:57<00:54, 2204.20it/s] 51%|█████     | 123717/244489 [00:57<00:53, 2274.22it/s] 51%|█████     | 123949/244489 [00:57<00:53, 2260.99it/s] 51%|█████     | 124213/244489 [00:57<00:50, 2366.37it/s] 51%|█████     | 124472/244489 [00:57<00:49, 2428.51it/s] 51%|█████     | 124730/244489 [00:57<00:48, 2470.84it/s] 51%|█████     | 124988/244489 [00:57<00:47, 2502.59it/s] 51%|█████     | 125254/244489 [00:58<00:46, 2545.80it/s] 51%|█████▏    | 125510/244489 [00:58<00:46, 2548.21it/s] 51%|█████▏    | 125766/244489 [00:58<00:47, 2480.87it/s] 52%|█████▏    | 126031/244489 [00:58<00:46, 2529.30it/s] 52%|█████▏    | 126285/244489 [00:58<00:46, 2530.54it/s] 52%|█████▏    | 126547/244489 [00:58<00:46, 2554.83it/s] 52%|█████▏    | 126806/244489 [00:58<00:45, 2564.66it/s] 52%|█████▏    | 127063/244489 [00:58<00:47, 2463.83it/s] 52%|█████▏    | 127311/244489 [00:58<00:47, 2455.33it/s] 52%|█████▏    | 127558/244489 [00:58<00:47, 2436.37it/s] 52%|█████▏    | 127833/244489 [00:59<00:46, 2526.92it/s] 52%|█████▏    | 128104/244489 [00:59<00:45, 2578.27it/s] 53%|█████▎    | 128370/244489 [00:59<00:44, 2600.48it/s] 53%|█████▎    | 128640/244489 [00:59<00:44, 2629.08it/s] 53%|█████▎    | 128915/244489 [00:59<00:43, 2662.49it/s] 53%|█████▎    | 129188/244489 [00:59<00:42, 2681.66it/s] 53%|█████▎    | 129459/244489 [00:59<00:42, 2687.62it/s] 53%|█████▎    | 129867/244489 [00:59<00:36, 3102.40it/s] 53%|█████▎    | 130297/244489 [00:59<00:33, 3459.83it/s] 53%|█████▎    | 130644/244489 [01:00<00:38, 2989.75it/s] 54%|█████▎    | 130955/244489 [01:00<00:39, 2905.68it/s] 54%|█████▎    | 131254/244489 [01:00<00:41, 2724.17it/s] 54%|█████▍    | 131536/244489 [01:00<00:41, 2748.79it/s] 54%|█████▍    | 131818/244489 [01:00<00:40, 2766.01it/s] 54%|█████▍    | 132114/244489 [01:00<00:39, 2818.00it/s] 54%|█████▍    | 132399/244489 [01:00<00:39, 2824.85it/s] 54%|█████▍    | 132684/244489 [01:00<00:39, 2817.65it/s] 54%|█████▍    | 132968/244489 [01:00<00:39, 2813.85it/s] 55%|█████▍    | 133257/244489 [01:00<00:39, 2833.92it/s] 55%|█████▍    | 133542/244489 [01:01<00:39, 2796.48it/s] 55%|█████▍    | 133823/244489 [01:01<00:40, 2733.72it/s] 55%|█████▍    | 134097/244489 [01:01<00:41, 2651.07it/s] 55%|█████▍    | 134363/244489 [01:01<00:41, 2632.34it/s] 55%|█████▌    | 134627/244489 [01:01<00:42, 2613.76it/s] 55%|█████▌    | 134889/244489 [01:01<00:45, 2397.28it/s] 55%|█████▌    | 135133/244489 [01:01<00:46, 2328.37it/s] 55%|█████▌    | 135369/244489 [01:01<00:49, 2185.87it/s] 55%|█████▌    | 135656/244489 [01:01<00:45, 2368.82it/s] 56%|█████▌    | 135940/244489 [01:02<00:43, 2497.22it/s] 56%|█████▌    | 136210/244489 [01:02<00:42, 2554.24it/s] 56%|█████▌    | 136484/244489 [01:02<00:41, 2606.53it/s] 56%|█████▌    | 136755/244489 [01:02<00:40, 2636.09it/s] 56%|█████▌    | 137142/244489 [01:02<00:35, 2998.37it/s] 56%|█████▌    | 137444/244489 [01:02<00:36, 2894.72it/s] 56%|█████▋    | 137736/244489 [01:02<00:37, 2831.57it/s] 56%|█████▋    | 138021/244489 [01:02<00:38, 2764.43it/s] 57%|█████▋    | 138357/244489 [01:02<00:36, 2934.19it/s] 57%|█████▋    | 138653/244489 [01:03<00:46, 2281.02it/s] 57%|█████▋    | 138933/244489 [01:03<00:43, 2406.70it/s] 57%|█████▋    | 139325/244489 [01:03<00:37, 2796.42it/s] 57%|█████▋    | 139625/244489 [01:03<00:36, 2849.42it/s] 57%|█████▋    | 139925/244489 [01:03<00:36, 2841.89it/s] 57%|█████▋    | 140220/244489 [01:03<00:36, 2839.89it/s] 57%|█████▋    | 140511/244489 [01:03<00:36, 2845.31it/s] 58%|█████▊    | 140847/244489 [01:03<00:34, 2991.23it/s] 58%|█████▊    | 141223/244489 [01:03<00:32, 3214.67it/s] 58%|█████▊    | 141549/244489 [01:04<00:34, 3011.93it/s] 58%|█████▊    | 141856/244489 [01:04<00:34, 2932.67it/s] 58%|█████▊    | 142153/244489 [01:04<00:38, 2662.26it/s] 58%|█████▊    | 142439/244489 [01:04<00:37, 2712.56it/s] 58%|█████▊    | 142720/244489 [01:04<00:37, 2738.16it/s] 58%|█████▊    | 143005/244489 [01:04<00:36, 2767.02it/s] 59%|█████▊    | 143285/244489 [01:04<00:38, 2604.46it/s] 59%|█████▊    | 143587/244489 [01:04<00:37, 2717.94it/s] 59%|█████▉    | 143873/244489 [01:04<00:36, 2756.13it/s] 59%|█████▉    | 144182/244489 [01:05<00:35, 2851.04it/s] 59%|█████▉    | 144470/244489 [01:05<00:35, 2842.23it/s] 59%|█████▉    | 144756/244489 [01:05<00:36, 2751.77it/s] 59%|█████▉    | 145033/244489 [01:05<00:38, 2603.68it/s] 59%|█████▉    | 145326/244489 [01:05<00:36, 2693.37it/s] 60%|█████▉    | 145611/244489 [01:05<00:36, 2672.41it/s] 60%|█████▉    | 146025/244489 [01:05<00:31, 3087.60it/s] 60%|█████▉    | 146339/244489 [01:05<00:31, 3102.54it/s] 60%|█████▉    | 146657/244489 [01:05<00:31, 3122.88it/s] 60%|██████    | 146971/244489 [01:05<00:31, 3120.06it/s] 60%|██████    | 147285/244489 [01:06<00:31, 3112.06it/s] 60%|██████    | 147599/244489 [01:06<00:31, 3119.62it/s] 60%|██████    | 147912/244489 [01:06<00:35, 2729.44it/s] 61%|██████    | 148195/244489 [01:06<00:35, 2735.97it/s] 61%|██████    | 148476/244489 [01:06<00:35, 2741.91it/s] 61%|██████    | 148755/244489 [01:06<00:36, 2648.95it/s] 61%|██████    | 149034/244489 [01:06<00:35, 2686.21it/s] 61%|██████    | 149322/244489 [01:06<00:34, 2740.50it/s] 61%|██████    | 149599/244489 [01:06<00:36, 2617.75it/s] 61%|██████▏   | 149906/244489 [01:07<00:34, 2743.25it/s] 61%|██████▏   | 150220/244489 [01:07<00:33, 2854.39it/s] 62%|██████▏   | 150536/244489 [01:07<00:31, 2942.48it/s] 62%|██████▏   | 150849/244489 [01:07<00:31, 2996.68it/s] 62%|██████▏   | 151151/244489 [01:07<00:33, 2811.25it/s] 62%|██████▏   | 151436/244489 [01:07<00:33, 2788.00it/s] 62%|██████▏   | 151743/244489 [01:07<00:32, 2866.36it/s] 62%|██████▏   | 152055/244489 [01:07<00:31, 2937.28it/s] 62%|██████▏   | 152351/244489 [01:07<00:33, 2767.22it/s] 62%|██████▏   | 152631/244489 [01:08<00:34, 2671.64it/s] 63%|██████▎   | 152901/244489 [01:08<00:35, 2571.95it/s] 63%|██████▎   | 153210/244489 [01:08<00:33, 2715.08it/s] 63%|██████▎   | 153520/244489 [01:08<00:32, 2822.64it/s] 63%|██████▎   | 153817/244489 [01:08<00:31, 2856.53it/s] 63%|██████▎   | 154129/244489 [01:08<00:30, 2931.45it/s] 63%|██████▎   | 154426/244489 [01:08<00:30, 2940.86it/s] 63%|██████▎   | 154732/244489 [01:08<00:30, 2972.50it/s] 63%|██████▎   | 155044/244489 [01:08<00:29, 3015.87it/s] 64%|██████▎   | 155358/244489 [01:08<00:29, 3051.28it/s] 64%|██████▎   | 155664/244489 [01:09<00:30, 2955.14it/s] 64%|██████▍   | 155961/244489 [01:09<00:30, 2891.49it/s] 64%|██████▍   | 156251/244489 [01:09<00:30, 2861.15it/s] 64%|██████▍   | 156538/244489 [01:09<00:32, 2739.43it/s] 64%|██████▍   | 156814/244489 [01:09<00:33, 2642.05it/s] 64%|██████▍   | 157080/244489 [01:09<00:34, 2502.99it/s] 64%|██████▍   | 157332/244489 [01:09<00:36, 2412.76it/s] 64%|██████▍   | 157575/244489 [01:09<00:37, 2346.39it/s] 65%|██████▍   | 157811/244489 [01:09<00:37, 2305.33it/s] 65%|██████▍   | 158042/244489 [01:10<00:38, 2258.87it/s] 65%|██████▍   | 158269/244489 [01:10<00:38, 2250.35it/s] 65%|██████▍   | 158495/244489 [01:10<00:38, 2231.45it/s] 65%|██████▍   | 158719/244489 [01:10<00:38, 2212.14it/s] 65%|██████▌   | 158987/244489 [01:10<00:36, 2346.30it/s] 65%|██████▌   | 159256/244489 [01:10<00:34, 2446.41it/s] 65%|██████▌   | 159535/244489 [01:10<00:33, 2545.14it/s] 65%|██████▌   | 159821/244489 [01:10<00:32, 2636.24it/s] 65%|██████▌   | 160107/244489 [01:10<00:31, 2700.77it/s] 66%|██████▌   | 160388/244489 [01:10<00:30, 2732.22it/s] 66%|██████▌   | 160673/244489 [01:11<00:30, 2764.93it/s] 66%|██████▌   | 160957/244489 [01:11<00:29, 2785.96it/s] 66%|██████▌   | 161242/244489 [01:11<00:29, 2802.13it/s] 66%|██████▌   | 161523/244489 [01:11<00:30, 2753.05it/s] 66%|██████▌   | 161799/244489 [01:11<00:30, 2731.91it/s] 66%|██████▋   | 162073/244489 [01:11<00:31, 2644.61it/s] 66%|██████▋   | 162339/244489 [01:11<00:31, 2586.54it/s] 67%|██████▋   | 162664/244489 [01:11<00:29, 2775.48it/s] 67%|██████▋   | 163056/244489 [01:11<00:26, 3108.60it/s] 67%|██████▋   | 163469/244489 [01:11<00:23, 3408.11it/s] 67%|██████▋   | 163812/244489 [01:12<00:24, 3267.95it/s] 67%|██████▋   | 164142/244489 [01:12<00:28, 2825.73it/s] 67%|██████▋   | 164555/244489 [01:12<00:25, 3166.89it/s] 67%|██████▋   | 164963/244489 [01:12<00:23, 3413.74it/s] 68%|██████▊   | 165374/244489 [01:12<00:21, 3607.47it/s] 68%|██████▊   | 165783/244489 [01:12<00:21, 3744.92it/s] 68%|██████▊   | 166165/244489 [01:12<00:24, 3217.06it/s] 68%|██████▊   | 166505/244489 [01:12<00:27, 2881.36it/s] 68%|██████▊   | 166811/244489 [01:13<00:27, 2786.86it/s] 68%|██████▊   | 167232/244489 [01:13<00:24, 3143.72it/s] 69%|██████▊   | 167590/244489 [01:13<00:23, 3259.08it/s] 69%|██████▊   | 167949/244489 [01:13<00:22, 3349.49it/s] 69%|██████▉   | 168306/244489 [01:13<00:22, 3410.07it/s] 69%|██████▉   | 168663/244489 [01:13<00:21, 3453.46it/s] 69%|██████▉   | 169022/244489 [01:13<00:21, 3491.22it/s] 69%|██████▉   | 169382/244489 [01:13<00:21, 3520.83it/s] 69%|██████▉   | 169737/244489 [01:13<00:26, 2835.24it/s] 70%|██████▉   | 170044/244489 [01:14<00:32, 2295.30it/s] 70%|██████▉   | 170304/244489 [01:14<00:32, 2297.67it/s] 70%|██████▉   | 170556/244489 [01:14<00:33, 2212.69it/s] 70%|██████▉   | 170792/244489 [01:14<00:34, 2155.08it/s] 70%|██████▉   | 171017/244489 [01:14<00:34, 2154.55it/s] 70%|███████   | 171240/244489 [01:14<00:34, 2135.84it/s] 70%|███████   | 171459/244489 [01:14<00:34, 2133.67it/s] 70%|███████   | 171676/244489 [01:14<00:34, 2141.45it/s] 70%|███████   | 171902/244489 [01:15<00:33, 2172.12it/s] 70%|███████   | 172121/244489 [01:15<00:34, 2108.09it/s] 70%|███████   | 172342/244489 [01:15<00:33, 2133.78it/s] 71%|███████   | 172557/244489 [01:15<00:33, 2134.15it/s] 71%|███████   | 172778/244489 [01:15<00:33, 2155.99it/s] 71%|███████   | 172995/244489 [01:15<00:33, 2129.00it/s] 71%|███████   | 173210/244489 [01:15<00:33, 2134.20it/s] 71%|███████   | 173424/244489 [01:15<00:33, 2101.22it/s] 71%|███████   | 173650/244489 [01:15<00:32, 2147.09it/s] 71%|███████   | 173866/244489 [01:15<00:35, 1995.66it/s] 71%|███████   | 174079/244489 [01:16<00:34, 2032.13it/s] 71%|███████▏  | 174313/244489 [01:16<00:33, 2118.57it/s] 71%|███████▏  | 174537/244489 [01:16<00:32, 2152.58it/s] 71%|███████▏  | 174754/244489 [01:16<00:45, 1518.96it/s] 72%|███████▏  | 174933/244489 [01:16<01:09, 1004.93it/s] 72%|███████▏  | 175074/244489 [01:17<01:33, 743.89it/s]  72%|███████▏  | 175184/244489 [01:17<01:52, 618.61it/s] 72%|███████▏  | 175272/244489 [01:17<02:11, 525.54it/s] 72%|███████▏  | 175344/244489 [01:17<02:13, 516.30it/s] 72%|███████▏  | 175409/244489 [01:18<02:33, 449.76it/s] 72%|███████▏  | 175463/244489 [01:18<02:47, 412.25it/s] 72%|███████▏  | 175510/244489 [01:18<02:59, 384.60it/s] 72%|███████▏  | 175552/244489 [01:18<03:15, 352.26it/s] 72%|███████▏  | 175589/244489 [01:18<03:25, 335.30it/s] 72%|███████▏  | 175625/244489 [01:18<03:22, 339.68it/s] 72%|███████▏  | 175660/244489 [01:19<03:29, 328.25it/s] 72%|███████▏  | 175694/244489 [01:19<03:35, 318.81it/s] 72%|███████▏  | 175726/244489 [01:19<04:07, 277.47it/s] 72%|███████▏  | 175776/244489 [01:19<03:28, 328.96it/s] 72%|███████▏  | 175832/244489 [01:19<02:58, 385.40it/s] 72%|███████▏  | 175873/244489 [01:19<02:55, 390.02it/s] 72%|███████▏  | 175914/244489 [01:19<02:56, 389.42it/s] 72%|███████▏  | 175963/244489 [01:19<02:44, 415.47it/s] 72%|███████▏  | 176009/244489 [01:19<02:40, 426.10it/s] 72%|███████▏  | 176061/244489 [01:20<02:31, 452.08it/s] 72%|███████▏  | 176109/244489 [01:20<02:29, 458.35it/s] 72%|███████▏  | 176156/244489 [01:20<02:31, 449.92it/s] 72%|███████▏  | 176202/244489 [01:20<02:48, 406.44it/s] 72%|███████▏  | 176255/244489 [01:20<02:37, 433.63it/s] 72%|███████▏  | 176302/244489 [01:20<02:34, 442.49it/s] 72%|███████▏  | 176360/244489 [01:20<02:21, 480.26it/s] 72%|███████▏  | 176418/244489 [01:20<02:14, 506.69it/s] 72%|███████▏  | 176470/244489 [01:20<02:13, 508.07it/s] 72%|███████▏  | 176529/244489 [01:20<02:07, 531.19it/s] 72%|███████▏  | 176590/244489 [01:21<02:03, 551.67it/s] 72%|███████▏  | 176649/244489 [01:21<02:00, 561.42it/s] 72%|███████▏  | 176708/244489 [01:21<01:59, 569.48it/s] 72%|███████▏  | 176768/244489 [01:21<01:57, 575.98it/s] 72%|███████▏  | 176828/244489 [01:21<01:56, 581.16it/s] 72%|███████▏  | 176888/244489 [01:21<01:55, 583.82it/s] 72%|███████▏  | 176947/244489 [01:21<01:55, 584.75it/s] 72%|███████▏  | 177007/244489 [01:21<01:54, 586.88it/s] 72%|███████▏  | 177066/244489 [01:21<01:57, 574.71it/s] 72%|███████▏  | 177124/244489 [01:22<02:19, 482.84it/s] 72%|███████▏  | 177175/244489 [01:22<02:30, 448.37it/s] 72%|███████▏  | 177231/244489 [01:22<02:21, 476.21it/s] 73%|███████▎  | 177288/244489 [01:22<02:14, 499.78it/s] 73%|███████▎  | 177341/244489 [01:22<02:12, 507.06it/s] 73%|███████▎  | 177397/244489 [01:22<02:08, 521.58it/s] 73%|███████▎  | 177458/244489 [01:22<02:02, 545.39it/s] 73%|███████▎  | 177518/244489 [01:22<01:59, 559.25it/s] 73%|███████▎  | 177579/244489 [01:22<01:57, 571.85it/s] 73%|███████▎  | 177637/244489 [01:23<01:57, 568.57it/s] 73%|███████▎  | 177695/244489 [01:23<01:57, 566.66it/s] 73%|███████▎  | 177753/244489 [01:23<01:57, 569.43it/s] 73%|███████▎  | 177811/244489 [01:23<02:00, 554.84it/s] 73%|███████▎  | 177867/244489 [01:23<02:00, 553.75it/s] 73%|███████▎  | 177925/244489 [01:23<01:58, 559.58it/s] 73%|███████▎  | 177985/244489 [01:23<01:56, 570.28it/s] 73%|███████▎  | 178043/244489 [01:23<01:56, 569.76it/s] 73%|███████▎  | 178104/244489 [01:23<01:54, 579.71it/s] 73%|███████▎  | 178164/244489 [01:23<01:53, 584.16it/s] 73%|███████▎  | 178224/244489 [01:24<01:53, 586.21it/s] 73%|███████▎  | 178283/244489 [01:24<01:53, 582.81it/s] 73%|███████▎  | 178344/244489 [01:24<01:52, 590.57it/s] 73%|███████▎  | 178404/244489 [01:24<01:54, 575.90it/s] 73%|███████▎  | 178470/244489 [01:24<01:50, 598.69it/s] 73%|███████▎  | 178546/244489 [01:24<01:42, 645.28it/s] 73%|███████▎  | 178611/244489 [01:24<01:43, 636.88it/s] 73%|███████▎  | 178675/244489 [01:24<01:46, 619.09it/s] 73%|███████▎  | 178738/244489 [01:24<01:49, 600.85it/s] 73%|███████▎  | 178799/244489 [01:24<01:50, 595.73it/s] 73%|███████▎  | 178859/244489 [01:25<02:07, 516.57it/s] 73%|███████▎  | 178936/244489 [01:25<01:52, 581.17it/s] 73%|███████▎  | 178997/244489 [01:25<01:55, 569.06it/s] 73%|███████▎  | 179056/244489 [01:25<01:55, 568.75it/s] 73%|███████▎  | 179116/244489 [01:25<01:53, 575.77it/s] 73%|███████▎  | 179176/244489 [01:25<01:52, 580.37it/s] 73%|███████▎  | 179235/244489 [01:25<01:52, 578.71it/s] 73%|███████▎  | 179294/244489 [01:25<01:53, 576.47it/s] 73%|███████▎  | 179352/244489 [01:25<01:53, 575.18it/s] 73%|███████▎  | 179423/244489 [01:26<01:46, 613.68it/s] 73%|███████▎  | 179488/244489 [01:26<01:44, 624.23it/s] 73%|███████▎  | 179551/244489 [01:26<01:46, 607.32it/s] 73%|███████▎  | 179612/244489 [01:26<01:49, 594.43it/s] 73%|███████▎  | 179672/244489 [01:26<01:50, 586.90it/s] 74%|███████▎  | 179733/244489 [01:26<01:49, 591.53it/s] 74%|███████▎  | 179803/244489 [01:26<01:48, 593.56it/s] 74%|███████▎  | 179863/244489 [01:26<01:54, 565.29it/s] 74%|███████▎  | 179927/244489 [01:26<01:50, 585.65it/s] 74%|███████▎  | 179986/244489 [01:27<01:50, 583.31it/s] 74%|███████▎  | 180050/244489 [01:27<01:47, 597.41it/s] 74%|███████▎  | 180110/244489 [01:27<01:48, 595.49it/s] 74%|███████▎  | 180172/244489 [01:27<01:46, 601.27it/s] 74%|███████▎  | 180233/244489 [01:27<01:47, 600.45it/s] 74%|███████▎  | 180294/244489 [01:27<01:47, 597.57it/s] 74%|███████▍  | 180354/244489 [01:27<01:47, 594.22it/s] 74%|███████▍  | 180417/244489 [01:27<01:47, 593.79it/s] 74%|███████▍  | 180477/244489 [01:27<01:53, 562.32it/s] 74%|███████▍  | 180534/244489 [01:27<01:55, 556.04it/s] 74%|███████▍  | 180590/244489 [01:28<01:57, 542.35it/s] 74%|███████▍  | 180645/244489 [01:28<02:01, 527.25it/s] 74%|███████▍  | 180698/244489 [01:28<02:13, 476.27it/s] 74%|███████▍  | 180759/244489 [01:28<02:04, 511.29it/s] 74%|███████▍  | 180822/244489 [01:28<01:57, 541.73it/s] 74%|███████▍  | 180885/244489 [01:28<01:52, 565.19it/s] 74%|███████▍  | 180948/244489 [01:28<01:49, 581.51it/s] 74%|███████▍  | 181011/244489 [01:28<01:46, 594.75it/s] 74%|███████▍  | 181071/244489 [01:28<01:46, 594.94it/s] 74%|███████▍  | 181131/244489 [01:29<01:53, 556.61it/s] 74%|███████▍  | 181200/244489 [01:29<01:48, 582.67it/s] 74%|███████▍  | 181259/244489 [01:29<01:49, 575.43it/s] 74%|███████▍  | 181456/244489 [01:29<01:04, 971.52it/s] 74%|███████▍  | 181649/244489 [01:29<00:50, 1246.09it/s] 74%|███████▍  | 181790/244489 [01:29<00:48, 1293.49it/s] 74%|███████▍  | 181987/244489 [01:29<00:41, 1489.71it/s] 75%|███████▍  | 182175/244489 [01:29<00:39, 1571.91it/s] 75%|███████▍  | 182350/244489 [01:29<00:38, 1618.53it/s] 75%|███████▍  | 182686/244489 [01:29<00:29, 2130.24it/s] 75%|███████▍  | 183007/244489 [01:30<00:25, 2447.94it/s] 75%|███████▍  | 183308/244489 [01:30<00:23, 2613.74it/s] 75%|███████▌  | 183582/244489 [01:30<00:22, 2650.38it/s] 75%|███████▌  | 183867/244489 [01:30<00:22, 2709.79it/s] 75%|███████▌  | 184215/244489 [01:30<00:20, 2937.78it/s] 75%|███████▌  | 184521/244489 [01:30<00:20, 2972.01it/s] 76%|███████▌  | 184819/244489 [01:30<00:21, 2823.91it/s] 76%|███████▌  | 185104/244489 [01:30<00:20, 2828.47it/s] 76%|███████▌  | 185389/244489 [01:30<00:21, 2699.93it/s] 76%|███████▌  | 185661/244489 [01:31<00:25, 2286.80it/s] 76%|███████▌  | 185901/244489 [01:31<00:28, 2065.31it/s] 76%|███████▌  | 186175/244489 [01:31<00:26, 2230.00it/s] 76%|███████▌  | 186409/244489 [01:31<00:27, 2115.34it/s] 76%|███████▋  | 186727/244489 [01:31<00:24, 2388.86it/s] 76%|███████▋  | 186976/244489 [01:31<00:24, 2315.29it/s] 77%|███████▋  | 187280/244489 [01:31<00:22, 2510.02it/s] 77%|███████▋  | 187539/244489 [01:31<00:24, 2319.33it/s] 77%|███████▋  | 187841/244489 [01:32<00:22, 2505.98it/s] 77%|███████▋  | 188099/244489 [01:32<00:22, 2476.15it/s] 77%|███████▋  | 188352/244489 [01:32<00:22, 2479.08it/s] 77%|███████▋  | 188660/244489 [01:32<00:21, 2647.09it/s] 77%|███████▋  | 188929/244489 [01:32<00:24, 2296.02it/s] 77%|███████▋  | 189199/244489 [01:32<00:23, 2397.27it/s] 78%|███████▊  | 189506/244489 [01:32<00:21, 2579.40it/s] 78%|███████▊  | 189781/244489 [01:32<00:20, 2622.42it/s] 78%|███████▊  | 190066/244489 [01:32<00:20, 2687.21it/s] 78%|███████▊  | 190340/244489 [01:33<00:23, 2275.89it/s] 78%|███████▊  | 190609/244489 [01:33<00:22, 2380.93it/s] 78%|███████▊  | 190887/244489 [01:33<00:21, 2488.37it/s] 78%|███████▊  | 191145/244489 [01:33<00:23, 2296.56it/s] 78%|███████▊  | 191384/244489 [01:33<00:24, 2173.77it/s] 78%|███████▊  | 191608/244489 [01:33<00:25, 2082.09it/s] 78%|███████▊  | 191882/244489 [01:33<00:23, 2253.76it/s] 79%|███████▊  | 192113/244489 [01:33<00:23, 2253.28it/s] 79%|███████▊  | 192343/244489 [01:33<00:24, 2138.41it/s] 79%|███████▉  | 192561/244489 [01:34<00:24, 2131.02it/s] 79%|███████▉  | 192879/244489 [01:34<00:21, 2421.97it/s] 79%|███████▉  | 193190/244489 [01:34<00:19, 2617.26it/s] 79%|███████▉  | 193494/244489 [01:34<00:18, 2699.16it/s] 79%|███████▉  | 193821/244489 [01:34<00:17, 2849.05it/s] 79%|███████▉  | 194109/244489 [01:34<00:18, 2712.43it/s] 80%|███████▉  | 194472/244489 [01:34<00:16, 2970.90it/s] 80%|███████▉  | 194840/244489 [01:34<00:15, 3173.93it/s] 80%|███████▉  | 195199/244489 [01:34<00:14, 3293.05it/s] 80%|███████▉  | 195531/244489 [01:34<00:15, 3198.99it/s] 80%|████████  | 195896/244489 [01:35<00:14, 3327.32it/s] 80%|████████  | 196263/244489 [01:35<00:14, 3427.15it/s] 80%|████████  | 196667/244489 [01:35<00:13, 3607.14it/s] 81%|████████  | 197078/244489 [01:35<00:12, 3755.56it/s] 81%|████████  | 197487/244489 [01:35<00:12, 3854.21it/s] 81%|████████  | 197881/244489 [01:35<00:12, 3879.08it/s] 81%|████████  | 198278/244489 [01:35<00:11, 3903.79it/s] 81%|████████▏ | 198679/244489 [01:35<00:11, 3933.65it/s] 81%|████████▏ | 199077/244489 [01:35<00:11, 3938.93it/s] 82%|████████▏ | 199472/244489 [01:36<00:13, 3363.45it/s] 82%|████████▏ | 199824/244489 [01:36<00:15, 2968.67it/s] 82%|████████▏ | 200138/244489 [01:36<00:15, 2841.21it/s] 82%|████████▏ | 200475/244489 [01:36<00:14, 2972.86it/s] 82%|████████▏ | 200810/244489 [01:36<00:14, 3070.54it/s] 82%|████████▏ | 201169/244489 [01:36<00:13, 3212.75it/s] 82%|████████▏ | 201551/244489 [01:36<00:12, 3381.54it/s] 83%|████████▎ | 201953/244489 [01:36<00:11, 3563.49it/s] 83%|████████▎ | 202348/244489 [01:36<00:11, 3675.06it/s] 83%|████████▎ | 202759/244489 [01:37<00:10, 3800.94it/s] 83%|████████▎ | 203146/244489 [01:37<00:10, 3819.26it/s] 83%|████████▎ | 203531/244489 [01:37<00:10, 3819.55it/s] 83%|████████▎ | 203915/244489 [01:37<00:11, 3655.64it/s] 84%|████████▎ | 204284/244489 [01:37<00:11, 3569.16it/s] 84%|████████▎ | 204643/244489 [01:37<00:15, 2652.21it/s] 84%|████████▍ | 205016/244489 [01:37<00:13, 2901.69it/s] 84%|████████▍ | 205394/244489 [01:37<00:12, 3119.51it/s] 84%|████████▍ | 205790/244489 [01:37<00:11, 3339.13it/s] 84%|████████▍ | 206180/244489 [01:38<00:10, 3491.96it/s] 84%|████████▍ | 206562/244489 [01:38<00:10, 3582.56it/s] 85%|████████▍ | 206959/244489 [01:38<00:10, 3692.82it/s] 85%|████████▍ | 207368/244489 [01:38<00:09, 3805.97it/s] 85%|████████▍ | 207756/244489 [01:38<00:09, 3803.66it/s] 85%|████████▌ | 208142/244489 [01:38<00:09, 3738.40it/s] 85%|████████▌ | 208520/244489 [01:38<00:09, 3715.15it/s] 85%|████████▌ | 208943/244489 [01:38<00:09, 3864.22it/s] 86%|████████▌ | 209332/244489 [01:38<00:09, 3759.79it/s] 86%|████████▌ | 209710/244489 [01:39<00:16, 2119.54it/s] 86%|████████▌ | 210006/244489 [01:39<00:18, 1833.40it/s] 86%|████████▌ | 210252/244489 [01:39<00:17, 1937.73it/s] 86%|████████▌ | 210497/244489 [01:39<00:17, 1916.14it/s] 86%|████████▌ | 210724/244489 [01:39<00:17, 1985.87it/s] 86%|████████▋ | 210950/244489 [01:40<00:20, 1611.82it/s] 86%|████████▋ | 211140/244489 [01:40<00:20, 1665.49it/s] 86%|████████▋ | 211329/244489 [01:40<00:19, 1704.81it/s] 87%|████████▋ | 211546/244489 [01:40<00:18, 1818.07it/s] 87%|████████▋ | 211749/244489 [01:40<00:17, 1868.95it/s] 87%|████████▋ | 212069/244489 [01:40<00:14, 2227.05it/s] 87%|████████▋ | 212304/244489 [01:40<00:14, 2237.09it/s] 87%|████████▋ | 212689/244489 [01:40<00:11, 2691.40it/s] 87%|████████▋ | 212967/244489 [01:40<00:12, 2584.24it/s] 87%|████████▋ | 213233/244489 [01:40<00:12, 2523.98it/s] 87%|████████▋ | 213491/244489 [01:41<00:12, 2395.56it/s] 87%|████████▋ | 213735/244489 [01:41<00:13, 2355.29it/s] 88%|████████▊ | 213974/244489 [01:41<00:12, 2357.55it/s] 88%|████████▊ | 214213/244489 [01:41<00:12, 2366.00it/s] 88%|████████▊ | 214461/244489 [01:41<00:12, 2396.62it/s] 88%|████████▊ | 214717/244489 [01:41<00:12, 2441.97it/s] 88%|████████▊ | 214963/244489 [01:41<00:12, 2418.08it/s] 88%|████████▊ | 215237/244489 [01:41<00:11, 2510.00it/s] 88%|████████▊ | 215516/244489 [01:41<00:11, 2591.33it/s] 88%|████████▊ | 215801/244489 [01:42<00:10, 2667.82it/s] 88%|████████▊ | 216074/244489 [01:42<00:10, 2620.74it/s] 88%|████████▊ | 216337/244489 [01:42<00:11, 2421.22it/s] 89%|████████▊ | 216599/244489 [01:42<00:11, 2474.79it/s] 89%|████████▊ | 216854/244489 [01:42<00:11, 2494.83it/s] 89%|████████▉ | 217134/244489 [01:42<00:10, 2581.65it/s] 89%|████████▉ | 217394/244489 [01:42<00:10, 2575.71it/s] 89%|████████▉ | 217666/244489 [01:42<00:10, 2617.29it/s] 89%|████████▉ | 218057/244489 [01:42<00:08, 2998.19it/s] 89%|████████▉ | 218473/244489 [01:42<00:07, 3340.53it/s] 90%|████████▉ | 218886/244489 [01:43<00:07, 3575.27it/s] 90%|████████▉ | 219245/244489 [01:43<00:07, 3393.66it/s] 90%|████████▉ | 219587/244489 [01:43<00:07, 3115.88it/s] 90%|████████▉ | 219905/244489 [01:43<00:08, 3017.36it/s] 90%|█████████ | 220211/244489 [01:43<00:08, 2851.37it/s] 90%|█████████ | 220500/244489 [01:43<00:08, 2793.83it/s] 90%|█████████ | 220782/244489 [01:43<00:08, 2796.65it/s] 90%|█████████ | 221064/244489 [01:43<00:08, 2663.73it/s] 91%|█████████ | 221333/244489 [01:44<00:10, 2156.66it/s] 91%|█████████ | 221608/244489 [01:44<00:09, 2299.06it/s] 91%|█████████ | 221893/244489 [01:44<00:09, 2439.43it/s] 91%|█████████ | 222173/244489 [01:44<00:08, 2533.58it/s] 91%|█████████ | 222442/244489 [01:44<00:08, 2576.63it/s] 91%|█████████ | 222720/244489 [01:44<00:08, 2633.11it/s] 91%|█████████ | 223030/244489 [01:44<00:07, 2766.45it/s] 91%|█████████▏| 223448/244489 [01:44<00:06, 3177.89it/s] 92%|█████████▏| 223862/244489 [01:44<00:05, 3458.68it/s] 92%|█████████▏| 224287/244489 [01:44<00:05, 3692.16it/s] 92%|█████████▏| 224694/244489 [01:45<00:05, 3803.39it/s] 92%|█████████▏| 225077/244489 [01:45<00:05, 3741.35it/s] 92%|█████████▏| 225456/244489 [01:45<00:05, 3752.58it/s] 92%|█████████▏| 225833/244489 [01:45<00:05, 3197.87it/s] 93%|█████████▎| 226168/244489 [01:45<00:06, 2673.14it/s] 93%|█████████▎| 226459/244489 [01:45<00:06, 2673.23it/s] 93%|█████████▎| 226743/244489 [01:45<00:06, 2672.28it/s] 93%|█████████▎| 227022/244489 [01:45<00:06, 2694.18it/s] 93%|█████████▎| 227300/244489 [01:46<00:06, 2703.19it/s] 93%|█████████▎| 227577/244489 [01:46<00:06, 2685.65it/s] 93%|█████████▎| 227850/244489 [01:46<00:06, 2670.69it/s] 93%|█████████▎| 228120/244489 [01:46<00:06, 2622.44it/s] 93%|█████████▎| 228385/244489 [01:46<00:06, 2457.18it/s] 94%|█████████▎| 228634/244489 [01:46<00:06, 2281.23it/s] 94%|█████████▎| 228873/244489 [01:46<00:06, 2307.94it/s] 94%|█████████▎| 229129/244489 [01:46<00:06, 2376.84it/s] 94%|█████████▍| 229387/244489 [01:46<00:06, 2432.67it/s] 94%|█████████▍| 229633/244489 [01:47<00:07, 1958.48it/s] 94%|█████████▍| 229870/244489 [01:47<00:07, 2059.98it/s] 94%|█████████▍| 230237/244489 [01:47<00:05, 2479.69it/s] 94%|█████████▍| 230600/244489 [01:47<00:04, 2792.12it/s] 94%|█████████▍| 230978/244489 [01:47<00:04, 3068.03it/s] 95%|█████████▍| 231358/244489 [01:47<00:04, 3275.47it/s] 95%|█████████▍| 231709/244489 [01:47<00:03, 3342.27it/s] 95%|█████████▍| 232050/244489 [01:47<00:03, 3353.82it/s] 95%|█████████▌| 232391/244489 [01:47<00:04, 2968.81it/s] 95%|█████████▌| 232700/244489 [01:48<00:04, 2855.89it/s] 95%|█████████▌| 232994/244489 [01:48<00:04, 2775.04it/s] 95%|█████████▌| 233278/244489 [01:48<00:04, 2722.92it/s] 96%|█████████▌| 233554/244489 [01:48<00:04, 2576.97it/s] 96%|█████████▌| 233823/244489 [01:48<00:04, 2563.58it/s] 96%|█████████▌| 234082/244489 [01:48<00:05, 2030.09it/s] 96%|█████████▌| 234331/244489 [01:48<00:04, 2137.75it/s] 96%|█████████▌| 234591/244489 [01:48<00:04, 2233.14it/s] 96%|█████████▌| 234854/244489 [01:49<00:04, 2335.65it/s] 96%|█████████▌| 235098/244489 [01:49<00:04, 1902.02it/s] 96%|█████████▌| 235308/244489 [01:49<00:07, 1215.32it/s] 96%|█████████▋| 235473/244489 [01:49<00:08, 1014.72it/s] 96%|█████████▋| 235608/244489 [01:50<00:09, 905.16it/s]  96%|█████████▋| 235722/244489 [01:50<00:10, 848.02it/s] 96%|█████████▋| 235822/244489 [01:50<00:11, 785.12it/s] 96%|█████████▋| 235910/244489 [01:50<00:11, 756.40it/s] 97%|█████████▋| 235992/244489 [01:50<00:11, 735.12it/s] 97%|█████████▋| 236069/244489 [01:50<00:11, 711.21it/s] 97%|█████████▋| 236142/244489 [01:50<00:11, 699.72it/s] 97%|█████████▋| 236213/244489 [01:50<00:12, 688.94it/s] 97%|█████████▋| 236283/244489 [01:51<00:11, 683.92it/s] 97%|█████████▋| 236352/244489 [01:51<00:12, 677.96it/s] 97%|█████████▋| 236420/244489 [01:51<00:12, 669.48it/s] 97%|█████████▋| 236491/244489 [01:51<00:11, 678.27it/s] 97%|█████████▋| 236559/244489 [01:51<00:11, 665.21it/s] 97%|█████████▋| 236626/244489 [01:51<00:12, 655.05it/s] 97%|█████████▋| 236692/244489 [01:51<00:12, 644.96it/s] 97%|█████████▋| 236757/244489 [01:51<00:12, 601.79it/s] 97%|█████████▋| 236818/244489 [01:51<00:13, 572.07it/s] 97%|█████████▋| 236879/244489 [01:52<00:13, 581.47it/s] 97%|█████████▋| 236940/244489 [01:52<00:12, 587.64it/s] 97%|█████████▋| 237000/244489 [01:52<00:12, 584.52it/s] 97%|█████████▋| 237059/244489 [01:52<00:12, 573.21it/s] 97%|█████████▋| 237117/244489 [01:52<00:13, 566.02it/s] 97%|█████████▋| 237174/244489 [01:52<00:13, 561.55it/s] 97%|█████████▋| 237231/244489 [01:52<00:13, 557.09it/s] 97%|█████████▋| 237287/244489 [01:52<00:13, 540.31it/s] 97%|█████████▋| 237342/244489 [01:52<00:13, 530.01it/s] 97%|█████████▋| 237397/244489 [01:52<00:13, 526.40it/s] 97%|█████████▋| 237450/244489 [01:53<00:13, 514.05it/s] 97%|█████████▋| 237506/244489 [01:53<00:13, 524.71it/s] 97%|█████████▋| 237562/244489 [01:53<00:12, 533.65it/s] 97%|█████████▋| 237618/244489 [01:53<00:12, 539.36it/s] 97%|█████████▋| 237676/244489 [01:53<00:12, 548.97it/s] 97%|█████████▋| 237732/244489 [01:53<00:12, 550.41it/s] 97%|█████████▋| 237788/244489 [01:53<00:12, 546.61it/s] 97%|█████████▋| 237848/244489 [01:53<00:11, 561.69it/s] 97%|█████████▋| 237909/244489 [01:53<00:11, 574.34it/s] 97%|█████████▋| 237970/244489 [01:53<00:11, 584.55it/s] 97%|█████████▋| 238032/244489 [01:54<00:10, 594.49it/s] 97%|█████████▋| 238092/244489 [01:54<00:10, 591.54it/s] 97%|█████████▋| 238155/244489 [01:54<00:10, 602.44it/s] 97%|█████████▋| 238223/244489 [01:54<00:10, 602.56it/s] 97%|█████████▋| 238286/244489 [01:54<00:10, 610.26it/s] 97%|█████████▋| 238348/244489 [01:54<00:10, 604.03it/s] 98%|█████████▊| 238414/244489 [01:54<00:09, 620.04it/s] 98%|█████████▊| 238483/244489 [01:54<00:09, 640.32it/s] 98%|█████████▊| 238557/244489 [01:54<00:08, 666.58it/s] 98%|█████████▊| 238625/244489 [01:55<00:08, 669.95it/s] 98%|█████████▊| 238712/244489 [01:55<00:07, 729.05it/s] 98%|█████████▊| 238802/244489 [01:55<00:07, 779.29it/s] 98%|█████████▊| 238895/244489 [01:55<00:06, 823.36it/s] 98%|█████████▊| 238983/244489 [01:55<00:06, 839.79it/s] 98%|█████████▊| 239068/244489 [01:55<00:06, 838.16it/s] 98%|█████████▊| 239152/244489 [01:55<00:06, 791.35it/s] 98%|█████████▊| 239232/244489 [01:55<00:06, 757.05it/s] 98%|█████████▊| 239309/244489 [01:55<00:07, 735.02it/s] 98%|█████████▊| 239383/244489 [01:55<00:07, 711.18it/s] 98%|█████████▊| 239455/244489 [01:56<00:07, 706.07it/s] 98%|█████████▊| 239526/244489 [01:56<00:07, 700.23it/s] 98%|█████████▊| 239597/244489 [01:56<00:07, 679.72it/s] 98%|█████████▊| 239666/244489 [01:56<00:07, 672.47it/s] 98%|█████████▊| 239734/244489 [01:56<00:07, 673.72it/s] 98%|█████████▊| 239802/244489 [01:56<00:06, 674.47it/s] 98%|█████████▊| 239871/244489 [01:56<00:06, 677.66it/s] 98%|█████████▊| 239939/244489 [01:56<00:06, 676.13it/s] 98%|█████████▊| 240007/244489 [01:56<00:06, 657.89it/s] 98%|█████████▊| 240075/244489 [01:57<00:06, 663.17it/s] 98%|█████████▊| 240144/244489 [01:57<00:06, 669.37it/s] 98%|█████████▊| 240212/244489 [01:57<00:06, 658.21it/s] 98%|█████████▊| 240304/244489 [01:57<00:05, 731.30it/s] 98%|█████████▊| 240378/244489 [01:57<00:05, 713.43it/s] 98%|█████████▊| 240450/244489 [01:57<00:05, 675.89it/s] 98%|█████████▊| 240519/244489 [01:57<00:06, 653.14it/s] 98%|█████████▊| 240588/244489 [01:57<00:05, 660.90it/s] 98%|█████████▊| 240655/244489 [01:57<00:05, 662.38it/s] 98%|█████████▊| 240723/244489 [01:57<00:05, 665.45it/s] 98%|█████████▊| 240791/244489 [01:58<00:05, 668.59it/s] 99%|█████████▊| 240858/244489 [01:58<00:05, 664.47it/s] 99%|█████████▊| 240925/244489 [01:58<00:05, 665.94it/s] 99%|█████████▊| 240992/244489 [01:58<00:05, 664.73it/s] 99%|█████████▊| 241061/244489 [01:58<00:05, 670.07it/s] 99%|█████████▊| 241129/244489 [01:58<00:05, 668.08it/s] 99%|█████████▊| 241196/244489 [01:58<00:04, 662.71it/s] 99%|█████████▊| 241263/244489 [01:58<00:04, 662.97it/s] 99%|█████████▊| 241330/244489 [01:58<00:04, 660.69it/s] 99%|█████████▊| 241397/244489 [01:59<00:04, 655.00it/s] 99%|█████████▉| 241464/244489 [01:59<00:04, 658.09it/s] 99%|█████████▉| 241554/244489 [01:59<00:04, 706.32it/s] 99%|█████████▉| 241625/244489 [01:59<00:04, 683.75it/s] 99%|█████████▉| 241694/244489 [01:59<00:04, 672.43it/s] 99%|█████████▉| 241762/244489 [01:59<00:04, 672.20it/s] 99%|█████████▉| 241830/244489 [01:59<00:04, 663.14it/s] 99%|█████████▉| 241897/244489 [01:59<00:03, 650.42it/s] 99%|█████████▉| 241964/244489 [01:59<00:03, 653.42it/s] 99%|█████████▉| 242030/244489 [01:59<00:03, 645.80it/s] 99%|█████████▉| 242096/244489 [02:00<00:03, 648.33it/s] 99%|█████████▉| 242161/244489 [02:00<00:03, 636.08it/s] 99%|█████████▉| 242225/244489 [02:00<00:03, 632.65it/s] 99%|█████████▉| 242289/244489 [02:00<00:03, 630.86it/s] 99%|█████████▉| 242354/244489 [02:00<00:03, 635.95it/s] 99%|█████████▉| 242423/244489 [02:00<00:03, 651.82it/s] 99%|█████████▉| 242489/244489 [02:00<00:03, 647.65it/s] 99%|█████████▉| 242554/244489 [02:00<00:02, 647.85it/s] 99%|█████████▉| 242621/244489 [02:00<00:02, 652.65it/s] 99%|█████████▉| 242689/244489 [02:00<00:02, 658.39it/s] 99%|█████████▉| 242755/244489 [02:01<00:02, 657.63it/s] 99%|█████████▉| 242821/244489 [02:01<00:02, 652.04it/s] 99%|█████████▉| 242887/244489 [02:01<00:02, 647.43it/s] 99%|█████████▉| 242952/244489 [02:01<00:02, 640.19it/s] 99%|█████████▉| 243017/244489 [02:01<00:02, 638.50it/s] 99%|█████████▉| 243087/244489 [02:01<00:02, 656.45it/s] 99%|█████████▉| 243154/244489 [02:01<00:02, 659.40it/s] 99%|█████████▉| 243220/244489 [02:01<00:01, 656.81it/s]100%|█████████▉| 243286/244489 [02:01<00:01, 655.86it/s]100%|█████████▉| 243352/244489 [02:01<00:01, 655.34it/s]100%|█████████▉| 243418/244489 [02:02<00:01, 652.84it/s]100%|█████████▉| 243484/244489 [02:02<00:01, 649.16it/s]100%|█████████▉| 243549/244489 [02:02<00:01, 644.76it/s]100%|█████████▉| 243617/244489 [02:02<00:01, 636.70it/s]100%|█████████▉| 243684/244489 [02:02<00:01, 646.08it/s]100%|█████████▉| 243749/244489 [02:02<00:01, 635.18it/s]100%|█████████▉| 243813/244489 [02:02<00:01, 626.44it/s]100%|█████████▉| 243876/244489 [02:02<00:00, 623.37it/s]100%|█████████▉| 243939/244489 [02:02<00:00, 625.05it/s]100%|█████████▉| 244003/244489 [02:03<00:00, 627.16it/s]100%|█████████▉| 244066/244489 [02:03<00:00, 620.80it/s]100%|█████████▉| 244129/244489 [02:03<00:00, 617.30it/s]100%|█████████▉| 244191/244489 [02:03<00:00, 616.06it/s]100%|█████████▉| 244253/244489 [02:03<00:00, 613.56it/s]100%|█████████▉| 244315/244489 [02:03<00:00, 611.62it/s]100%|█████████▉| 244379/244489 [02:03<00:00, 616.75it/s]100%|█████████▉| 244446/244489 [02:03<00:00, 631.46it/s]100%|██████████| 244489/244489 [02:03<00:00, 1974.68it/s]
  0%|          | 0/34927 [00:00<?, ?it/s]  0%|          | 45/34927 [00:00<01:17, 448.96it/s]  0%|          | 103/34927 [00:00<01:08, 508.68it/s]  0%|          | 165/34927 [00:00<01:02, 557.55it/s]  1%|          | 221/34927 [00:00<01:03, 547.79it/s]  1%|          | 280/34927 [00:00<01:01, 562.39it/s]  1%|          | 341/34927 [00:00<00:59, 577.41it/s]  1%|          | 399/34927 [00:00<01:01, 561.41it/s]  1%|▏         | 459/34927 [00:00<01:01, 563.70it/s]  1%|▏         | 516/34927 [00:00<01:02, 555.00it/s]  2%|▏         | 572/34927 [00:01<01:02, 551.73it/s]  2%|▏         | 628/34927 [00:01<01:02, 547.08it/s]  2%|▏         | 704/34927 [00:01<00:59, 575.94it/s]  2%|▏         | 788/34927 [00:01<00:53, 636.34it/s]  2%|▏         | 862/34927 [00:01<00:51, 664.54it/s]  3%|▎         | 956/34927 [00:01<00:50, 668.56it/s]  3%|▎         | 1023/34927 [00:01<00:54, 626.72it/s]  3%|▎         | 1097/34927 [00:01<00:51, 656.20it/s]  3%|▎         | 1172/34927 [00:01<00:49, 680.14it/s]  4%|▎         | 1255/34927 [00:02<00:46, 721.96it/s]  4%|▍         | 1348/34927 [00:02<00:43, 780.69it/s]  4%|▍         | 1444/34927 [00:02<00:40, 832.20it/s]  4%|▍         | 1538/34927 [00:02<00:38, 861.15it/s]  5%|▍         | 1631/34927 [00:02<00:37, 880.77it/s]  5%|▍         | 1720/34927 [00:02<00:38, 868.00it/s]  5%|▌         | 1808/34927 [00:02<00:40, 810.22it/s]  5%|▌         | 1890/34927 [00:02<00:42, 774.44it/s]  6%|▌         | 1969/34927 [00:02<00:43, 755.62it/s]  6%|▌         | 2046/34927 [00:03<00:44, 741.38it/s]  6%|▌         | 2121/34927 [00:03<00:45, 728.01it/s]  6%|▋         | 2195/34927 [00:03<00:46, 707.16it/s]  6%|▋         | 2267/34927 [00:03<00:46, 710.00it/s]  7%|▋         | 2339/34927 [00:03<00:45, 708.61it/s]  7%|▋         | 2410/34927 [00:03<00:46, 698.17it/s]  7%|▋         | 2617/34927 [00:03<00:29, 1093.53it/s]  8%|▊         | 2821/34927 [00:03<00:23, 1368.88it/s]  9%|▉         | 3071/34927 [00:03<00:18, 1701.35it/s]  9%|▉         | 3292/34927 [00:03<00:17, 1850.04it/s] 10%|█         | 3549/34927 [00:04<00:15, 2061.47it/s] 11%|█         | 3814/34927 [00:04<00:13, 2236.41it/s] 12%|█▏        | 4074/34927 [00:04<00:13, 2338.52it/s] 12%|█▏        | 4309/34927 [00:04<00:13, 2334.09it/s] 13%|█▎        | 4555/34927 [00:04<00:12, 2370.49it/s] 14%|█▎        | 4793/34927 [00:04<00:13, 2153.63it/s] 14%|█▍        | 5021/34927 [00:04<00:14, 1994.33it/s] 15%|█▌        | 5314/34927 [00:04<00:14, 1995.86it/s] 16%|█▌        | 5517/34927 [00:04<00:16, 1837.61it/s] 16%|█▋        | 5704/34927 [00:05<00:16, 1794.76it/s] 17%|█▋        | 5886/34927 [00:05<00:16, 1737.65it/s] 17%|█▋        | 6061/34927 [00:05<00:31, 916.48it/s]  18%|█▊        | 6196/34927 [00:05<00:34, 823.08it/s] 18%|█▊        | 6309/34927 [00:06<00:36, 785.14it/s] 18%|█▊        | 6408/34927 [00:06<00:37, 755.50it/s] 19%|█▊        | 6497/34927 [00:06<00:37, 762.65it/s] 19%|█▉        | 6593/34927 [00:06<00:35, 801.91it/s] 19%|█▉        | 6682/34927 [00:06<00:35, 805.68it/s] 19%|█▉        | 6769/34927 [00:06<00:34, 818.87it/s] 20%|█▉        | 6864/34927 [00:06<00:32, 852.34it/s] 20%|█▉        | 6953/34927 [00:06<00:34, 812.94it/s] 20%|██        | 7038/34927 [00:06<00:34, 811.73it/s] 20%|██        | 7122/34927 [00:07<00:36, 766.32it/s] 21%|██        | 7201/34927 [00:07<00:38, 725.49it/s] 21%|██        | 7275/34927 [00:07<00:39, 703.17it/s] 21%|██        | 7347/34927 [00:07<00:40, 674.36it/s] 21%|██        | 7416/34927 [00:07<00:41, 665.55it/s] 21%|██▏       | 7483/34927 [00:07<00:41, 665.83it/s] 22%|██▏       | 7550/34927 [00:07<00:41, 665.30it/s] 22%|██▏       | 7617/34927 [00:07<00:41, 664.70it/s] 22%|██▏       | 7693/34927 [00:07<00:39, 690.65it/s] 22%|██▏       | 7767/34927 [00:08<00:38, 704.46it/s] 22%|██▏       | 7838/34927 [00:08<00:39, 680.75it/s] 23%|██▎       | 7907/34927 [00:08<00:49, 540.96it/s] 23%|██▎       | 7966/34927 [00:08<00:50, 528.76it/s] 23%|██▎       | 8048/34927 [00:08<00:48, 551.77it/s] 23%|██▎       | 8115/34927 [00:08<00:46, 580.21it/s] 23%|██▎       | 8176/34927 [00:08<00:50, 531.63it/s] 24%|██▎       | 8243/34927 [00:08<00:47, 564.63it/s] 24%|██▍       | 8302/34927 [00:09<00:51, 519.12it/s] 24%|██▍       | 8357/34927 [00:09<00:50, 526.75it/s] 24%|██▍       | 8424/34927 [00:09<00:46, 564.60it/s] 24%|██▍       | 8503/34927 [00:09<00:44, 595.65it/s] 25%|██▍       | 8595/34927 [00:09<00:38, 683.31it/s] 25%|██▍       | 8665/34927 [00:09<00:38, 673.86it/s] 25%|██▌       | 8734/34927 [00:09<00:38, 674.62it/s] 25%|██▌       | 8803/34927 [00:09<00:39, 668.32it/s] 25%|██▌       | 8890/34927 [00:09<00:37, 693.68it/s] 26%|██▌       | 8975/34927 [00:10<00:37, 699.99it/s] 26%|██▌       | 9055/34927 [00:10<00:36, 718.21it/s] 26%|██▌       | 9127/34927 [00:10<00:43, 597.66it/s] 26%|██▋       | 9190/34927 [00:10<00:49, 518.85it/s] 27%|██▋       | 9269/34927 [00:10<00:44, 581.42it/s] 27%|██▋       | 9347/34927 [00:10<00:40, 630.82it/s] 27%|██▋       | 9419/34927 [00:10<00:39, 645.42it/s] 27%|██▋       | 9487/34927 [00:10<00:39, 639.89it/s] 27%|██▋       | 9574/34927 [00:11<00:36, 701.98it/s] 28%|██▊       | 9647/34927 [00:11<00:36, 698.40it/s] 28%|██▊       | 9739/34927 [00:11<00:33, 759.23it/s] 28%|██▊       | 9826/34927 [00:11<00:31, 790.61it/s] 28%|██▊       | 9917/34927 [00:11<00:30, 824.69it/s] 29%|██▉       | 10193/34927 [00:11<00:17, 1392.02it/s] 30%|███       | 10644/34927 [00:11<00:10, 2312.03it/s] 32%|███▏      | 11181/34927 [00:11<00:07, 3217.32it/s] 34%|███▍      | 11795/34927 [00:11<00:05, 4086.30it/s] 35%|███▍      | 12207/34927 [00:11<00:05, 3919.66it/s] 36%|███▌      | 12624/34927 [00:12<00:05, 3991.32it/s] 37%|███▋      | 13026/34927 [00:12<00:06, 3546.96it/s] 38%|███▊      | 13392/34927 [00:12<00:07, 2888.67it/s] 40%|███▉      | 13808/34927 [00:12<00:06, 3189.67it/s] 41%|████      | 14153/34927 [00:12<00:06, 3047.22it/s] 41%|████▏     | 14479/34927 [00:12<00:06, 3100.83it/s] 42%|████▏     | 14803/34927 [00:12<00:06, 3113.88it/s] 44%|████▍     | 15294/34927 [00:12<00:06, 3193.48it/s] 45%|████▌     | 15805/34927 [00:13<00:05, 3685.81it/s] 46%|████▋     | 16186/34927 [00:13<00:05, 3658.39it/s] 48%|████▊     | 16640/34927 [00:13<00:04, 3899.84it/s] 49%|████▉     | 17090/34927 [00:13<00:04, 4067.45it/s] 50%|█████     | 17585/34927 [00:13<00:04, 4318.85it/s] 52%|█████▏    | 18078/34927 [00:13<00:03, 4495.19it/s] 53%|█████▎    | 18660/34927 [00:13<00:03, 4883.41it/s] 55%|█████▌    | 19260/34927 [00:13<00:03, 5212.46it/s] 57%|█████▋    | 19803/34927 [00:13<00:02, 5275.41it/s] 58%|█████▊    | 20334/34927 [00:13<00:02, 5093.26it/s] 60%|█████▉    | 20847/34927 [00:14<00:02, 4719.80it/s] 61%|██████    | 21326/34927 [00:14<00:03, 4526.88it/s] 62%|██████▏   | 21785/34927 [00:14<00:02, 4498.90it/s] 64%|██████▍   | 22415/34927 [00:14<00:02, 5002.43it/s] 66%|██████▌   | 23017/34927 [00:14<00:02, 5290.88it/s] 68%|██████▊   | 23639/34927 [00:14<00:02, 5557.93it/s] 69%|██████▉   | 24241/34927 [00:14<00:01, 5692.62it/s] 71%|███████   | 24853/34927 [00:14<00:01, 5818.22it/s] 73%|███████▎  | 25449/34927 [00:14<00:01, 5858.53it/s] 75%|███████▍  | 26042/34927 [00:15<00:01, 5877.61it/s] 76%|███████▋  | 26632/34927 [00:15<00:01, 5560.54it/s] 78%|███████▊  | 27193/34927 [00:15<00:01, 5070.91it/s] 79%|███████▉  | 27711/34927 [00:15<00:01, 4862.14it/s] 81%|████████  | 28205/34927 [00:15<00:01, 4720.57it/s] 82%|████████▏ | 28683/34927 [00:15<00:01, 4605.38it/s] 83%|████████▎ | 29147/34927 [00:15<00:01, 4457.40it/s] 85%|████████▍ | 29595/34927 [00:15<00:01, 4347.13it/s] 86%|████████▌ | 30047/34927 [00:15<00:01, 4394.49it/s] 87%|████████▋ | 30488/34927 [00:16<00:01, 4321.88it/s] 89%|████████▊ | 30942/34927 [00:16<00:00, 4382.00it/s] 90%|████████▉ | 31382/34927 [00:16<00:00, 4313.14it/s] 91%|█████████ | 31814/34927 [00:16<00:00, 4253.55it/s] 92%|█████████▏| 32247/34927 [00:16<00:00, 4275.08it/s] 94%|█████████▎| 32675/34927 [00:16<00:00, 4110.52it/s] 95%|█████████▍| 33088/34927 [00:16<00:00, 3742.24it/s] 96%|█████████▌| 33469/34927 [00:16<00:00, 3728.17it/s] 97%|█████████▋| 33847/34927 [00:16<00:00, 3200.64it/s] 98%|█████████▊| 34182/34927 [00:17<00:00, 3143.34it/s] 99%|█████████▉| 34510/34927 [00:17<00:00, 3177.79it/s]100%|██████████| 34927/34927 [00:17<00:00, 2022.99it/s]
  0%|          | 0/69854 [00:00<?, ?it/s]  0%|          | 282/69854 [00:00<00:25, 2708.33it/s]  1%|          | 553/69854 [00:00<00:25, 2689.94it/s]  1%|          | 836/69854 [00:00<00:25, 2750.90it/s]  2%|▏         | 1140/69854 [00:00<00:24, 2862.27it/s]  2%|▏         | 1498/69854 [00:00<00:21, 3116.56it/s]  3%|▎         | 1849/69854 [00:00<00:20, 3248.88it/s]  3%|▎         | 2207/69854 [00:00<00:20, 3356.04it/s]  4%|▎         | 2550/69854 [00:00<00:19, 3378.52it/s]  4%|▍         | 2888/69854 [00:00<00:19, 3368.08it/s]  5%|▍         | 3225/69854 [00:01<00:21, 3100.33it/s]  5%|▌         | 3540/69854 [00:01<00:21, 3039.90it/s]  6%|▌         | 3899/69854 [00:01<00:20, 3196.30it/s]  6%|▌         | 4271/69854 [00:01<00:19, 3347.73it/s]  7%|▋         | 4625/69854 [00:01<00:19, 3403.40it/s]  7%|▋         | 4982/69854 [00:01<00:18, 3450.15it/s]  8%|▊         | 5329/69854 [00:01<00:18, 3454.93it/s]  8%|▊         | 5692/69854 [00:01<00:18, 3505.13it/s]  9%|▊         | 6044/69854 [00:01<00:18, 3462.22it/s]  9%|▉         | 6391/69854 [00:01<00:18, 3413.88it/s] 10%|▉         | 6733/69854 [00:02<00:19, 3287.23it/s] 10%|█         | 7063/69854 [00:02<00:19, 3247.54it/s] 11%|█         | 7430/69854 [00:02<00:18, 3367.57it/s] 11%|█         | 7768/69854 [00:02<00:19, 3220.31it/s] 12%|█▏        | 8092/69854 [00:02<00:19, 3215.90it/s] 12%|█▏        | 8415/69854 [00:02<00:26, 2293.01it/s] 12%|█▏        | 8682/69854 [00:02<00:28, 2180.50it/s] 13%|█▎        | 8998/69854 [00:02<00:25, 2403.68it/s] 13%|█▎        | 9275/69854 [00:03<00:24, 2492.80it/s] 14%|█▎        | 9544/69854 [00:03<00:25, 2373.34it/s] 14%|█▍        | 9828/69854 [00:03<00:24, 2492.50it/s] 14%|█▍        | 10111/69854 [00:03<00:23, 2582.68it/s] 15%|█▍        | 10379/69854 [00:03<00:22, 2587.89it/s] 15%|█▌        | 10730/69854 [00:03<00:20, 2846.45it/s] 16%|█▌        | 11089/69854 [00:03<00:19, 3059.01it/s] 16%|█▋        | 11401/69854 [00:03<00:19, 2982.97it/s] 17%|█▋        | 11786/69854 [00:03<00:17, 3230.59it/s] 17%|█▋        | 12113/69854 [00:04<00:18, 3187.67it/s] 18%|█▊        | 12495/69854 [00:04<00:17, 3369.45it/s] 18%|█▊        | 12877/69854 [00:04<00:16, 3500.34it/s] 19%|█▉        | 13258/69854 [00:04<00:15, 3589.24it/s] 20%|█▉        | 13631/69854 [00:04<00:15, 3630.86it/s] 20%|██        | 13996/69854 [00:04<00:15, 3522.40it/s] 21%|██        | 14350/69854 [00:04<00:17, 3254.71it/s] 21%|██        | 14729/69854 [00:04<00:16, 3402.87it/s] 22%|██▏       | 15074/69854 [00:04<00:16, 3276.59it/s] 22%|██▏       | 15438/69854 [00:04<00:16, 3377.54it/s] 23%|██▎       | 15810/69854 [00:05<00:15, 3474.88it/s] 23%|██▎       | 16161/69854 [00:05<00:15, 3483.74it/s] 24%|██▎       | 16512/69854 [00:05<00:15, 3445.52it/s] 24%|██▍       | 16858/69854 [00:05<00:16, 3139.42it/s] 25%|██▍       | 17178/69854 [00:05<00:21, 2443.64it/s] 25%|██▍       | 17449/69854 [00:05<00:21, 2468.16it/s] 25%|██▌       | 17742/69854 [00:05<00:20, 2581.82it/s] 26%|██▌       | 18069/69854 [00:05<00:18, 2760.07it/s] 26%|██▋       | 18369/69854 [00:06<00:18, 2824.12it/s] 27%|██▋       | 18662/69854 [00:06<00:18, 2707.05it/s] 27%|██▋       | 18941/69854 [00:06<00:19, 2627.94it/s] 28%|██▊       | 19210/69854 [00:06<00:25, 2008.74it/s] 28%|██▊       | 19458/69854 [00:06<00:23, 2116.20it/s] 28%|██▊       | 19690/69854 [00:06<00:24, 2057.74it/s] 29%|██▊       | 19979/69854 [00:06<00:22, 2265.99it/s] 29%|██▉       | 20246/69854 [00:06<00:20, 2370.69it/s] 29%|██▉       | 20604/69854 [00:06<00:18, 2700.76it/s] 30%|██▉       | 20925/69854 [00:07<00:17, 2843.13it/s] 30%|███       | 21218/69854 [00:07<00:17, 2818.34it/s] 31%|███       | 21506/69854 [00:07<00:17, 2776.17it/s] 31%|███       | 21813/69854 [00:07<00:16, 2858.87it/s] 32%|███▏      | 22134/69854 [00:07<00:16, 2958.42it/s] 32%|███▏      | 22433/69854 [00:07<00:17, 2740.50it/s] 33%|███▎      | 22747/69854 [00:07<00:16, 2851.30it/s] 33%|███▎      | 23037/69854 [00:07<00:17, 2751.56it/s] 33%|███▎      | 23316/69854 [00:07<00:17, 2686.63it/s] 34%|███▍      | 23638/69854 [00:08<00:16, 2834.85it/s] 34%|███▍      | 23925/69854 [00:08<00:16, 2701.73it/s] 35%|███▍      | 24207/69854 [00:08<00:16, 2732.33it/s] 35%|███▌      | 24483/69854 [00:08<00:16, 2673.59it/s] 35%|███▌      | 24752/69854 [00:08<00:17, 2618.89it/s] 36%|███▌      | 25015/69854 [00:08<00:17, 2594.51it/s] 36%|███▌      | 25296/69854 [00:08<00:16, 2656.15it/s] 37%|███▋      | 25563/69854 [00:08<00:16, 2650.72it/s] 37%|███▋      | 25829/69854 [00:08<00:16, 2623.03it/s] 37%|███▋      | 26092/69854 [00:09<00:16, 2602.29it/s] 38%|███▊      | 26353/69854 [00:09<00:16, 2588.67it/s] 38%|███▊      | 26633/69854 [00:09<00:16, 2650.35it/s] 39%|███▊      | 26899/69854 [00:09<00:16, 2638.91it/s] 39%|███▉      | 27182/69854 [00:09<00:15, 2693.99it/s] 39%|███▉      | 27452/69854 [00:09<00:16, 2621.85it/s] 40%|███▉      | 27715/69854 [00:09<00:16, 2603.00it/s] 40%|████      | 27976/69854 [00:09<00:16, 2586.34it/s] 40%|████      | 28235/69854 [00:09<00:16, 2531.17it/s] 41%|████      | 28530/69854 [00:09<00:15, 2652.56it/s] 41%|████      | 28796/69854 [00:10<00:16, 2528.77it/s] 42%|████▏     | 29110/69854 [00:10<00:15, 2700.99it/s] 42%|████▏     | 29407/69854 [00:10<00:14, 2778.79it/s] 43%|████▎     | 29704/69854 [00:10<00:14, 2831.89it/s] 43%|████▎     | 29989/69854 [00:10<00:14, 2753.27it/s] 43%|████▎     | 30361/69854 [00:10<00:13, 3032.69it/s] 44%|████▍     | 30728/69854 [00:10<00:12, 3217.77it/s] 45%|████▍     | 31116/69854 [00:10<00:11, 3411.17it/s] 45%|████▌     | 31459/69854 [00:10<00:11, 3314.98it/s] 46%|████▌     | 31793/69854 [00:11<00:12, 3023.90it/s] 46%|████▌     | 32101/69854 [00:11<00:12, 2986.37it/s] 46%|████▋     | 32404/69854 [00:11<00:12, 2892.61it/s] 47%|████▋     | 32697/69854 [00:11<00:12, 2864.89it/s] 47%|████▋     | 32986/69854 [00:11<00:13, 2821.38it/s] 48%|████▊     | 33270/69854 [00:11<00:14, 2534.02it/s] 48%|████▊     | 33529/69854 [00:11<00:16, 2170.36it/s] 48%|████▊     | 33785/69854 [00:11<00:15, 2264.59it/s] 49%|████▉     | 34161/69854 [00:11<00:13, 2649.31it/s] 49%|████▉     | 34439/69854 [00:12<00:13, 2662.71it/s] 50%|████▉     | 34723/69854 [00:12<00:12, 2709.90it/s] 50%|█████     | 35007/69854 [00:12<00:12, 2745.56it/s] 51%|█████     | 35458/69854 [00:12<00:10, 3252.56it/s] 51%|█████▏    | 35909/69854 [00:12<00:09, 3601.60it/s] 52%|█████▏    | 36365/69854 [00:12<00:08, 3881.29it/s] 53%|█████▎    | 36807/69854 [00:12<00:08, 4039.04it/s] 53%|█████▎    | 37248/69854 [00:12<00:07, 4148.74it/s] 54%|█████▍    | 37707/69854 [00:12<00:07, 4278.14it/s] 55%|█████▍    | 38149/69854 [00:12<00:07, 4319.39it/s] 55%|█████▌    | 38608/69854 [00:13<00:07, 4398.79it/s] 56%|█████▌    | 39049/69854 [00:13<00:07, 4400.07it/s] 57%|█████▋    | 39496/69854 [00:13<00:06, 4418.33it/s] 57%|█████▋    | 39939/69854 [00:13<00:06, 4371.03it/s] 58%|█████▊    | 40377/69854 [00:13<00:07, 4113.36it/s] 58%|█████▊    | 40792/69854 [00:13<00:07, 4014.10it/s] 59%|█████▉    | 41196/69854 [00:13<00:07, 3904.34it/s] 60%|█████▉    | 41589/69854 [00:13<00:08, 3404.44it/s] 60%|██████    | 41952/69854 [00:13<00:08, 3463.04it/s] 61%|██████    | 42401/69854 [00:14<00:07, 3740.62it/s] 61%|██████▏   | 42852/69854 [00:14<00:06, 3953.63it/s] 62%|██████▏   | 43281/69854 [00:14<00:06, 3946.19it/s] 63%|██████▎   | 43700/69854 [00:14<00:06, 4014.81it/s] 63%|██████▎   | 44106/69854 [00:14<00:06, 3897.18it/s] 64%|██████▎   | 44500/69854 [00:14<00:06, 3856.83it/s] 64%|██████▍   | 44921/69854 [00:14<00:06, 3956.69it/s] 65%|██████▍   | 45324/69854 [00:14<00:06, 3976.28it/s] 65%|██████▌   | 45724/69854 [00:14<00:06, 3940.40it/s] 66%|██████▌   | 46149/69854 [00:14<00:05, 4028.19it/s] 67%|██████▋   | 46553/69854 [00:15<00:05, 3952.49it/s] 67%|██████▋   | 46972/69854 [00:15<00:05, 4020.96it/s] 68%|██████▊   | 47375/69854 [00:15<00:05, 4012.29it/s] 68%|██████▊   | 47777/69854 [00:15<00:05, 3969.88it/s] 69%|██████▉   | 48191/69854 [00:15<00:05, 4017.86it/s] 70%|██████▉   | 48594/69854 [00:15<00:05, 3919.87it/s] 70%|███████   | 49009/69854 [00:15<00:05, 3986.30it/s] 71%|███████   | 49409/69854 [00:15<00:05, 3898.62it/s] 71%|███████▏  | 49808/69854 [00:15<00:05, 3922.29it/s] 72%|███████▏  | 50209/69854 [00:16<00:05, 3916.28it/s] 72%|███████▏  | 50631/69854 [00:16<00:04, 4003.93it/s] 73%|███████▎  | 51033/69854 [00:16<00:04, 4008.31it/s] 74%|███████▎  | 51435/69854 [00:16<00:04, 4009.57it/s] 74%|███████▍  | 51857/69854 [00:16<00:04, 4070.80it/s] 75%|███████▍  | 52265/69854 [00:16<00:04, 4058.12it/s] 75%|███████▌  | 52671/69854 [00:16<00:04, 4051.22it/s] 76%|███████▌  | 53079/69854 [00:16<00:04, 4058.09it/s] 77%|███████▋  | 53485/69854 [00:16<00:04, 4056.30it/s] 77%|███████▋  | 53891/69854 [00:16<00:04, 3885.71it/s] 78%|███████▊  | 54282/69854 [00:17<00:04, 3879.79it/s] 78%|███████▊  | 54672/69854 [00:17<00:03, 3860.05it/s] 79%|███████▉  | 55159/69854 [00:17<00:03, 4154.81it/s] 80%|███████▉  | 55662/69854 [00:17<00:03, 4310.71it/s] 80%|████████  | 56094/69854 [00:17<00:03, 3976.87it/s] 81%|████████  | 56499/69854 [00:17<00:03, 3995.48it/s] 82%|████████▏ | 57041/69854 [00:17<00:02, 4398.67it/s] 82%|████████▏ | 57486/69854 [00:17<00:02, 4363.73it/s] 83%|████████▎ | 57926/69854 [00:17<00:02, 4053.61it/s] 84%|████████▎ | 58338/69854 [00:18<00:03, 3331.28it/s] 84%|████████▍ | 58695/69854 [00:18<00:03, 3116.07it/s] 84%|████████▍ | 59024/69854 [00:18<00:03, 3059.10it/s] 85%|████████▌ | 59383/69854 [00:18<00:03, 3192.60it/s] 86%|████████▌ | 59734/69854 [00:18<00:03, 3275.19it/s] 86%|████████▌ | 60082/69854 [00:18<00:02, 3328.93it/s] 87%|████████▋ | 60448/69854 [00:18<00:02, 3420.99it/s] 87%|████████▋ | 60798/69854 [00:18<00:02, 3442.75it/s] 88%|████████▊ | 61168/69854 [00:18<00:02, 3517.11it/s] 88%|████████▊ | 61555/69854 [00:19<00:02, 3618.80it/s] 89%|████████▊ | 61920/69854 [00:19<00:02, 3594.46it/s] 89%|████████▉ | 62286/69854 [00:19<00:02, 3611.69it/s] 90%|████████▉ | 62649/69854 [00:19<00:01, 3613.02it/s] 90%|█████████ | 63012/69854 [00:19<00:01, 3607.93it/s] 91%|█████████ | 63376/69854 [00:19<00:01, 3614.31it/s] 91%|█████████ | 63740/69854 [00:19<00:01, 3621.10it/s] 92%|█████████▏| 64112/69854 [00:19<00:01, 3648.82it/s] 92%|█████████▏| 64478/69854 [00:19<00:01, 3558.11it/s] 93%|█████████▎| 64835/69854 [00:19<00:01, 3437.74it/s] 93%|█████████▎| 65180/69854 [00:20<00:01, 3390.02it/s] 94%|█████████▍| 65594/69854 [00:20<00:01, 3605.07it/s] 95%|█████████▍| 66034/69854 [00:20<00:00, 3835.04it/s] 95%|█████████▌| 66420/69854 [00:20<00:00, 3792.49it/s] 96%|█████████▌| 66820/69854 [00:20<00:00, 3851.81it/s] 96%|█████████▌| 67207/69854 [00:20<00:00, 3783.53it/s] 97%|█████████▋| 67587/69854 [00:20<00:00, 3370.02it/s] 97%|█████████▋| 67991/69854 [00:20<00:00, 3549.73it/s] 98%|█████████▊| 68354/69854 [00:20<00:00, 3543.20it/s] 98%|█████████▊| 68714/69854 [00:21<00:00, 3309.02it/s] 99%|█████████▉| 69153/69854 [00:21<00:00, 3604.24it/s]100%|█████████▉| 69521/69854 [00:21<00:00, 3348.00it/s]100%|██████████| 69854/69854 [00:21<00:00, 3265.81it/s]
  0%|          | 0/244489 [00:00<?, ?it/s]  1%|          | 2786/244489 [00:00<00:08, 27858.37it/s]  2%|▏         | 5685/244489 [00:00<00:08, 28521.79it/s]  4%|▎         | 8687/244489 [00:00<00:08, 29203.08it/s]  5%|▍         | 11608/244489 [00:00<00:08, 28775.00it/s]  6%|▌         | 14793/244489 [00:00<00:07, 29869.51it/s]  7%|▋         | 17893/244489 [00:00<00:07, 30248.36it/s]  9%|▊         | 20920/244489 [00:00<00:07, 30191.75it/s] 10%|▉         | 23941/244489 [00:00<00:08, 24572.34it/s] 11%|█         | 26559/244489 [00:01<00:12, 17157.06it/s] 12%|█▏        | 28662/244489 [00:01<00:14, 14413.92it/s] 12%|█▏        | 30413/244489 [00:01<00:16, 13200.35it/s] 13%|█▎        | 31942/244489 [00:01<00:17, 12134.63it/s] 14%|█▎        | 33293/244489 [00:01<00:17, 11846.51it/s] 14%|█▍        | 34565/244489 [00:01<00:18, 11599.52it/s] 15%|█▍        | 35780/244489 [00:02<00:18, 11418.97it/s] 15%|█▌        | 36957/244489 [00:02<00:18, 10927.26it/s] 16%|█▌        | 38097/244489 [00:02<00:18, 11042.07it/s] 16%|█▌        | 39260/244489 [00:02<00:18, 11194.52it/s] 17%|█▋        | 40420/244489 [00:02<00:18, 11303.53it/s] 17%|█▋        | 41578/244489 [00:02<00:17, 11379.89it/s] 17%|█▋        | 42725/244489 [00:02<00:18, 10966.14it/s] 18%|█▊        | 43883/244489 [00:02<00:18, 11136.47it/s] 18%|█▊        | 45064/244489 [00:02<00:17, 11327.18it/s] 19%|█▉        | 46252/244489 [00:02<00:17, 11487.37it/s] 19%|█▉        | 47405/244489 [00:03<00:17, 11083.99it/s] 20%|█▉        | 48590/244489 [00:03<00:17, 11301.79it/s] 20%|██        | 49784/244489 [00:03<00:16, 11485.05it/s] 21%|██        | 50976/244489 [00:03<00:16, 11612.21it/s] 21%|██▏       | 52165/244489 [00:03<00:16, 11693.11it/s] 22%|██▏       | 53337/244489 [00:03<00:17, 11226.27it/s] 22%|██▏       | 54520/244489 [00:03<00:16, 11399.37it/s] 23%|██▎       | 55706/244489 [00:03<00:16, 11533.52it/s] 23%|██▎       | 56896/244489 [00:03<00:16, 11639.71it/s] 24%|██▍       | 58086/244489 [00:04<00:15, 11713.93it/s] 24%|██▍       | 59260/244489 [00:04<00:16, 11285.80it/s] 25%|██▍       | 60453/244489 [00:04<00:16, 11471.89it/s] 25%|██▌       | 61637/244489 [00:04<00:15, 11577.51it/s] 26%|██▌       | 62818/244489 [00:04<00:15, 11643.56it/s] 26%|██▌       | 63986/244489 [00:04<00:15, 11651.92it/s] 27%|██▋       | 65153/244489 [00:04<00:16, 11124.73it/s] 27%|██▋       | 66342/244489 [00:04<00:15, 11344.15it/s] 28%|██▊       | 67482/244489 [00:04<00:15, 11337.89it/s] 28%|██▊       | 68637/244489 [00:04<00:15, 11398.62it/s] 29%|██▊       | 69827/244489 [00:05<00:15, 11544.89it/s] 29%|██▉       | 70984/244489 [00:05<00:15, 11113.38it/s] 30%|██▉       | 72170/244489 [00:05<00:15, 11327.95it/s] 30%|███       | 73349/244489 [00:05<00:14, 11462.90it/s] 30%|███       | 74526/244489 [00:05<00:14, 11550.72it/s] 31%|███       | 75684/244489 [00:05<00:15, 11139.55it/s] 31%|███▏      | 76864/244489 [00:05<00:14, 11328.80it/s] 32%|███▏      | 78043/244489 [00:05<00:14, 11462.22it/s] 32%|███▏      | 79223/244489 [00:05<00:14, 11559.76it/s] 33%|███▎      | 80405/244489 [00:05<00:14, 11635.85it/s] 33%|███▎      | 81571/244489 [00:06<00:14, 11198.64it/s] 34%|███▍      | 82747/244489 [00:06<00:14, 11360.28it/s] 34%|███▍      | 83983/244489 [00:06<00:13, 11652.72it/s] 35%|███▍      | 85192/244489 [00:06<00:13, 11779.32it/s] 35%|███▌      | 86409/244489 [00:06<00:13, 11893.21it/s] 36%|███▌      | 87601/244489 [00:06<00:13, 11582.49it/s] 36%|███▋      | 88808/244489 [00:06<00:13, 11723.34it/s] 37%|███▋      | 90067/244489 [00:06<00:12, 11977.00it/s] 37%|███▋      | 91276/244489 [00:06<00:12, 12006.44it/s] 38%|███▊      | 92491/244489 [00:06<00:12, 12046.40it/s] 38%|███▊      | 93697/244489 [00:07<00:12, 11611.40it/s] 39%|███▉      | 94905/244489 [00:07<00:12, 11746.73it/s] 39%|███▉      | 96113/244489 [00:07<00:12, 11842.08it/s] 40%|███▉      | 97300/244489 [00:07<00:12, 11564.98it/s] 40%|████      | 98520/244489 [00:07<00:12, 11748.37it/s] 41%|████      | 99749/244489 [00:07<00:12, 11904.66it/s] 41%|████▏     | 100942/244489 [00:07<00:12, 11906.04it/s] 42%|████▏     | 102142/244489 [00:07<00:11, 11932.42it/s] 42%|████▏     | 103341/244489 [00:07<00:11, 11948.05it/s] 43%|████▎     | 104537/244489 [00:08<00:11, 11838.02it/s] 43%|████▎     | 105722/244489 [00:08<00:11, 11761.70it/s] 44%|████▎     | 106899/244489 [00:08<00:11, 11500.30it/s] 44%|████▍     | 108107/244489 [00:08<00:11, 11669.57it/s] 45%|████▍     | 109299/244489 [00:08<00:11, 11741.53it/s] 45%|████▌     | 110509/244489 [00:08<00:11, 11530.37it/s] 46%|████▌     | 111741/244489 [00:08<00:11, 11759.95it/s] 46%|████▌     | 112970/244489 [00:08<00:11, 11913.94it/s] 47%|████▋     | 114207/244489 [00:08<00:10, 12048.04it/s] 47%|████▋     | 115414/244489 [00:08<00:10, 11808.94it/s] 48%|████▊     | 116649/244489 [00:09<00:10, 11965.97it/s] 48%|████▊     | 117888/244489 [00:09<00:10, 12090.51it/s] 49%|████▊     | 119136/244489 [00:09<00:10, 12204.53it/s] 49%|████▉     | 120358/244489 [00:09<00:10, 11981.93it/s] 50%|████▉     | 121600/244489 [00:09<00:10, 12109.66it/s] 50%|█████     | 122837/244489 [00:09<00:09, 12184.73it/s] 51%|█████     | 124057/244489 [00:09<00:09, 12173.96it/s] 51%|█████     | 125276/244489 [00:09<00:09, 12159.06it/s] 52%|█████▏    | 126493/244489 [00:09<00:10, 11742.91it/s] 52%|█████▏    | 127723/244489 [00:09<00:09, 11904.19it/s] 53%|█████▎    | 128958/244489 [00:10<00:09, 12033.81it/s] 53%|█████▎    | 130191/244489 [00:10<00:09, 12120.90it/s] 54%|█████▍    | 131422/244489 [00:10<00:09, 12175.68it/s] 54%|█████▍    | 132641/244489 [00:10<00:09, 12151.77it/s] 55%|█████▍    | 133858/244489 [00:10<00:09, 12015.61it/s] 55%|█████▌    | 135085/244489 [00:10<00:09, 12088.48it/s] 56%|█████▌    | 136295/244489 [00:10<00:09, 11946.56it/s] 56%|█████▋    | 137528/244489 [00:10<00:08, 12058.39it/s] 57%|█████▋    | 138735/244489 [00:10<00:08, 12048.10it/s] 57%|█████▋    | 139941/244489 [00:10<00:08, 11957.26it/s] 58%|█████▊    | 141138/244489 [00:11<00:08, 11913.35it/s] 58%|█████▊    | 142369/244489 [00:11<00:08, 12028.33it/s] 59%|█████▊    | 143573/244489 [00:11<00:08, 11838.68it/s] 59%|█████▉    | 144819/244489 [00:11<00:08, 12021.03it/s] 60%|█████▉    | 146022/244489 [00:11<00:08, 11987.20it/s] 60%|██████    | 147263/244489 [00:11<00:08, 12112.35it/s] 61%|██████    | 148475/244489 [00:11<00:07, 12044.51it/s] 61%|██████    | 149690/244489 [00:11<00:07, 12074.75it/s] 62%|██████▏   | 150915/244489 [00:11<00:07, 12124.93it/s] 62%|██████▏   | 152196/244489 [00:11<00:07, 12328.80it/s] 63%|██████▎   | 153430/244489 [00:12<00:07, 12227.58it/s] 63%|██████▎   | 154709/244489 [00:12<00:07, 12392.16it/s] 64%|██████▍   | 155971/244489 [00:12<00:07, 12459.59it/s] 64%|██████▍   | 157255/244489 [00:12<00:06, 12571.55it/s] 65%|██████▍   | 158513/244489 [00:12<00:07, 12192.38it/s] 65%|██████▌   | 159756/244489 [00:12<00:06, 12259.61it/s] 66%|██████▌   | 161024/244489 [00:12<00:06, 12381.56it/s] 67%|██████▋   | 163432/244489 [00:12<00:05, 15847.01it/s] 67%|██████▋   | 165022/244489 [00:12<00:05, 14086.05it/s] 68%|██████▊   | 166470/244489 [00:13<00:06, 12479.22it/s] 69%|██████▊   | 167773/244489 [00:13<00:06, 12296.28it/s] 69%|██████▉   | 169040/244489 [00:13<00:06, 12190.22it/s] 70%|██████▉   | 170284/244489 [00:13<00:06, 12089.36it/s] 70%|███████   | 171510/244489 [00:13<00:06, 12012.78it/s] 71%|███████   | 172723/244489 [00:13<00:06, 11959.07it/s] 71%|███████   | 173927/244489 [00:13<00:06, 11402.57it/s] 72%|███████▏  | 175738/244489 [00:13<00:05, 13271.25it/s] 73%|███████▎  | 178613/244489 [00:13<00:03, 17678.55it/s] 74%|███████▍  | 181565/244489 [00:14<00:02, 21102.39it/s] 76%|███████▌  | 184773/244489 [00:14<00:02, 24310.27it/s] 77%|███████▋  | 187313/244489 [00:14<00:02, 24627.41it/s] 78%|███████▊  | 189802/244489 [00:14<00:03, 17742.05it/s] 78%|███████▊  | 191865/244489 [00:14<00:03, 15727.51it/s] 79%|███████▉  | 193667/244489 [00:14<00:03, 14464.51it/s] 80%|███████▉  | 195276/244489 [00:14<00:03, 13827.79it/s] 80%|████████  | 196766/244489 [00:15<00:03, 13342.50it/s] 81%|████████  | 198170/244489 [00:15<00:03, 12547.60it/s] 82%|████████▏ | 199471/244489 [00:15<00:03, 12327.97it/s] 82%|████████▏ | 200732/244489 [00:15<00:03, 12202.99it/s] 83%|████████▎ | 201971/244489 [00:15<00:03, 12168.75it/s] 83%|████████▎ | 203200/244489 [00:15<00:03, 12032.00it/s] 84%|████████▎ | 204411/244489 [00:15<00:03, 11908.34it/s] 84%|████████▍ | 205607/244489 [00:15<00:03, 11321.74it/s] 85%|████████▍ | 206778/244489 [00:15<00:03, 11427.56it/s] 85%|████████▌ | 207943/244489 [00:16<00:03, 11489.56it/s] 86%|████████▌ | 209122/244489 [00:16<00:03, 11574.51it/s] 86%|████████▌ | 210283/244489 [00:16<00:02, 11568.45it/s] 86%|████████▋ | 211444/244489 [00:16<00:02, 11579.94it/s] 87%|████████▋ | 212612/244489 [00:16<00:02, 11606.70it/s] 87%|████████▋ | 213783/244489 [00:16<00:02, 11635.21it/s] 88%|████████▊ | 214948/244489 [00:16<00:02, 11608.49it/s] 88%|████████▊ | 216131/244489 [00:16<00:02, 11671.53it/s] 89%|████████▉ | 217301/244489 [00:16<00:02, 11677.73it/s] 89%|████████▉ | 218491/244489 [00:16<00:02, 11743.03it/s] 90%|████████▉ | 219666/244489 [00:17<00:02, 11689.49it/s] 90%|█████████ | 220849/244489 [00:17<00:02, 11730.33it/s] 91%|█████████ | 222023/244489 [00:17<00:01, 11686.34it/s] 91%|█████████▏| 223209/244489 [00:17<00:01, 11737.77it/s] 92%|█████████▏| 224383/244489 [00:17<00:01, 11135.16it/s] 92%|█████████▏| 225535/244489 [00:17<00:01, 11245.67it/s] 93%|█████████▎| 226737/244489 [00:17<00:01, 11468.75it/s] 93%|█████████▎| 227935/244489 [00:17<00:01, 11618.67it/s] 94%|█████████▎| 229101/244489 [00:17<00:01, 11625.07it/s] 94%|█████████▍| 230330/244489 [00:17<00:01, 11820.39it/s] 95%|█████████▍| 231582/244489 [00:18<00:01, 12027.90it/s] 95%|█████████▌| 232787/244489 [00:18<00:01, 11614.64it/s] 96%|█████████▌| 234141/244489 [00:18<00:00, 12175.10it/s] 97%|█████████▋| 236208/244489 [00:18<00:00, 14671.53it/s] 98%|█████████▊| 239015/244489 [00:18<00:00, 18633.76it/s] 99%|█████████▉| 241793/244489 [00:18<00:00, 21349.01it/s]100%|██████████| 244489/244489 [00:18<00:00, 13093.66it/s]
  0%|          | 0/34927 [00:00<?, ?it/s]  8%|▊         | 2761/34927 [00:00<00:01, 27604.83it/s] 16%|█▌        | 5522/34927 [00:00<00:01, 24568.91it/s] 23%|██▎       | 8185/34927 [00:00<00:01, 25446.85it/s] 31%|███▏      | 10937/34927 [00:00<00:00, 26231.78it/s] 39%|███▉      | 13707/34927 [00:00<00:00, 26744.67it/s] 47%|████▋     | 16496/34927 [00:00<00:00, 27126.29it/s] 55%|█████▌    | 19287/34927 [00:00<00:00, 27379.20it/s] 63%|██████▎   | 22091/34927 [00:00<00:00, 27587.16it/s] 71%|███████   | 24854/34927 [00:00<00:00, 27379.15it/s] 79%|███████▉  | 27645/34927 [00:01<00:00, 27540.61it/s] 87%|████████▋ | 30415/34927 [00:01<00:00, 27586.04it/s] 95%|█████████▌| 33215/34927 [00:01<00:00, 27709.38it/s]100%|██████████| 34927/34927 [00:01<00:00, 27152.55it/s]
  0%|          | 0/69854 [00:00<?, ?it/s]  4%|▍         | 2768/69854 [00:00<00:02, 27669.21it/s]  8%|▊         | 5535/69854 [00:00<00:02, 27627.04it/s] 12%|█▏        | 8360/69854 [00:00<00:02, 27908.91it/s] 16%|█▌        | 11269/69854 [00:00<00:02, 28374.09it/s] 20%|██        | 14131/69854 [00:00<00:01, 28461.56it/s] 24%|██▍       | 16991/69854 [00:00<00:01, 28505.12it/s] 28%|██▊       | 19842/69854 [00:00<00:01, 28005.07it/s] 32%|███▏      | 22645/69854 [00:00<00:01, 27777.00it/s] 36%|███▋      | 25425/69854 [00:00<00:01, 27311.43it/s] 40%|████      | 28257/69854 [00:01<00:01, 27613.28it/s] 44%|████▍     | 31021/69854 [00:01<00:01, 27587.82it/s] 48%|████▊     | 33864/69854 [00:01<00:01, 27840.59it/s] 53%|█████▎    | 36681/69854 [00:01<00:01, 27938.47it/s] 57%|█████▋    | 39543/69854 [00:01<00:01, 28142.18it/s] 61%|██████    | 42370/69854 [00:01<00:00, 28179.80it/s] 65%|██████▍   | 45285/69854 [00:01<00:00, 28469.74it/s] 69%|██████▉   | 48179/69854 [00:01<00:00, 28607.97it/s] 73%|███████▎  | 51058/69854 [00:01<00:00, 28661.55it/s] 77%|███████▋  | 53939/69854 [00:01<00:00, 28705.58it/s] 81%|████████▏ | 56824/69854 [00:02<00:00, 28746.22it/s] 85%|████████▌ | 59708/69854 [00:02<00:00, 28773.83it/s] 90%|████████▉ | 62603/69854 [00:02<00:00, 28825.76it/s] 94%|█████████▎| 65486/69854 [00:02<00:00, 28659.33it/s] 98%|█████████▊| 68373/69854 [00:02<00:00, 28721.68it/s]100%|██████████| 69854/69854 [00:02<00:00, 28300.94it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.61it/s]Train:   5%|▌         | 3/60 [00:00<00:06,  8.65it/s]Train:  10%|█         | 6/60 [00:00<00:04, 13.30it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 16.91it/s]Train:  18%|█▊        | 11/60 [00:00<00:03, 14.96it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 17.82it/s]Train:  28%|██▊       | 17/60 [00:01<00:02, 19.92it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 17.90it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 19.67it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 18.32it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 19.62it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 21.89it/s]Train:  58%|█████▊    | 35/60 [00:02<00:01, 17.60it/s]Train:  65%|██████▌   | 39/60 [00:02<00:00, 21.07it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 19.60it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 22.62it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 20.41it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 22.05it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.48it/s]Train:  98%|█████████▊| 59/60 [00:03<00:00, 24.03it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 19.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 16.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.75it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 29.00it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 40.17it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.61it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.37it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.87it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.76it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 14.16it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 16.74it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 16.54it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 18.99it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 22.54it/s]Train:  40%|████      | 24/60 [00:01<00:01, 20.05it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 21.83it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 20.28it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.12it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.05it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.15it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 21.38it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 24.16it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 21.99it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.62it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.96it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 46.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:01,  8.56it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 29.95it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 29.15it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.96it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.73it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.87it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.20it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.64it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.13it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 21.80it/s]Train:  40%|████      | 24/60 [00:01<00:01, 25.11it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.51it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.80it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 23.20it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 26.47it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.39it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.80it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.61it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.51it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.89it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.89it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.42it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 14.16it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 35.06it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.28it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.23it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.14it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.49it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.90it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.56it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.20it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.28it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.80it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.48it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.44it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.44it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.76it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.02it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 20.99it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.73it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.79it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.71it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 23.02it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.40it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.57it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.69it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.89it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 44.19it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.72it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.95it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:07,  8.22it/s]Train:   3%|▎         | 2/60 [00:00<00:09,  6.03it/s]Train:   8%|▊         | 5/60 [00:00<00:04, 13.65it/s]Train:  15%|█▌        | 9/60 [00:00<00:03, 15.27it/s]Train:  20%|██        | 12/60 [00:00<00:02, 18.33it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.30it/s]Train:  32%|███▏      | 19/60 [00:01<00:02, 20.42it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.82it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.43it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.00it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.68it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.85it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.07it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 25.07it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 22.18it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.37it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 21.33it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.60it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00,  9.60it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 29.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 22.21it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.50it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.13it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.15it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.79it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.51it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.39it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.94it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.11it/s]Train:  40%|████      | 24/60 [00:01<00:01, 26.09it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.74it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.63it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.20it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.31it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.05it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.09it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.39it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.15it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.15it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.63it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.60it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.14it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 37.75it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 38.06it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 28.19it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.13it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 20.59it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 18.17it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.99it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 21.07it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 25.09it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.30it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.38it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.08it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.24it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.82it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.61it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 20.14it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.60it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 21.24it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.87it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.03it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.13it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 35.04it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.88it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.54it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.21it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.22it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.33it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 21.43it/s]Train:  40%|████      | 24/60 [00:01<00:01, 24.96it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.63it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.55it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.93it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.15it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.36it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.23it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.17it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 26.15it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.82it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 23.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.58it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.59it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.16it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.69it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.28it/s]Loading MSD from data/song/msd_clean.csv
Loading FMA from data/song/fma_clean.csv
Current MSD columns Index(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
       '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24',
       '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36',
       '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48',
       '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60',
       '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72',
       '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84',
       '85', '86', '87', '88', '89', 'title'],
      dtype='object')
Current FMA columns Index(['title', '0', '1', '2', '3', '4', '5', '6', '7', '8',
       ...
       '508', '509', '510', '511', '512', '513', '514', '515', '516', '517'],
      dtype='object', length=519)
Loading data from cache
Done
Calculating noise scale
Adding noise of scale 0.0 to sim_scores
Adding noise of scale 0.0 to sim_scores
Adding noise of scale 0.0 to sim_scores
Filter dataset to top 40
Generating top 40 dataset
Generating top 40 dataset
Generating top 40 dataset
Generating top1 dataset
Generating top1 dataset
Generating top1 dataset
Preparing time (sec): 325
Loading data
Prepare for training
Start training
================================================================================
                                    Kernel Shape Output Shape  Params  \
Layer                                                                   
0_local_models.0.fc_layers.Linear_0    [90, 200]  [4096, 200]   18200   
1_local_models.0.fc_layers.Linear_1   [200, 100]  [4096, 100]   20100   
2_local_models.1.fc_layers.Linear_0   [518, 200]  [4096, 200]  103800   
3_local_models.1.fc_layers.Linear_1   [200, 100]  [4096, 100]   20100   
4_agg_model.fc_layers.Linear_0        [200, 400]  [4096, 400]   80400   
5_agg_model.fc_layers.Linear_1          [400, 1]    [4096, 1]     401   

                                     Mult-Adds  
Layer                                           
0_local_models.0.fc_layers.Linear_0      18000  
1_local_models.0.fc_layers.Linear_1      20000  
2_local_models.1.fc_layers.Linear_0     103600  
3_local_models.1.fc_layers.Linear_1      20000  
4_agg_model.fc_layers.Linear_0           80000  
5_agg_model.fc_layers.Linear_1             400  
--------------------------------------------------------------------------------
                      Totals
Total params          243001
Trainable params      243001
Non-trainable params       0
Mult-Adds             242000
================================================================================
n_classes=2
task=regression
model_name=song_top1sim_2022-02-03-23-30-00
sche_threshold=0.0001
sche_patience=10
sche_factor=0.1
use_scheduler=False
num_workers=4
device=cuda:2
test_batch_size=4096
train_batch_size=4096
learning_rate=0.001
weight_decay=1e-05
num_epochs=100
model_save_path=ckp/song_top1sim_2022-02-03-23-30-00.pth
test_rate=0.2
val_rate=0.1
multiprocess_context=fork
metrics=['r2_score', 'rmse', 'mae']
metrics_f=[<metric.r2_score.R2Score object at 0x7efd861c6e50>, <metric.rmse.RMSE object at 0x7efd861c6940>, <metric.mae.MAE object at 0x7efd861c6ca0>]
hidden_sizes=[200, 100]
model=SplitNN(
  (agg_model): MLP(
    (fc_layers): ModuleList(
      (0): Linear(in_features=200, out_features=400, bias=True)
      (1): Linear(in_features=400, out_features=1, bias=True)
    )
  )
  (local_models): ModuleList(
    (0): MLP(
      (fc_layers): ModuleList(
        (0): Linear(in_features=90, out_features=200, bias=True)
        (1): Linear(in_features=200, out_features=100, bias=True)
      )
    )
    (1): MLP(
      (fc_layers): ModuleList(
        (0): Linear(in_features=518, out_features=200, bias=True)
        (1): Linear(in_features=200, out_features=100, bias=True)
      )
    )
  )
)
writer=<torch.utils.tensorboard.writer.SummaryWriter object at 0x7efd861c6e20>
dataset_type=real
drop_key=True
num_common_features=1
tree_radius=0.01
tree_leaf_size=1000
knn_k=40
grid_min=-10.0
grid_max=10.0
grid_width=1.5
sim_scaler=StandardScaler()
filter_top_k=40
link_n_jobs=1
psig_p=4
sim_leak_p=1.0
link_threshold_t=0.1
link_epsilon=0.1
n_hash_lsh=50
edit_distance_threshold=10
n_hash_func=50
collision_rate=0.01
qgram_q=4
link_delta=0.01
feature_wise_sim=False
blocking_method=knn_str
center_threshold=0.5
n_clusters=100
local_hidden_sizes=[[200], [200]]
cut_dims=[100, 100]
agg_hidden_sizes=[400]
scale_analysis=None
data1_shape=(349270, 91)
data2_shape=(63147, 519)
Epoch 1: Loss:            : Train 0.0000, Val 0.0592, Test 0.0594
          R2_Score         : Train -6.5755, Val -3.5736, Test -3.7244
          RMSE             : Train 27.7916, Val 21.6285, Test 21.5874
          MAE              : Train 25.4252, Val 18.5243, Test 18.4925
Best:
          R2_Score         : Train -6.5755, Val -3.5736, Test -3.7244
          RMSE             : Train 27.7916, Val 21.6285, Test 21.5874
          MAE              : Train 25.4252, Val 18.5243, Test 18.4925
Epoch 2: Loss:            : Train 0.0000, Val 0.0191, Test 0.0190
          R2_Score         : Train -1.9020, Val -0.4807, Test -0.5148
          RMSE             : Train 17.2012, Val 12.3065, Test 12.2235
          MAE              : Train 14.1645, Val 9.9077, Test 9.8910
Best:
          R2_Score         : Train -1.9020, Val -0.4807, Test -0.5148
          RMSE             : Train 17.2012, Val 12.3065, Test 12.2235
          MAE              : Train 14.1645, Val 9.9077, Test 9.8910
Epoch 3: Loss:            : Train 0.0000, Val 0.0121, Test 0.0117
          R2_Score         : Train -0.0799, Val 0.0582, Test 0.0562
          RMSE             : Train 10.4928, Val 9.8146, Test 9.6486
          MAE              : Train 7.8975, Val 7.2429, Test 7.1826
Best:
          R2_Score         : Train -0.0799, Val 0.0582, Test 0.0562
          RMSE             : Train 10.4928, Val 9.8146, Test 9.6486
          MAE              : Train 7.8975, Val 7.2429, Test 7.1826
Epoch 4: Loss:            : Train 0.0000, Val 0.0110, Test 0.0106
          R2_Score         : Train 0.1125, Val 0.1431, Test 0.1450
          RMSE             : Train 9.5125, Val 9.3616, Test 9.1834
          MAE              : Train 6.9705, Val 6.8150, Test 6.7513
Best:
          R2_Score         : Train 0.1125, Val 0.1431, Test 0.1450
          RMSE             : Train 9.5125, Val 9.3616, Test 9.1834
          MAE              : Train 6.9705, Val 6.8150, Test 6.7513
Epoch 5: Loss:            : Train 0.0000, Val 0.0103, Test 0.0099
          R2_Score         : Train 0.1880, Val 0.2011, Test 0.2021
          RMSE             : Train 9.0990, Val 9.0393, Test 8.8713
          MAE              : Train 6.5737, Val 6.5177, Test 6.4604
Best:
          R2_Score         : Train 0.1880, Val 0.2011, Test 0.2021
          RMSE             : Train 9.0990, Val 9.0393, Test 8.8713
          MAE              : Train 6.5737, Val 6.5177, Test 6.4604
Epoch 6: Loss:            : Train 0.0000, Val 0.0097, Test 0.0094
          R2_Score         : Train 0.2422, Val 0.2449, Test 0.2438
          RMSE             : Train 8.7899, Val 8.7881, Test 8.6367
          MAE              : Train 6.2660, Val 6.2584, Test 6.2147
Best:
          R2_Score         : Train 0.2422, Val 0.2449, Test 0.2438
          RMSE             : Train 8.7899, Val 8.7881, Test 8.6367
          MAE              : Train 6.2660, Val 6.2584, Test 6.2147
Epoch 7: Loss:            : Train 0.0000, Val 0.0093, Test 0.0091
          R2_Score         : Train 0.2776, Val 0.2741, Test 0.2697
          RMSE             : Train 8.5822, Val 8.6168, Test 8.4873
          MAE              : Train 6.0628, Val 6.0436, Test 6.0148
Best:
          R2_Score         : Train 0.2776, Val 0.2741, Test 0.2697
          RMSE             : Train 8.5822, Val 8.6168, Test 8.4873
          MAE              : Train 6.0628, Val 6.0436, Test 6.0148
Epoch 8: Loss:            : Train 0.0000, Val 0.0091, Test 0.0089
          R2_Score         : Train 0.3013, Val 0.2895, Test 0.2847
          RMSE             : Train 8.4399, Val 8.5247, Test 8.3997
          MAE              : Train 5.9417, Val 6.0069, Test 5.9778
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.09it/s]Train:  10%|█         | 6/60 [00:00<00:02, 25.54it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.67it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.31it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.40it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.27it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.20it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.67it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.57it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.78it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.57it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.61it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.82it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.95it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.31it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 24.83it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.29it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.06it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.66it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 37.19it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.54it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.30it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 25.07it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.46it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.45it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.35it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.06it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 20.99it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.71it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.20it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.63it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.22it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.65it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.03it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.35it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.27it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.56it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.45it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 29.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 39.60it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 29.48it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 45.15it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.68it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.97it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.84it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.03it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.93it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.59it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.39it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.12it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 21.65it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.64it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.04it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 25.16it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.57it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.46it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.14it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.29it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.20it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.32it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.10it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.60it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.86it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.13it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.43it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.26it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.80it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.24it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.24it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 26.09it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.32it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.86it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.73it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 26.55it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.71it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.75it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.04it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.02it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 22.93it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.34it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 23.47it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 23.68it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.32it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 11.54it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 17.99it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 36.77it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 33.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.24it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:01, 28.72it/s]Train:  10%|█         | 6/60 [00:00<00:02, 19.45it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.10it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.11it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.27it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.48it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.76it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.69it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.53it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 23.01it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 25.77it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.50it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.44it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.41it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.46it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.63it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 24.56it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.36it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.96it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 31.48it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.70it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.41it/s]Train:  10%|█         | 6/60 [00:00<00:02, 26.30it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.41it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 26.72it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.58it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 27.49it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 24.13it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 27.45it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.28it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 27.62it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.61it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.70it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.78it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.10it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.33it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.57it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.93it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.83it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 45.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:   6%|▌         | 1/18 [00:00<00:02,  7.72it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 29.30it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 28.58it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 37.96it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.79it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.89it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 12.88it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.59it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 19.46it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.63it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.74it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.74it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.83it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.16it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.66it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.00it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.86it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.77it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.40it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 27.51it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.90it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.80it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.97it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 24.10it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 40.29it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.15it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.58it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.40it/s]Train:  10%|█         | 6/60 [00:00<00:04, 12.34it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.25it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 19.84it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.35it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 22.21it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.89it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.13it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.12it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.15it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.28it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.38it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 26.56it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.37it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.49it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.60it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.22it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.41it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.02it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.16it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.45it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.72it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.16it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.94it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.38it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.03it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.74it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.17it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.21it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.54it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.79it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.42it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 22.89it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.22it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 23.24it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 26.30it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.57it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.09it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.76it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.77it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.66it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.98it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.62it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.12it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.62it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.33it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.86it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.55it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.17it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.80it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.74it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.14it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 23.77it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 27.13it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.10it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 25.77it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.34it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.37it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.79it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.40it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.23it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.67it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 42.60it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.74it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 11.89it/s]Train:  10%|█         | 6/60 [00:00<00:02, 23.27it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.66it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.64it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 21.33it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.99it/s]Train:  40%|████      | 24/60 [00:01<00:01, 25.70it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.48it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 24.68it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 21.79it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 24.79it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 21.53it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 24.37it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.29it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.07it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.88it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.00it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.01it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 38.81it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.07it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.24it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.20it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.66it/s]Train:  30%|███       | 18/60 [00:00<00:01, 27.55it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.39it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.90it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.26it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.49it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 23.56it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 20.88it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.26it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.95it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 21.55it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 25.43it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.59it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.87it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 44.33it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.78it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.68it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.96it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.56it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.40it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.96it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.03it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.78it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.05it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.84it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 24.27it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 21.06it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.98it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 20.89it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 22.05it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 23.76it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 21.30it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.58it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.46it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 15.87it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.04it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 35.56it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.46it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.61it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.59it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.60it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.11it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.17it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.81it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.03it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 27.28it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.07it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.33it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.17it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.07it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.21it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.18it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 25.48it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.26it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.17it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 45.53it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.78it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 42.25it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 43.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.56it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.57it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.81it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.97it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.93it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 23.76it/s]Train:  40%|████      | 24/60 [00:00<00:01, 27.36it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 24.50it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 27.93it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 24.01it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.06it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.32it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.86it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 24.05it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 27.15it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.27it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 36.33it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 23.79it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 35.48it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 29.67it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.62it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.73it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 19.11it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.93it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 16.83it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.10it/s]Train:  35%|███▌      | 21/60 [00:01<00:02, 17.28it/s]Train:  40%|████      | 24/60 [00:01<00:01, 19.76it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 21.89it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 18.39it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 20.54it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 17.95it/s]Train:  67%|██████▋   | 40/60 [00:02<00:00, 20.88it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 22.53it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 18.93it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 19.13it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 17.80it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.01it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 20.87it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 19.12it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 39.38it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 37.08it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.29it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.24it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.40it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.01it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 16.73it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 20.59it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 17.33it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.68it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.80it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 23.63it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.48it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.54it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 20.97it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.82it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 20.59it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 21.50it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 22.97it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 20.63it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.77it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.85it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.59it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.52it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.67it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 32.02it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.33it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.37it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.94it/s]
Best:
          R2_Score         : Train 0.3013, Val 0.2895, Test 0.2847
          RMSE             : Train 8.4399, Val 8.5247, Test 8.3997
          MAE              : Train 5.9417, Val 6.0069, Test 5.9778
Epoch 9: Loss:            : Train 0.0000, Val 0.0090, Test 0.0088
          R2_Score         : Train 0.3178, Val 0.2979, Test 0.2940
          RMSE             : Train 8.3397, Val 8.4741, Test 8.3452
          MAE              : Train 5.8569, Val 5.9710, Test 5.9406
Best:
          R2_Score         : Train 0.3178, Val 0.2979, Test 0.2940
          RMSE             : Train 8.3397, Val 8.4741, Test 8.3452
          MAE              : Train 5.8569, Val 5.9710, Test 5.9406
Epoch 10: Loss:            : Train 0.0000, Val 0.0089, Test 0.0087
          R2_Score         : Train 0.3304, Val 0.3094, Test 0.3059
          RMSE             : Train 8.2625, Val 8.4046, Test 8.2743
          MAE              : Train 5.7955, Val 5.8488, Test 5.8164
Best:
          R2_Score         : Train 0.3304, Val 0.3094, Test 0.3059
          RMSE             : Train 8.2625, Val 8.4046, Test 8.2743
          MAE              : Train 5.7955, Val 5.8488, Test 5.8164
Epoch 11: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.3404, Val 0.3139, Test 0.3103
          RMSE             : Train 8.2005, Val 8.3769, Test 8.2481
          MAE              : Train 5.7461, Val 5.8108, Test 5.7776
Best:
          R2_Score         : Train 0.3404, Val 0.3139, Test 0.3103
          RMSE             : Train 8.2005, Val 8.3769, Test 8.2481
          MAE              : Train 5.7461, Val 5.8108, Test 5.7776
Epoch 12: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.3481, Val 0.3182, Test 0.3139
          RMSE             : Train 8.1527, Val 8.3506, Test 8.2264
          MAE              : Train 5.7116, Val 5.8185, Test 5.7890
Best:
          R2_Score         : Train 0.3481, Val 0.3182, Test 0.3139
          RMSE             : Train 8.1527, Val 8.3506, Test 8.2264
          MAE              : Train 5.7116, Val 5.8185, Test 5.7890
Epoch 13: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.3547, Val 0.3150, Test 0.3105
          RMSE             : Train 8.1115, Val 8.3703, Test 8.2468
          MAE              : Train 5.6809, Val 5.8845, Test 5.8453
Best:
          R2_Score         : Train 0.3481, Val 0.3182, Test 0.3139
          RMSE             : Train 8.1527, Val 8.3506, Test 8.2264
          MAE              : Train 5.7116, Val 5.8185, Test 5.7890
Epoch 14: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3610, Val 0.3221, Test 0.3186
          RMSE             : Train 8.0716, Val 8.3270, Test 8.1981
          MAE              : Train 5.6524, Val 5.7871, Test 5.7491
Best:
          R2_Score         : Train 0.3610, Val 0.3221, Test 0.3186
          RMSE             : Train 8.0716, Val 8.3270, Test 8.1981
          MAE              : Train 5.6524, Val 5.7871, Test 5.7491
Epoch 15: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3666, Val 0.3226, Test 0.3189
          RMSE             : Train 8.0363, Val 8.3240, Test 8.1964
          MAE              : Train 5.6285, Val 5.7568, Test 5.7200
Best:
          R2_Score         : Train 0.3666, Val 0.3226, Test 0.3189
          RMSE             : Train 8.0363, Val 8.3240, Test 8.1964
          MAE              : Train 5.6285, Val 5.7568, Test 5.7200
Epoch 16: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3721, Val 0.3227, Test 0.3184
          RMSE             : Train 8.0013, Val 8.3230, Test 8.1996
          MAE              : Train 5.6087, Val 5.7103, Test 5.6810
Best:
          R2_Score         : Train 0.3721, Val 0.3227, Test 0.3184
          RMSE             : Train 8.0013, Val 8.3230, Test 8.1996
          MAE              : Train 5.6087, Val 5.7103, Test 5.6810
Epoch 17: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 18: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3814, Val 0.3240, Test 0.3196
          RMSE             : Train 7.9420, Val 8.3153, Test 8.1922
          MAE              : Train 5.5653, Val 5.7432, Test 5.7036
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 19: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3862, Val 0.3234, Test 0.3189
          RMSE             : Train 7.9107, Val 8.3191, Test 8.1966
          MAE              : Train 5.5444, Val 5.7489, Test 5.7113
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 20: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3900, Val 0.3225, Test 0.3178
          RMSE             : Train 7.8863, Val 8.3246, Test 8.2035
          MAE              : Train 5.5334, Val 5.7975, Test 5.7598
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 21: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3949, Val 0.3221, Test 0.3187
          RMSE             : Train 7.8543, Val 8.3267, Test 8.1976
          MAE              : Train 5.5103, Val 5.7574, Test 5.7122
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 22: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.3991, Val 0.3215, Test 0.3135
          RMSE             : Train 7.8272, Val 8.3306, Test 8.2292
          MAE              : Train 5.4916, Val 5.7960, Test 5.7585
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 23: Loss:            : Train 0.0000, Val 0.0087, Test 0.0085
          R2_Score         : Train 0.4034, Val 0.3228, Test 0.3169
          RMSE             : Train 7.7994, Val 8.3227, Test 8.2086
          MAE              : Train 5.4777, Val 5.7324, Test 5.6988
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 24: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4077, Val 0.3131, Test 0.3079
          RMSE             : Train 7.7712, Val 8.3818, Test 8.2623
          MAE              : Train 5.4560, Val 5.8434, Test 5.8040
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 25: Loss:            : Train 0.0000, Val 0.0088, Test 0.0085
          R2_Score         : Train 0.4118, Val 0.3185, Test 0.3151
          RMSE             : Train 7.7444, Val 8.3491, Test 8.2196
          MAE              : Train 5.4414, Val 5.6769, Test 5.6375
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.32it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.80it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.65it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.53it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.02it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.84it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 27.15it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.80it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.97it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.79it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.87it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.66it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.05it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.38it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.74it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.65it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 47.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 22.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.22it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.98it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 39.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.07it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.48it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 19.23it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 25.33it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.03it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.43it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.09it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 23.20it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.86it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.75it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 24.21it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 21.01it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.61it/s]Train:  67%|██████▋   | 40/60 [00:01<00:01, 19.99it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 22.09it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 23.42it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.58it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.43it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.14it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.52it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.62it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.74it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.29it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.23it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.51it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.56it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.68it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.70it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.36it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.46it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.25it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.81it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 26.60it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.79it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 26.45it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 23.66it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.62it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.89it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.01it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.13it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.16it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.86it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 40.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.35it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.60it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 41.27it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.57it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.87it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.76it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.21it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 26.67it/s]Train:  30%|███       | 18/60 [00:00<00:01, 23.78it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 26.97it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.40it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.76it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.37it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.94it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.76it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 22.37it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.21it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.93it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.43it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 20.80it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 22.68it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.78it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.44it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.70it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.78it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.15it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.15it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.92it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.50it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.66it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.87it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.22it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 27.52it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.30it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.39it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.28it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 28.02it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.74it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.88it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 25.87it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.48it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.53it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.31it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.97it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 42.35it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 43.67it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 11.04it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.65it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.27it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.02it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.29it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 27.34it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.11it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 28.30it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.77it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.93it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.95it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 28.17it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 24.59it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.95it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.33it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.80it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.60it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 40.08it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.60it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.09it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.96it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.49it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.14it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.14it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.37it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.26it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.30it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.39it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.69it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.73it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.54it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 28.30it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.61it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 26.83it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.99it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 35.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.80it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.77it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.18it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 43.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 43.30it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.54it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.68it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.34it/s]Train:  20%|██        | 12/60 [00:00<00:02, 18.91it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.07it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.14it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 21.35it/s]Train:  40%|████      | 24/60 [00:01<00:01, 22.70it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 19.70it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.26it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 20.52it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 23.74it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 21.91it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 25.13it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 22.90it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 25.61it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.28it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.09it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 23.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 25.76it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 40.85it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 35.61it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.98it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.42it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.03it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.89it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.67it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 24.92it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.69it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.20it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 25.66it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 22.31it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.37it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.43it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 25.81it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 21.79it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 24.86it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 22.32it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.59it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.01it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.21it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.25it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 41.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.18it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.02it/s]Train:   8%|▊         | 5/60 [00:00<00:03, 16.97it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.27it/s]Train:  20%|██        | 12/60 [00:00<00:02, 20.75it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.51it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 21.60it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 24.52it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 21.56it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.43it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.22it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 21.04it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.74it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 20.57it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 23.83it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 20.62it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.82it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 19.70it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.87it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 20.20it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 17.51it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 33.38it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.62it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 32.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.80it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.47it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.02it/s]Train:  20%|██        | 12/60 [00:00<00:01, 26.35it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 22.94it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.87it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 23.90it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 27.51it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.61it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.06it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.78it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.02it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.06it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 23.78it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 26.94it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.07it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 27.16it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.94it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.63it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.46it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 42.72it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 17.25it/s]Train:   7%|▋         | 4/60 [00:00<00:06,  8.67it/s]Train:  13%|█▎        | 8/60 [00:00<00:03, 16.53it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 16.75it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 19.80it/s]Train:  30%|███       | 18/60 [00:01<00:02, 20.33it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 21.76it/s]Train:  40%|████      | 24/60 [00:01<00:01, 23.23it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 21.73it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.57it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 21.48it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.54it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.12it/s]Train:  72%|███████▏  | 43/60 [00:02<00:00, 22.22it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 25.78it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.79it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.60it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 23.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.03it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.10it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.95it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.23it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.65it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.26it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.68it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.24it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 20.41it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.44it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.93it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.34it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 22.94it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 26.57it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.95it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.79it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.69it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.35it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 22.98it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.27it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.25it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.21it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 24.45it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 34.07it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 27.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.46it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.11it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.37it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.78it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.04it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.17it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.27it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.20it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.90it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.71it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.85it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.95it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.45it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 28.43it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.49it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.80it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 24.13it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.40it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.23it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.51it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.81it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.79it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 40.26it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.42it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.60it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.65it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.44it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.53it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.50it/s]Train:  40%|████      | 24/60 [00:00<00:01, 24.76it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 27.94it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.01it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 28.45it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.96it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 28.89it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.84it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 25.35it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.27it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 25.54it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.18it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.87it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 30.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.85it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.01it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.95it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 41.92it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.05it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.35it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.80it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.24it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.62it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.24it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.42it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 24.08it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 20.61it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.77it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.69it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.16it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.27it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.65it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 21.59it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 25.40it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 23.53it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.63it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.79it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.59it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.14it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.21it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 32.90it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.81it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.22it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.12it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.71it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.87it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.24it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.76it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.56it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.02it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.16it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.69it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.60it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.45it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.06it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.00it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.57it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.73it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.11it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.94it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.58it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.47it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.67it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:07,  8.06it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.67it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 18.76it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 23.29it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 21.29it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.40it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.93it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.09it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.10it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.81it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.09it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.88it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 23.37it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.44it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.33it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.40it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.71it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.67it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 38.61it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.02it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.84it/s]
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 26: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4153, Val 0.3176, Test 0.3114
          RMSE             : Train 7.7210, Val 8.3546, Test 8.2418
          MAE              : Train 5.4244, Val 5.7975, Test 5.7575
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 27: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4200, Val 0.3143, Test 0.3061
          RMSE             : Train 7.6896, Val 8.3744, Test 8.2732
          MAE              : Train 5.4039, Val 5.8130, Test 5.7788
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 28: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4234, Val 0.3142, Test 0.3087
          RMSE             : Train 7.6671, Val 8.3753, Test 8.2580
          MAE              : Train 5.3906, Val 5.7491, Test 5.7058
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 29: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4273, Val 0.3161, Test 0.3095
          RMSE             : Train 7.6415, Val 8.3637, Test 8.2528
          MAE              : Train 5.3755, Val 5.7534, Test 5.7119
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 30: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4322, Val 0.3148, Test 0.3096
          RMSE             : Train 7.6083, Val 8.3715, Test 8.2524
          MAE              : Train 5.3515, Val 5.7094, Test 5.6704
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 31: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4360, Val 0.3165, Test 0.3089
          RMSE             : Train 7.5834, Val 8.3614, Test 8.2563
          MAE              : Train 5.3345, Val 5.7564, Test 5.7145
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 32: Loss:            : Train 0.0000, Val 0.0088, Test 0.0086
          R2_Score         : Train 0.4398, Val 0.3137, Test 0.3072
          RMSE             : Train 7.5572, Val 8.3783, Test 8.2668
          MAE              : Train 5.3171, Val 5.7281, Test 5.6864
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 33: Loss:            : Train 0.0000, Val 0.0089, Test 0.0086
          R2_Score         : Train 0.4442, Val 0.3119, Test 0.3053
          RMSE             : Train 7.5281, Val 8.3893, Test 8.2779
          MAE              : Train 5.3010, Val 5.7413, Test 5.7032
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 34: Loss:            : Train 0.0000, Val 0.0089, Test 0.0087
          R2_Score         : Train 0.4485, Val 0.3096, Test 0.3033
          RMSE             : Train 7.4988, Val 8.4031, Test 8.2899
          MAE              : Train 5.2781, Val 5.7443, Test 5.7030
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 35: Loss:            : Train 0.0000, Val 0.0089, Test 0.0087
          R2_Score         : Train 0.4522, Val 0.3086, Test 0.3020
          RMSE             : Train 7.4737, Val 8.4093, Test 8.2977
          MAE              : Train 5.2629, Val 5.7396, Test 5.6971
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 36: Loss:            : Train 0.0000, Val 0.0090, Test 0.0087
          R2_Score         : Train 0.4560, Val 0.3036, Test 0.2982
          RMSE             : Train 7.4475, Val 8.4397, Test 8.3204
          MAE              : Train 5.2444, Val 5.8124, Test 5.7617
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 37: Loss:            : Train 0.0000, Val 0.0089, Test 0.0087
          R2_Score         : Train 0.4597, Val 0.3046, Test 0.2970
          RMSE             : Train 7.4218, Val 8.4335, Test 8.3272
          MAE              : Train 5.2293, Val 5.7239, Test 5.6994
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 38: Loss:            : Train 0.0000, Val 0.0090, Test 0.0088
          R2_Score         : Train 0.4633, Val 0.3036, Test 0.2960
          RMSE             : Train 7.3970, Val 8.4397, Test 8.3331
          MAE              : Train 5.2143, Val 5.7679, Test 5.7273
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 39: Loss:            : Train 0.0000, Val 0.0092, Test 0.0089
          R2_Score         : Train 0.4682, Val 0.2885, Test 0.2831
          RMSE             : Train 7.3633, Val 8.5304, Test 8.4091
          MAE              : Train 5.1884, Val 5.8274, Test 5.7830
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 40: Loss:            : Train 0.0000, Val 0.0091, Test 0.0089
          R2_Score         : Train 0.4715, Val 0.2926, Test 0.2835
          RMSE             : Train 7.3407, Val 8.5064, Test 8.4068
          MAE              : Train 5.1741, Val 5.8438, Test 5.8106
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 41: Loss:            : Train 0.0000, Val 0.0092, Test 0.0090
          R2_Score         : Train 0.4755, Val 0.2834, Test 0.2767
          RMSE             : Train 7.3125, Val 8.5611, Test 8.4464
          MAE              : Train 5.1567, Val 5.9142, Test 5.8725
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 42: Loss:            : Train 0.0000, Val 0.0091, Test 0.0089
          R2_Score         : Train 0.4790, Val 0.2950, Test 0.2865
          RMSE             : Train 7.2884, Val 8.4916, Test 8.3890
          MAE              : Train 5.1431, Val 5.7580, Test 5.7273
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 43: Loss:            : Train 0.0000, Val 0.0092, Test 0.0090
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.88it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.86it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.57it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.19it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.09it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.92it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.72it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.20it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.09it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.17it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.44it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 22.82it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 25.64it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.15it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 23.77it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.06it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.73it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 28.09it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 39.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.87it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 21.44it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.24it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.32it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.65it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.97it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.19it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.44it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.59it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.62it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 25.02it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.87it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 24.01it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 26.59it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.83it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.90it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.48it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.41it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.69it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.16it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.39it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.92it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.84it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.44it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.35it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.44it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.80it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 26.81it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 23.39it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 26.73it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 23.50it/s]Train:  57%|█████▋    | 34/60 [00:01<00:00, 26.39it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.31it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.87it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.99it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.84it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.36it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.88it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 22.69it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.51it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.40it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 44.20it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.83it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 41.57it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.04it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.62it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.47it/s]Train:  20%|██        | 12/60 [00:00<00:02, 21.52it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.98it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.45it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.34it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.98it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 27.49it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.38it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.80it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.63it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.77it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.77it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 28.03it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.65it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 28.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.53it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 22.04it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.67it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.92it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 40.27it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 36.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 37.45it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.44it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.58it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.46it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.89it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.62it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.62it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.28it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.89it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.11it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.55it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.60it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.08it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.82it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.40it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.22it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.24it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 37.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 26.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.19it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 57.93it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 40.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 48.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:04, 12.72it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.04it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.89it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.66it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.39it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.50it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 23.44it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.51it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 22.36it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 23.45it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 21.50it/s]Train:  62%|██████▏   | 37/60 [00:01<00:01, 22.48it/s]Train:  67%|██████▋   | 40/60 [00:02<00:01, 16.42it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 19.77it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 18.53it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.80it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 20.63it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 19.37it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 31.72it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.43it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.37it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 32.63it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.38it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 14.99it/s]Train:   7%|▋         | 4/60 [00:00<00:03, 17.45it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.71it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 22.52it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.95it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 25.22it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.66it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.55it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.81it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.69it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.69it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.14it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.83it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 22.51it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 24.68it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 19.51it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.35it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.81it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 40.94it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.03it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.84it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.70it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.85it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.49it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.45it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 23.55it/s]Train:  20%|██        | 12/60 [00:00<00:02, 21.12it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 25.57it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 22.61it/s]Train:  38%|███▊      | 23/60 [00:00<00:01, 26.14it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.33it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.56it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.14it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 22.92it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.41it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.05it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.41it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 22.61it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.54it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 23.33it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.01it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.21it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.23it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 37.99it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.21it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.51it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 24.61it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.86it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.26it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.89it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.50it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 21.98it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.57it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.81it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 21.01it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.65it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.55it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 25.31it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 21.99it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 23.41it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 20.13it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.38it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.29it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.85it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 27.40it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 25.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 27.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.73it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 29.78it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 38.92it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 15.98it/s]Train:   7%|▋         | 4/60 [00:00<00:04, 13.20it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 21.69it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 18.93it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.17it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.56it/s]Train:  33%|███▎      | 20/60 [00:01<00:02, 19.21it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 21.11it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 18.64it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.58it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 19.61it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.52it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 21.66it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 23.13it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 24.62it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 20.91it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.88it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 20.44it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.11it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 21.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 15.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 21.35it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.20it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.95it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.73it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 16.71it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 20.85it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 17.62it/s]Train:  20%|██        | 12/60 [00:00<00:02, 22.07it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 19.37it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.58it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 21.00it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 24.11it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 21.56it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.87it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.30it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.42it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 22.78it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 23.79it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 26.40it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 22.54it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 25.25it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.26it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 44.55it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.12it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.83it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.19it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.27it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.08it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.72it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.05it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.34it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 25.96it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.66it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.40it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.27it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 23.22it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 25.74it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.22it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 25.49it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 23.18it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.16it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 21.76it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.73it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 19.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.25it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.45it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.57it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.49it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.51it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.83it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.76it/s]Train:  22%|██▏       | 13/60 [00:00<00:01, 25.02it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.54it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.28it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 21.70it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.69it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.92it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.42it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.66it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.33it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.19it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.48it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.47it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.63it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.70it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.37it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 40.68it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.28it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.78it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 37.20it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.35it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.62it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.02it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.26it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.46it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.00it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.47it/s]Train:  40%|████      | 24/60 [00:01<00:01, 25.73it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.16it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 25.20it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 22.66it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.09it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 21.85it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.29it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 22.73it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 25.90it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 22.87it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 24.43it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 17.90it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.14it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.31it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.83it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 33.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.32it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.11it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.51it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.92it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 20.00it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.96it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.52it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.15it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.23it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.65it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.92it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 20.99it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 22.16it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 20.09it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 23.57it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 21.38it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.60it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.88it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.42it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.54it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.43it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.19it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.26it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.49it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.51it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.76it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.70it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.41it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.36it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.29it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.51it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.40it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.55it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.62it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.04it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.75it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.01it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.18it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.13it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.37it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 25.21it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.81it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 30.32it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.49it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.48it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.30it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 18.92it/s]Train:  20%|██        | 12/60 [00:00<00:01, 24.23it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 21.63it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.40it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 22.83it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 26.24it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.54it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.73it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.73it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 27.40it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.35it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.51it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.84it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.53it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.11it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.36it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.30it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.17it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 41.08it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.31it/s]
          R2_Score         : Train 0.4826, Val 0.2850, Test 0.2799
          RMSE             : Train 7.2633, Val 8.5517, Test 8.4280
          MAE              : Train 5.1256, Val 5.8230, Test 5.7767
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 44: Loss:            : Train 0.0000, Val 0.0092, Test 0.0089
          R2_Score         : Train 0.4866, Val 0.2885, Test 0.2812
          RMSE             : Train 7.2347, Val 8.5307, Test 8.4203
          MAE              : Train 5.1038, Val 5.8128, Test 5.7737
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 45: Loss:            : Train 0.0000, Val 0.0092, Test 0.0090
          R2_Score         : Train 0.4902, Val 0.2835, Test 0.2761
          RMSE             : Train 7.2097, Val 8.5608, Test 8.4502
          MAE              : Train 5.0909, Val 5.8217, Test 5.7856
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 46: Loss:            : Train 0.0000, Val 0.0093, Test 0.0091
          R2_Score         : Train 0.4931, Val 0.2807, Test 0.2713
          RMSE             : Train 7.1889, Val 8.5776, Test 8.4780
          MAE              : Train 5.0775, Val 5.8810, Test 5.8508
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 47: Loss:            : Train 0.0000, Val 0.0093, Test 0.0091
          R2_Score         : Train 0.4967, Val 0.2765, Test 0.2695
          RMSE             : Train 7.1635, Val 8.6023, Test 8.4885
          MAE              : Train 5.0626, Val 5.8397, Test 5.8022
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 48: Loss:            : Train 0.0000, Val 0.0095, Test 0.0092
          R2_Score         : Train 0.5006, Val 0.2661, Test 0.2572
          RMSE             : Train 7.1359, Val 8.6638, Test 8.5596
          MAE              : Train 5.0444, Val 5.8747, Test 5.8411
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 49: Loss:            : Train 0.0000, Val 0.0093, Test 0.0091
          R2_Score         : Train 0.5035, Val 0.2741, Test 0.2634
          RMSE             : Train 7.1149, Val 8.6168, Test 8.5239
          MAE              : Train 5.0292, Val 5.8736, Test 5.8490
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 50: Loss:            : Train 0.0000, Val 0.0094, Test 0.0092
          R2_Score         : Train 0.5070, Val 0.2675, Test 0.2571
          RMSE             : Train 7.0897, Val 8.6558, Test 8.5605
          MAE              : Train 5.0144, Val 5.9388, Test 5.9060
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 51: Loss:            : Train 0.0000, Val 0.0093, Test 0.0091
          R2_Score         : Train 0.5101, Val 0.2755, Test 0.2689
          RMSE             : Train 7.0677, Val 8.6083, Test 8.4922
          MAE              : Train 5.0017, Val 5.8313, Test 5.7900
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 52: Loss:            : Train 0.0000, Val 0.0094, Test 0.0092
          R2_Score         : Train 0.5133, Val 0.2701, Test 0.2607
          RMSE             : Train 7.0442, Val 8.6405, Test 8.5399
          MAE              : Train 4.9849, Val 5.8241, Test 5.7900
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 53: Loss:            : Train 0.0000, Val 0.0095, Test 0.0092
          R2_Score         : Train 0.5169, Val 0.2646, Test 0.2565
          RMSE             : Train 7.0181, Val 8.6728, Test 8.5637
          MAE              : Train 4.9699, Val 5.8522, Test 5.8138
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 54: Loss:            : Train 0.0000, Val 0.0096, Test 0.0093
          R2_Score         : Train 0.5206, Val 0.2555, Test 0.2471
          RMSE             : Train 6.9910, Val 8.7265, Test 8.6178
          MAE              : Train 4.9514, Val 5.9522, Test 5.9211
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 55: Loss:            : Train 0.0000, Val 0.0095, Test 0.0093
          R2_Score         : Train 0.5235, Val 0.2611, Test 0.2519
          RMSE             : Train 6.9700, Val 8.6934, Test 8.5900
          MAE              : Train 4.9389, Val 5.8726, Test 5.8352
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 56: Loss:            : Train 0.0000, Val 0.0096, Test 0.0093
          R2_Score         : Train 0.5265, Val 0.2572, Test 0.2482
          RMSE             : Train 6.9481, Val 8.7166, Test 8.6116
          MAE              : Train 4.9239, Val 5.8883, Test 5.8567
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 57: Loss:            : Train 0.0000, Val 0.0095, Test 0.0093
          R2_Score         : Train 0.5300, Val 0.2600, Test 0.2510
          RMSE             : Train 6.9225, Val 8.6997, Test 8.5955
          MAE              : Train 4.9099, Val 5.8401, Test 5.8114
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 58: Loss:            : Train 0.0000, Val 0.0096, Test 0.0094
          R2_Score         : Train 0.5331, Val 0.2515, Test 0.2415
          RMSE             : Train 6.8996, Val 8.7495, Test 8.6495
          MAE              : Train 4.8907, Val 5.8663, Test 5.8369
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 59: Loss:            : Train 0.0000, Val 0.0098, Test 0.0095
          R2_Score         : Train 0.5357, Val 0.2405, Test 0.2316
          RMSE             : Train 6.8806, Val 8.8136, Test 8.7061
          MAE              : Train 4.8796, Val 5.9417, Test 5.9133
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 60: Loss:            : Train 0.0000, Val 0.0097, Test 0.0094
          R2_Score         : Train 0.5389, Val 0.2469, Test 0.2388
          RMSE             : Train 6.8568, Val 8.7766, Test 8.6651
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.59it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.75it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.45it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.55it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.71it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.52it/s]Train:  40%|████      | 24/60 [00:01<00:01, 26.02it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 23.37it/s]Train:  52%|█████▏    | 31/60 [00:01<00:01, 26.60it/s]Train:  57%|█████▋    | 34/60 [00:01<00:01, 23.73it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 27.14it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 24.29it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 27.31it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 24.63it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 27.66it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.60it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.72it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.50it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.83it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 18.45it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 36.81it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.12it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.78it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.23it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.75it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.07it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 22.50it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 26.43it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 23.42it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 26.68it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.49it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.64it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.81it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.90it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.72it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 26.57it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.34it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.06it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.68it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.54it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.56it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.12it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.07it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.06it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05,  9.71it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.60it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 22.50it/s]Train:  20%|██        | 12/60 [00:00<00:02, 19.29it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.81it/s]Train:  30%|███       | 18/60 [00:00<00:02, 18.81it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 20.68it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 20.47it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.05it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.26it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.73it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.91it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.94it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 23.99it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.64it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 24.33it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.16it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 20.24it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.91it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 38.69it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.31it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.74it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.87it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.22it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.21it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.00it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.77it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.43it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.29it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.62it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.33it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.52it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.29it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.26it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.51it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.81it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.02it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.74it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 44.15it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.35it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 44.58it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.00it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 43.15it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 43.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:07,  8.20it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.73it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 19.81it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.99it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.92it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 21.64it/s]Train:  40%|████      | 24/60 [00:01<00:01, 25.30it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 22.90it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 24.37it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.40it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.03it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.08it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 26.46it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 24.06it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 27.43it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.59it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 27.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.63it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.82it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.52it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.09it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.36it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.82it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.49it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.56it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.51it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.61it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 27.13it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.43it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.74it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.42it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.47it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.31it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.19it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 25.29it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.60it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.81it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.83it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.98it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.75it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.34it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.08it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.15it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.09it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.96it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.02it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.67it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.37it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.20it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.22it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.43it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.93it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.48it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.45it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.72it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 23.02it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 25.85it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.40it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.42it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  22%|██▏       | 2/9 [00:00<00:00, 18.75it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 14.58it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 24.83it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 21.41it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 35.99it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.96it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.25it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.90it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.52it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.68it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 21.95it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.43it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.68it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.11it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.51it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.41it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.31it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.53it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.13it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 23.72it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 26.14it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 23.31it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 26.20it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.73it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.61it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.05it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.60it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.59it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 41.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.34it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.94it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 22.12it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.47it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.07it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.88it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.29it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.58it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.65it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 26.53it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.98it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.39it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.65it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 20.83it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.58it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.23it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.05it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 14.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.76it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.03it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.09it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.25it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 24.09it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.37it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.25it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.40it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 23.91it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 24.29it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 21.21it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.10it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.38it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.30it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 21.47it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.80it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 20.29it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 23.49it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 22.37it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.21it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 22.61it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.53it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.34it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.02it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 42.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.72it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.20it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.24it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.08it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.65it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.94it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.10it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.03it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.92it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.84it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.12it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 26.77it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 23.89it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 27.31it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 24.15it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 27.37it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 24.65it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 27.93it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.97it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.62it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.98it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.73it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.33it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.44it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.31it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.73it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.74it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.85it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.34it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.45it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.17it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.39it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 25.40it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.98it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.72it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.11it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 25.33it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.11it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.44it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.03it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.84it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.57it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.57it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 31.79it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 33.85it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 30.79it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.60it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.08it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.96it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.71it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.29it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 24.24it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 21.50it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 25.39it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 22.89it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 25.18it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.24it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.70it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.67it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.83it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 23.21it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 26.05it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 22.92it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 23.86it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.79it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.28it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.64it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.00it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.08it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.60it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.89it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.70it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.56it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.89it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.34it/s]Train:  27%|██▋       | 16/60 [00:00<00:02, 21.56it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.61it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 20.36it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 23.62it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 19.92it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 20.71it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 20.84it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 18.06it/s]Train:  70%|███████   | 42/60 [00:02<00:00, 20.53it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 18.14it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 20.01it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 16.87it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 19.33it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 20.14it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 18.69it/s]Train: 100%|██████████| 60/60 [00:03<00:00, 19.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 54.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.10it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.00it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.08it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 39.98it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.11it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:07,  8.18it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.16it/s]Train:  15%|█▌        | 9/60 [00:00<00:02, 21.77it/s]Train:  20%|██        | 12/60 [00:00<00:02, 18.60it/s]Train:  25%|██▌       | 15/60 [00:00<00:02, 20.69it/s]Train:  30%|███       | 18/60 [00:00<00:02, 19.34it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 22.81it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 19.83it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.44it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.26it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.21it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.68it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 25.05it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 21.94it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.08it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.24it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.18it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 22.77it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.90it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.43it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.59it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.29it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:06,  9.72it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.40it/s]Train:  10%|█         | 6/60 [00:00<00:03, 16.64it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.16it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.19it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.58it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 21.89it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.70it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.39it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.71it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.70it/s]Train:  65%|██████▌   | 39/60 [00:01<00:01, 18.29it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 21.54it/s]Train:  77%|███████▋  | 46/60 [00:02<00:00, 19.84it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.60it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 19.47it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 21.05it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 18.64it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 20.96it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 56.36it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 38.63it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 39.40it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 41.94it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 34.51it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 39.84it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   2%|▏         | 1/60 [00:00<00:08,  6.67it/s]Train:   5%|▌         | 3/60 [00:00<00:06,  9.00it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 17.77it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 19.01it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 22.87it/s]Train:  30%|███       | 18/60 [00:00<00:02, 20.60it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 24.17it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.17it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.30it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.81it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.78it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.64it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.72it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 27.00it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 22.94it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.10it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 22.28it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 26.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.94it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.56it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.25it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.81it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.33it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 38.27it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.84it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.42it/s]
          MAE              : Train 4.8673, Val 5.9230, Test 5.8878
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 61: Loss:            : Train 0.0000, Val 0.0097, Test 0.0094
          R2_Score         : Train 0.5425, Val 0.2486, Test 0.2384
          RMSE             : Train 6.8296, Val 8.7669, Test 8.6674
          MAE              : Train 4.8464, Val 5.8922, Test 5.8619
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 62: Loss:            : Train 0.0000, Val 0.0097, Test 0.0094
          R2_Score         : Train 0.5453, Val 0.2465, Test 0.2429
          RMSE             : Train 6.8087, Val 8.7787, Test 8.6417
          MAE              : Train 4.8327, Val 5.9147, Test 5.8707
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 63: Loss:            : Train 0.0000, Val 0.0099, Test 0.0096
          R2_Score         : Train 0.5476, Val 0.2311, Test 0.2229
          RMSE             : Train 6.7916, Val 8.8680, Test 8.7549
          MAE              : Train 4.8238, Val 5.9737, Test 5.9349
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 64: Loss:            : Train 0.0000, Val 0.0098, Test 0.0095
          R2_Score         : Train 0.5513, Val 0.2403, Test 0.2338
          RMSE             : Train 6.7634, Val 8.8147, Test 8.6938
          MAE              : Train 4.8059, Val 5.9333, Test 5.8919
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 65: Loss:            : Train 0.0000, Val 0.0101, Test 0.0098
          R2_Score         : Train 0.5546, Val 0.2189, Test 0.2099
          RMSE             : Train 6.7386, Val 8.9382, Test 8.8281
          MAE              : Train 4.7901, Val 6.0212, Test 5.9869
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 66: Loss:            : Train 0.0000, Val 0.0100, Test 0.0097
          R2_Score         : Train 0.5559, Val 0.2249, Test 0.2194
          RMSE             : Train 6.7289, Val 8.9038, Test 8.7751
          MAE              : Train 4.7849, Val 5.9743, Test 5.9345
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 67: Loss:            : Train 0.0000, Val 0.0099, Test 0.0096
          R2_Score         : Train 0.5601, Val 0.2305, Test 0.2203
          RMSE             : Train 6.6971, Val 8.8715, Test 8.7697
          MAE              : Train 4.7650, Val 5.9657, Test 5.9381
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 68: Loss:            : Train 0.0000, Val 0.0100, Test 0.0097
          R2_Score         : Train 0.5625, Val 0.2218, Test 0.2129
          RMSE             : Train 6.6790, Val 8.9217, Test 8.8115
          MAE              : Train 4.7538, Val 6.0034, Test 5.9731
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 69: Loss:            : Train 0.0000, Val 0.0100, Test 0.0097
          R2_Score         : Train 0.5658, Val 0.2256, Test 0.2186
          RMSE             : Train 6.6534, Val 8.8995, Test 8.7794
          MAE              : Train 4.7340, Val 5.9687, Test 5.9250
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 70: Loss:            : Train 0.0000, Val 0.0100, Test 0.0097
          R2_Score         : Train 0.5682, Val 0.2231, Test 0.2165
          RMSE             : Train 6.6354, Val 8.9144, Test 8.7913
          MAE              : Train 4.7239, Val 5.9851, Test 5.9491
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 71: Loss:            : Train 0.0000, Val 0.0101, Test 0.0098
          R2_Score         : Train 0.5713, Val 0.2143, Test 0.2044
          RMSE             : Train 6.6112, Val 8.9647, Test 8.8589
          MAE              : Train 4.7087, Val 5.9978, Test 5.9669
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 72: Loss:            : Train 0.0000, Val 0.0101, Test 0.0098
          R2_Score         : Train 0.5728, Val 0.2141, Test 0.2090
          RMSE             : Train 6.5997, Val 8.9654, Test 8.8329
          MAE              : Train 4.6993, Val 6.0022, Test 5.9596
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 73: Loss:            : Train 0.0000, Val 0.0104, Test 0.0101
          R2_Score         : Train 0.5759, Val 0.1929, Test 0.1852
          RMSE             : Train 6.5760, Val 9.0858, Test 8.9653
          MAE              : Train 4.6827, Val 6.1145, Test 6.0771
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 74: Loss:            : Train 0.0000, Val 0.0101, Test 0.0098
          R2_Score         : Train 0.5788, Val 0.2121, Test 0.2028
          RMSE             : Train 6.5529, Val 8.9773, Test 8.8676
          MAE              : Train 4.6688, Val 5.9723, Test 5.9329
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 75: Loss:            : Train 0.0000, Val 0.0104, Test 0.0100
          R2_Score         : Train 0.5818, Val 0.1952, Test 0.1883
          RMSE             : Train 6.5297, Val 9.0727, Test 8.9480
          MAE              : Train 4.6554, Val 6.0479, Test 6.0058
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 76: Loss:            : Train 0.0000, Val 0.0103, Test 0.0099
          R2_Score         : Train 0.5838, Val 0.2000, Test 0.1959
          RMSE             : Train 6.5138, Val 9.0459, Test 8.9062
          MAE              : Train 4.6438, Val 6.0193, Test 5.9777
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 77: Loss:            : Train 0.0000, Val 0.0102, Test 0.0099
          R2_Score         : Train 0.5853, Val 0.2089, Test 0.1983
          RMSE             : Train 6.5023, Val 8.9955, Test 8.8925
          MAE              : Train 4.6417, Val 5.9859, Test 5.9623
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.79it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.93it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.32it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.67it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.04it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.30it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.66it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 23.73it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.98it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.24it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.99it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.16it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.14it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.19it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.50it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 23.95it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 39.86it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.21it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 42.43it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.66it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 39.74it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.10it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.29it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.86it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.59it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.84it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.08it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 25.51it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.22it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.64it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 22.49it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 25.08it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 23.05it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.19it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 21.60it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.35it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.87it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 21.93it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.38it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.20it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 21.16it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 20.98it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 36.67it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.53it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:02, 19.71it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 23.74it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 19.94it/s]Train:  20%|██        | 12/60 [00:00<00:01, 25.47it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 22.54it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 25.98it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 21.90it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 24.65it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.43it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 25.13it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 22.83it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 25.29it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.69it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 26.64it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 23.54it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.99it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.96it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.00it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.24it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.01it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.98it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 41.94it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.88it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.31it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.94it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.08it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.73it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.06it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.27it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.28it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.47it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.47it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.69it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.54it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 26.91it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.35it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.41it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 24.21it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.61it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.46it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.33it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.70it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.47it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 36.53it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.34it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.44it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.55it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.22it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.93it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.34it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.54it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.92it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.77it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.72it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.81it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.72it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.46it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.45it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 25.13it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.96it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.34it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 26.18it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 24.93it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 20.63it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 32.80it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 30.87it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  9.15it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.01it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.05it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 24.32it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 21.26it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.58it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.25it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.52it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 24.42it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 27.27it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.28it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.13it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.19it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 27.44it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.15it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.99it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.91it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 16.42it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 28.83it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 28.95it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 22.77it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 38.58it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 34.49it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.01it/s]Train:   8%|▊         | 5/60 [00:00<00:02, 21.39it/s]Train:  13%|█▎        | 8/60 [00:00<00:02, 18.60it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.09it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 19.03it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 20.75it/s]Train:  35%|███▌      | 21/60 [00:01<00:01, 20.21it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 23.73it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.62it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.25it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 24.24it/s]Train:  63%|██████▎   | 38/60 [00:01<00:01, 21.53it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 24.79it/s]Train:  75%|███████▌  | 45/60 [00:02<00:00, 21.46it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 24.84it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 21.86it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 25.37it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 22.58it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.50it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 48.59it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 35.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 57.64it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 37.88it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 46.34it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 13.75it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 22.69it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 21.24it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 25.23it/s]Train:  30%|███       | 18/60 [00:00<00:01, 22.02it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 25.46it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.48it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.32it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 26.30it/s]Train:  58%|█████▊    | 35/60 [00:01<00:01, 20.21it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.47it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 21.21it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 23.97it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 21.78it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 24.66it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 21.55it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.75it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.16it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 14.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.02it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  17%|█▋        | 3/18 [00:00<00:00, 27.85it/s]Test:  33%|███▎      | 6/18 [00:00<00:00, 21.08it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 35.46it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 32.05it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 33.46it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.54it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.73it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.01it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.34it/s]Train:  27%|██▋       | 16/60 [00:00<00:01, 22.38it/s]Train:  32%|███▏      | 19/60 [00:00<00:01, 23.80it/s]Train:  37%|███▋      | 22/60 [00:01<00:01, 21.14it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 25.03it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 22.54it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.76it/s]Train:  58%|█████▊    | 35/60 [00:01<00:00, 25.26it/s]Train:  63%|██████▎   | 38/60 [00:01<00:00, 22.74it/s]Train:  70%|███████   | 42/60 [00:01<00:00, 26.21it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 23.43it/s]Train:  82%|████████▏ | 49/60 [00:02<00:00, 26.76it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 23.76it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.06it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.31it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.99it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.76it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.11it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.59it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.94it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 42.03it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.17it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.10it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.71it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.90it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.26it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 21.12it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.91it/s]Train:  40%|████      | 24/60 [00:01<00:01, 26.01it/s]Train:  45%|████▌     | 27/60 [00:01<00:01, 21.46it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 22.94it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 20.28it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.58it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 21.32it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 23.66it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 21.66it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.26it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.39it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 22.77it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 17.29it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.54it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.45it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 39.57it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 35.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.69it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 22.84it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.31it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.78it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.49it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.24it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.06it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.61it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.57it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.39it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.54it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.57it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.01it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.72it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.54it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.46it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.17it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.27it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.40it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.42it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.88it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 41.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.10it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.23it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.01it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.74it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.25it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.16it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.53it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.74it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 26.05it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 23.61it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.65it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 23.94it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.12it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.26it/s]Train:  83%|████████▎ | 50/60 [00:02<00:00, 27.43it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.36it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 26.99it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.33it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.66it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 34.15it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.19it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 34.74it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 31.65it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.54it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:03, 18.22it/s]Train:   7%|▋         | 4/60 [00:00<00:02, 19.14it/s]Train:  10%|█         | 6/60 [00:00<00:03, 15.52it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.65it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 19.22it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 23.67it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.11it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 25.27it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.03it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.12it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.46it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.49it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 23.97it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.19it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.77it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.82it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.62it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.26it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  67%|██████▋   | 6/9 [00:00<00:00, 53.38it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 36.55it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 41.04it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 27.43it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 37.20it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 38.13it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.27it/s]Train:  10%|█         | 6/60 [00:00<00:02, 21.77it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.01it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.41it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.60it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.16it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 22.56it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.44it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 23.05it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.71it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 22.70it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 25.55it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 22.68it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 25.21it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 22.54it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 23.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 21.68it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 40.65it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.31it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 39.88it/s]Test:  44%|████▍     | 8/18 [00:00<00:00, 25.62it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 38.78it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.01it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 21.45it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.52it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.96it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.17it/s]Train:  30%|███       | 18/60 [00:00<00:01, 25.74it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 22.78it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.25it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 23.70it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 26.57it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 24.16it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 26.97it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.13it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.10it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.01it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 26.94it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 24.82it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.78it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.99it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.36it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 37.12it/s]Test:  50%|█████     | 9/18 [00:00<00:00, 41.69it/s]Test:  78%|███████▊  | 14/18 [00:00<00:00, 30.91it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.28it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:04, 12.73it/s]Train:  12%|█▏        | 7/60 [00:00<00:02, 21.65it/s]Train:  18%|█▊        | 11/60 [00:00<00:02, 20.76it/s]Train:  25%|██▌       | 15/60 [00:00<00:01, 24.49it/s]Train:  30%|███       | 18/60 [00:00<00:01, 21.84it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 24.48it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 21.30it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.52it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 22.96it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.81it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 23.02it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 26.02it/s]Train:  80%|████████  | 48/60 [00:02<00:00, 23.62it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 26.44it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.28it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.61it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 24.07it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 14.49it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.30it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 19.75it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.77it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 33.73it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 35.42it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.44it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.99it/s]Train:  17%|█▋        | 10/60 [00:00<00:01, 25.49it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 22.54it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.81it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.26it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.45it/s]Train:  47%|████▋     | 28/60 [00:01<00:01, 24.02it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 27.28it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 24.75it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 27.56it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 24.41it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 27.45it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 25.38it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 28.26it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.54it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.72it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 41.34it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.39it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.55it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 32.25it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 41.63it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 43.00it/s]
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 78: Loss:            : Train 0.0000, Val 0.0102, Test 0.0099
          R2_Score         : Train 0.5878, Val 0.2068, Test 0.2010
          RMSE             : Train 6.4826, Val 9.0072, Test 8.8774
          MAE              : Train 4.6244, Val 5.9634, Test 5.9224
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 79: Loss:            : Train 0.0000, Val 0.0103, Test 0.0099
          R2_Score         : Train 0.5915, Val 0.2027, Test 0.1944
          RMSE             : Train 6.4540, Val 9.0306, Test 8.9145
          MAE              : Train 4.6046, Val 6.0205, Test 5.9844
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 80: Loss:            : Train 0.0000, Val 0.0105, Test 0.0101
          R2_Score         : Train 0.5941, Val 0.1853, Test 0.1794
          RMSE             : Train 6.4334, Val 9.1284, Test 8.9969
          MAE              : Train 4.5928, Val 6.0712, Test 6.0313
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 81: Loss:            : Train 0.0000, Val 0.0105, Test 0.0101
          R2_Score         : Train 0.5960, Val 0.1874, Test 0.1811
          RMSE             : Train 6.4180, Val 9.1165, Test 8.9873
          MAE              : Train 4.5818, Val 6.0732, Test 6.0386
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 82: Loss:            : Train 0.0000, Val 0.0104, Test 0.0101
          R2_Score         : Train 0.5994, Val 0.1886, Test 0.1805
          RMSE             : Train 6.3908, Val 9.1099, Test 8.9906
          MAE              : Train 4.5656, Val 6.0661, Test 6.0292
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 83: Loss:            : Train 0.0000, Val 0.0105, Test 0.0100
          R2_Score         : Train 0.6010, Val 0.1861, Test 0.1818
          RMSE             : Train 6.3781, Val 9.1239, Test 8.9835
          MAE              : Train 4.5576, Val 6.0794, Test 6.0385
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 84: Loss:            : Train 0.0000, Val 0.0103, Test 0.0099
          R2_Score         : Train 0.6026, Val 0.2017, Test 0.1928
          RMSE             : Train 6.3653, Val 9.0363, Test 8.9230
          MAE              : Train 4.5479, Val 6.0365, Test 5.9968
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 85: Loss:            : Train 0.0000, Val 0.0106, Test 0.0103
          R2_Score         : Train 0.6061, Val 0.1777, Test 0.1679
          RMSE             : Train 6.3373, Val 9.1711, Test 9.0595
          MAE              : Train 4.5302, Val 6.0701, Test 6.0350
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 86: Loss:            : Train 0.0000, Val 0.0104, Test 0.0101
          R2_Score         : Train 0.6072, Val 0.1914, Test 0.1827
          RMSE             : Train 6.3281, Val 9.0944, Test 8.9785
          MAE              : Train 4.5258, Val 6.0508, Test 6.0071
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 87: Loss:            : Train 0.0000, Val 0.0106, Test 0.0102
          R2_Score         : Train 0.6109, Val 0.1768, Test 0.1735
          RMSE             : Train 6.2989, Val 9.1760, Test 9.0294
          MAE              : Train 4.5066, Val 6.0476, Test 6.0000
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 88: Loss:            : Train 0.0000, Val 0.0106, Test 0.0102
          R2_Score         : Train 0.6133, Val 0.1762, Test 0.1730
          RMSE             : Train 6.2794, Val 9.1793, Test 9.0317
          MAE              : Train 4.4936, Val 6.0487, Test 6.0065
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 89: Loss:            : Train 0.0000, Val 0.0107, Test 0.0103
          R2_Score         : Train 0.6151, Val 0.1731, Test 0.1638
          RMSE             : Train 6.2644, Val 9.1967, Test 9.0819
          MAE              : Train 4.4840, Val 6.0709, Test 6.0324
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 90: Loss:            : Train 0.0000, Val 0.0108, Test 0.0104
          R2_Score         : Train 0.6182, Val 0.1587, Test 0.1512
          RMSE             : Train 6.2394, Val 9.2761, Test 9.1502
          MAE              : Train 4.4644, Val 6.1049, Test 6.0689
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 91: Loss:            : Train 0.0000, Val 0.0107, Test 0.0103
          R2_Score         : Train 0.6203, Val 0.1733, Test 0.1658
          RMSE             : Train 6.2216, Val 9.1953, Test 9.0713
          MAE              : Train 4.4505, Val 6.0994, Test 6.0578
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 92: Loss:            : Train 0.0000, Val 0.0106, Test 0.0103
          R2_Score         : Train 0.6224, Val 0.1756, Test 0.1647
          RMSE             : Train 6.2045, Val 9.1827, Test 9.0773
          MAE              : Train 4.4432, Val 6.0486, Test 6.0118
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 93: Loss:            : Train 0.0000, Val 0.0109, Test 0.0105
          R2_Score         : Train 0.6246, Val 0.1541, Test 0.1482
          RMSE             : Train 6.1865, Val 9.3017, Test 9.1661
          MAE              : Train 4.4293, Val 6.1570, Test 6.1171
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 94: Loss:            : Train 0.0000, Val 0.0108, Test 0.0104
          R2_Score         : Train 0.6266, Val 0.1607, Test 0.1547
          RMSE             : Train 6.1705, Val 9.2653, Test 9.1314
          MAE              : Train 4.4200, Val 6.1324, Test 6.0857
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.95it/s]Train:  10%|█         | 6/60 [00:00<00:02, 20.49it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 20.63it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 25.16it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 22.47it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 26.57it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.27it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.31it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.49it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 26.76it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 24.71it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 27.48it/s]Train:  78%|███████▊  | 47/60 [00:01<00:00, 24.42it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 27.24it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 25.07it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 27.13it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.13it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 19.89it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 32.68it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.47it/s]Test:  61%|██████    | 11/18 [00:00<00:00, 37.90it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 34.82it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.60it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.39it/s]Train:  10%|█         | 6/60 [00:00<00:03, 17.60it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 23.92it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.48it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.26it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.16it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.53it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.18it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.25it/s]Train:  60%|██████    | 36/60 [00:01<00:01, 23.46it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 26.67it/s]Train:  73%|███████▎  | 44/60 [00:01<00:00, 24.59it/s]Train:  80%|████████  | 48/60 [00:01<00:00, 27.59it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 24.46it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 27.62it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 25.14it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.08it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 43.45it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 31.23it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.67it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 31.18it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 40.97it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 42.22it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:05, 10.36it/s]Train:  10%|█         | 6/60 [00:00<00:02, 22.24it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 21.71it/s]Train:  23%|██▎       | 14/60 [00:00<00:01, 26.07it/s]Train:  30%|███       | 18/60 [00:00<00:01, 24.02it/s]Train:  37%|███▋      | 22/60 [00:00<00:01, 27.52it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 24.70it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 27.53it/s]Train:  53%|█████▎    | 32/60 [00:01<00:01, 24.57it/s]Train:  60%|██████    | 36/60 [00:01<00:00, 27.61it/s]Train:  65%|██████▌   | 39/60 [00:01<00:00, 24.52it/s]Train:  72%|███████▏  | 43/60 [00:01<00:00, 27.75it/s]Train:  77%|███████▋  | 46/60 [00:01<00:00, 24.51it/s]Train:  83%|████████▎ | 50/60 [00:01<00:00, 27.59it/s]Train:  90%|█████████ | 54/60 [00:02<00:00, 25.28it/s]Train:  97%|█████████▋| 58/60 [00:02<00:00, 28.04it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.92it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.48it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 37.12it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.69it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  22%|██▏       | 4/18 [00:00<00:00, 20.88it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 37.34it/s]Test:  83%|████████▎ | 15/18 [00:00<00:00, 34.12it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 36.77it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 25.17it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.38it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.97it/s]Train:  22%|██▏       | 13/60 [00:00<00:02, 21.97it/s]Train:  28%|██▊       | 17/60 [00:00<00:01, 26.35it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 24.34it/s]Train:  42%|████▏     | 25/60 [00:00<00:01, 27.84it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 25.28it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 28.18it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.76it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.64it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 25.68it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 28.36it/s]Train:  88%|████████▊ | 53/60 [00:02<00:00, 25.91it/s]Train:  95%|█████████▌| 57/60 [00:02<00:00, 28.60it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  56%|█████▌    | 5/9 [00:00<00:00, 42.67it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 29.77it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 44.20it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.55it/s]Test:  89%|████████▉ | 16/18 [00:00<00:00, 39.44it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 40.80it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   3%|▎         | 2/60 [00:00<00:06,  8.57it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.21it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 18.34it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.30it/s]Train:  28%|██▊       | 17/60 [00:00<00:02, 20.01it/s]Train:  33%|███▎      | 20/60 [00:00<00:01, 22.21it/s]Train:  38%|███▊      | 23/60 [00:01<00:01, 23.24it/s]Train:  43%|████▎     | 26/60 [00:01<00:01, 20.49it/s]Train:  50%|█████     | 30/60 [00:01<00:01, 23.69it/s]Train:  55%|█████▌    | 33/60 [00:01<00:01, 21.17it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 23.95it/s]Train:  67%|██████▋   | 40/60 [00:01<00:00, 21.49it/s]Train:  73%|███████▎  | 44/60 [00:02<00:00, 24.82it/s]Train:  78%|███████▊  | 47/60 [00:02<00:00, 22.42it/s]Train:  85%|████████▌ | 51/60 [00:02<00:00, 25.62it/s]Train:  92%|█████████▏| 55/60 [00:02<00:00, 23.76it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 26.65it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 22.86it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  33%|███▎      | 3/9 [00:00<00:00, 18.03it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 33.90it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 23.28it/s]Test:  67%|██████▋   | 12/18 [00:00<00:00, 39.07it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 33.30it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 34.76it/s]
Train:   0%|          | 0/60 [00:00<?, ?it/s]Train:   5%|▌         | 3/60 [00:00<00:02, 23.69it/s]Train:  10%|█         | 6/60 [00:00<00:02, 18.11it/s]Train:  17%|█▋        | 10/60 [00:00<00:02, 24.72it/s]Train:  23%|██▎       | 14/60 [00:00<00:02, 22.99it/s]Train:  30%|███       | 18/60 [00:00<00:01, 26.78it/s]Train:  35%|███▌      | 21/60 [00:00<00:01, 23.21it/s]Train:  42%|████▏     | 25/60 [00:01<00:01, 26.16it/s]Train:  48%|████▊     | 29/60 [00:01<00:01, 24.12it/s]Train:  55%|█████▌    | 33/60 [00:01<00:00, 27.36it/s]Train:  62%|██████▏   | 37/60 [00:01<00:00, 25.24it/s]Train:  68%|██████▊   | 41/60 [00:01<00:00, 28.14it/s]Train:  75%|███████▌  | 45/60 [00:01<00:00, 25.69it/s]Train:  82%|████████▏ | 49/60 [00:01<00:00, 27.85it/s]Train:  87%|████████▋ | 52/60 [00:02<00:00, 24.21it/s]Train:  93%|█████████▎| 56/60 [00:02<00:00, 27.10it/s]Train:  98%|█████████▊| 59/60 [00:02<00:00, 23.96it/s]Train: 100%|██████████| 60/60 [00:02<00:00, 25.22it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Val:   0%|          | 0/9 [00:00<?, ?it/s]Val:  44%|████▍     | 4/9 [00:00<00:00, 38.40it/s]Val:  89%|████████▉ | 8/9 [00:00<00:00, 26.92it/s]Val: 100%|██████████| 9/9 [00:00<00:00, 30.73it/s]
/home/zhaomin/project/FedSim/src/model/vertical_fl/OnePartyModel.py:370: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  val_dataset = TensorDataset(torch.tensor(val_X).float(), torch.tensor(val_y).float())
Test:   0%|          | 0/18 [00:00<?, ?it/s]Test:  28%|██▊       | 5/18 [00:00<00:00, 43.48it/s]Test:  56%|█████▌    | 10/18 [00:00<00:00, 30.55it/s]Test:  94%|█████████▍| 17/18 [00:00<00:00, 41.55it/s]Test: 100%|██████████| 18/18 [00:00<00:00, 41.71it/s]

Epoch 95: Loss:            : Train 0.0000, Val 0.0110, Test 0.0105
          R2_Score         : Train 0.6293, Val 0.1499, Test 0.1419
          RMSE             : Train 6.1481, Val 9.3247, Test 9.2001
          MAE              : Train 4.4058, Val 6.1368, Test 6.0993
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 96: Loss:            : Train 0.0000, Val 0.0108, Test 0.0104
          R2_Score         : Train 0.6304, Val 0.1635, Test 0.1553
          RMSE             : Train 6.1387, Val 9.2497, Test 9.1279
          MAE              : Train 4.4000, Val 6.1029, Test 6.0633
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 97: Loss:            : Train 0.0000, Val 0.0108, Test 0.0104
          R2_Score         : Train 0.6328, Val 0.1584, Test 0.1538
          RMSE             : Train 6.1191, Val 9.2781, Test 9.1362
          MAE              : Train 4.3860, Val 6.1254, Test 6.0730
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 98: Loss:            : Train 0.0000, Val 0.0111, Test 0.0107
          R2_Score         : Train 0.6338, Val 0.1385, Test 0.1308
          RMSE             : Train 6.1101, Val 9.3871, Test 9.2593
          MAE              : Train 4.3786, Val 6.2156, Test 6.1728
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 99: Loss:            : Train 0.0000, Val 0.0110, Test 0.0106
          R2_Score         : Train 0.6365, Val 0.1433, Test 0.1352
          RMSE             : Train 6.0874, Val 9.3606, Test 9.2360
          MAE              : Train 4.3656, Val 6.1397, Test 6.0956
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Epoch 100: Loss:            : Train 0.0000, Val 0.0111, Test 0.0107
          R2_Score         : Train 0.6379, Val 0.1394, Test 0.1329
          RMSE             : Train 6.0762, Val 9.3823, Test 9.2481
          MAE              : Train 4.3615, Val 6.1935, Test 6.1423
Best:
          R2_Score         : Train 0.3768, Val 0.3244, Test 0.3206
          RMSE             : Train 7.9714, Val 8.3126, Test 8.1863
          MAE              : Train 5.5879, Val 5.7455, Test 5.7065
Training time (sec): 342
